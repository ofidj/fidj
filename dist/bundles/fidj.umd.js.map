{"version":3,"file":"fidj.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng://fidj/tools/base64.ts","ng://fidj/tools/storage.ts","ng://fidj/tools/xor.ts","ng://fidj/sdk/interfaces.ts","ng://fidj/version/index.ts","ng://fidj/connection/ajax.ts","ng://fidj/connection/client.ts","ng://fidj/sdk/error.ts","ng://fidj/connection/connection.ts","ng://fidj/session/session.ts","ng://fidj/session/error.ts","ng://fidj/sdk/logger.service.ts","ng://fidj/sdk/internal.service.ts","ng://fidj/sdk/angular.service.ts","ng://fidj/sdk/fidj.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class Base64 {\n\n    constructor() {\n    };\n\n    /**\n     * Decodes string from Base64 string\n     */\n    public static encode(input: string): string {\n\n        if (!input) {\n            return null;\n        }\n\n        const _btoa = require('btoa');\n\n        return _btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g,\n            function toSolidBytes(match, p1) {\n                return String.fromCharCode(parseInt('0x' + p1, 16));\n            }));\n\n    }\n\n    public static decode(input: string): string {\n\n        if (!input) {\n            return null;\n        }\n\n        const _atob = require('atob');\n\n        return decodeURIComponent(_atob(input).split('').map((c) => {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n\n    }\n}\n","/**\n * localStorage class factory\n * Usage : var LocalStorage = fidj.LocalStorageFactory(window.localStorage); // to create a new class\n * Usage : var localStorageService = new LocalStorage(); // to create a new instance\n */\nexport class LocalStorage {\n\n    public version = '0.1';\n    private storage;\n\n    // Constructor\n    constructor(storageService, private storageKey) {\n        this.storage = storageService || window.localStorage;\n        if (!this.storage) {\n            throw new Error('fidj.LocalStorageFactory needs a storageService!');\n        }\n        // todo LocalStorage refacto\n        //            if (!fidj.Xml) {\n        //                throw new Error('fidj.Xml needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Json) {\n        //                throw new Error('fidj.Json needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Xml.isXml || !fidj.Xml.xml2String || !fidj.Xml.string2Xml) {\n        //                throw new Error('fidj.Xml with isXml(), xml2String()\n        // and string2Xml() needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Json.object2String || !fidj.Json.string2Object) {\n        //                throw new Error('fidj.Json with object2String()\n        // and string2Object() needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //\n    }\n\n    // Public API\n\n    /**\n     * Sets a key's value.\n     *\n     * @param key - Key to set. If this value is not set or not\n     *              a string an exception is raised.\n     * @param value - Value to set. This can be any value that is JSON\n     *              compatible (Numbers, Strings, Objects etc.).\n     * @returns the stored value which is a container of user value.\n     */\n    set(key: string, value) {\n\n        key = this.storageKey + key;\n        this.checkKey(key);\n        // clone the object before saving to storage\n        const t = typeof(value);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: value})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: value});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: value});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: value});\n        } else {\n            // reject and do not insert\n            // if (typeof value == \"function\") for example\n            throw new TypeError('Value type ' + t + ' is invalid. It must be null, undefined, xml, string, number, boolean or object');\n        }\n        this.storage.setItem(key, value);\n        return value;\n    };\n\n    /**\n     * Looks up a key in cache\n     *\n     * @param key - Key to look up.\n     * @param def - Default value to return, if key didn't exist.\n     * @returns the key value, default value or <null>\n     */\n    get(key: string, def?) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const item = this.storage.getItem(key);\n        if (item !== null) {\n            if (item === 'null') {\n                return null;\n            }\n            const value = JSON.parse(item);\n\n            // var value = fidj.Json.string2Object(item);\n            // if ('xml' in value) {\n            //     return fidj.Xml.string2Xml(value.xml);\n            // } else\n            if ('string' in value) {\n                return value.string;\n            } else if ('number' in value) {\n                return value.number.valueOf();\n            } else if ('bool' in value) {\n                return value.bool.valueOf();\n            } else {\n                return value.json;\n            }\n        }\n        return !def ? null : def;\n    };\n\n    /**\n     * Deletes a key from cache.\n     *\n     * @param  key - Key to delete.\n     * @returns true if key existed or false if it didn't\n     */\n    remove(key: string) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const existed = (this.storage.getItem(key) !== null);\n        this.storage.removeItem(key);\n        return existed;\n    };\n\n    /**\n     * Deletes everything in cache.\n     *\n     * @return true\n     */\n    clear() {\n        const existed = (this.storage.length > 0);\n        this.storage.clear();\n        return existed;\n    };\n\n    /**\n     * How much space in bytes does the storage take?\n     *\n     * @returns Number\n     */\n    size() {\n        return this.storage.length;\n    };\n\n    /**\n     * Call function f on the specified context for each element of the storage\n     * from index 0 to index length-1.\n     * WARNING : You should not modify the storage during the loop !!!\n     *\n     * @param f - Function to call on every item.\n     * @param  context - Context (this for example).\n     * @returns Number of items in storage\n     */\n    foreach(f, context) {\n        const n = this.storage.length;\n        for (let i = 0; i < n; i++) {\n            const key = this.storage.key(i);\n            const value = this.get(key);\n            if (context) {\n                // f is an instance method on instance context\n                f.call(context, value);\n            } else {\n                // f is a function or class method\n                f(value);\n            }\n        }\n        return n;\n    };\n\n    // Private API\n    // helper functions and variables hidden within this function scope\n\n    private checkKey(key) {\n        if (!key || (typeof key !== 'string')) {\n            throw new TypeError('Key type must be string');\n        }\n        return true;\n    }\n}\n","import {Base64} from './base64';\n\nexport class Xor {\n\n    static header = 'artemis-lotsum';\n\n    constructor() {\n    };\n\n\n    public static encrypt(value: string, key: string): string {\n\n        let result = '';\n\n        value = Xor.header + value;\n\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode((value[i].charCodeAt(0).toString(10) as any) ^ Xor.keyCharAt(key, i));\n        }\n        result = Base64.encode(result);\n        return result;\n    };\n\n    public static decrypt(value: string, key: string, oldStyle?: boolean): string {\n        let result = '';\n        value = Base64.decode(value);\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode((value[i].charCodeAt(0).toString(10) as any) ^ Xor.keyCharAt(key, i));\n        }\n\n        if (!oldStyle && Xor.header !== result.substring(0, Xor.header.length)) {\n            return null;\n        }\n\n        if (!oldStyle) {\n            result = result.substring(Xor.header.length);\n        }\n        return result;\n    }\n\n    public static keyCharAt(key, i) {\n        return key[Math.floor(i % key.length)].charCodeAt(0).toString(10);\n    }\n\n\n}\n","// export namespace fidj {\n// }\nexport interface ErrorInterface {\n    code: number;\n    reason: string;\n}\n\nexport interface EndpointInterface {\n    key: string;\n    url: string;\n    blocked: boolean;\n}\n\nexport interface EndpointFilterInterface {\n    key?: string;\n    showBlocked?: boolean;\n}\n\n/**\n * Interface used by all InternalService wrappers (angular.js, angular.io)\n *\n * @see FidjModule\n * @see FidjModule, FidjAngularService\n */\nexport interface ModuleServiceInterface {\n\n    init(fidjId: string, options?: ModuleServiceInitOptionsInterface): Promise<void | ErrorInterface>;\n\n    login(login: string, password: string): Promise<any | ErrorInterface>;\n\n    loginAsDemo(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface>;\n\n    isLoggedIn(): boolean;\n\n    getRoles(): Array<string>;\n\n    getEndpoints(): Array<EndpointInterface>;\n\n    sendOnEndpoint(key: string, verb: string, relativePath?: string, data?: any): Promise<any | ErrorInterface>;\n\n    getIdToken(): string;\n\n    getMessage(): string;\n\n    logout(force?: boolean): Promise<void | ErrorInterface>;\n\n    sync(fnInitFirstData?: any): Promise<any | ErrorInterface>;\n\n    put(data: any): Promise<any | ErrorInterface>;\n\n    remove(dataId: any): Promise<any | ErrorInterface>;\n\n    find(id: string): Promise<any | ErrorInterface>;\n\n    findAll(): Promise<any | ErrorInterface>;\n}\n\n\nexport interface ModuleServiceInitOptionsInterface {\n    prod: boolean,\n    useDB?: boolean,\n    // forcedEndpoint?: string,\n    // forcedDBEndpoint?: string,\n    crypto?: boolean,\n    logLevel?: LoggerLevelEnum\n}\n\nexport interface ModuleServiceLoginOptionsInterface {\n    accessToken?: string,\n    idToken?: string,\n    refreshToken?: string,\n}\n\nexport interface SdkInterface {\n    org: string,\n    version: string,\n    prod: boolean,\n    useDB: boolean\n}\n\nexport enum LoggerLevelEnum {\n    LOG = 1,\n    WARN = 2,\n    ERROR = 3,\n    NONE = 4\n}\n\nexport interface LoggerInterface {\n    setLevel: (LoggerLevelEnum) => void;\n\n    log: (a?, b?, c?, d?, e?, f?) => any;\n    warn: (a?, b?, c?, d?, e?, f?) => any;\n    error: (a?, b?, c?, d?, e?, f?) => any;\n}\n","// bumped version via gulp\nexport const version = '2.1.32';\n","// import {XHRPromise} from './xhrpromise';\n// const superagent = require('superagent');\n// import from 'superagent';\n\nexport interface XhrOptionsInterface {\n    url: string,\n    data?: any,\n    headers?: any,\n    async?: boolean,\n    username?: string,\n    password?: string,\n    withCredentials?: boolean\n}\n\nexport enum XhrErrorReason {\n    UNKNOWN,\n    TIMEOUT,\n    STATUS\n}\n\n\nexport interface XhrErrorInterface {\n    reason: XhrErrorReason,\n    status: number,\n    code: number,\n    message: string,\n}\n\nexport class Ajax {\n\n    // private static xhr: XHRPromise = new XHRPromise();\n    private xhr; // : XHRPromise;\n\n    constructor() {\n\n        // https://www.twilio.com/blog/2017/08/http-requests-in-node-js.html\n        // axios ?\n        //  https://github.com/axios/axios\n        // const axios = require('axios');\n\n        // axios.get('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY')\n        //     .then(response => {\n        //         console.log(response.data.url);\n        //         console.log(response.data.explanation);\n        //     })\n\n        // superagent.get('https://api.nasa.gov/planetary/apod')\n        //     .query({ api_key: 'DEMO_KEY', date: '2017-08-02' })\n\n        this.xhr = require('axios'); // require('superagent'); // new XHRPromise();\n    };\n\n    private static formatResponseData(response: any): any {\n        // TODO switch depending on json headers\n        let dataParsed = response;\n\n        while (dataParsed && dataParsed.data) {\n            dataParsed = dataParsed.data;\n        }\n\n        try {\n            dataParsed = JSON.parse(dataParsed + '');\n        } catch (e) {\n        }\n        return dataParsed;\n    };\n\n    private static formatError(error: any): XhrErrorInterface {\n\n        const errorFormatted: XhrErrorInterface = {\n            reason: XhrErrorReason.UNKNOWN,\n            status: -1,\n            code: -1,\n            message: '',\n        };\n\n        if (error.status) {\n            errorFormatted.reason = XhrErrorReason.STATUS;\n            errorFormatted.status = parseInt(error.status, 10);\n            errorFormatted.code = parseInt(error.status, 10);\n        }\n\n        if (error.response) {\n            errorFormatted.message = error.response;\n\n            if (error.response.status) {\n                errorFormatted.reason = XhrErrorReason.STATUS;\n                errorFormatted.status = parseInt(error.response.status, 10);\n                errorFormatted.code = parseInt(error.response.status, 10);\n            } else if (error.response.status === null) { // timeout\n                errorFormatted.reason = XhrErrorReason.TIMEOUT;\n                errorFormatted.status = 408;\n                errorFormatted.code = 408;\n            }\n\n        } else if (error.request) {\n            errorFormatted.message = error.request;\n        } else if (error.message) {\n            errorFormatted.message = error.message;\n        }\n\n        // _this._handleError('browser', reject, null, 'browser doesn\\'t support XMLHttpRequest');\n        // _this._handleError('url', reject, null, 'URL is a required parameter');\n        // _this._handleError('parse', reject, null, 'invalid JSON response');\n        // return _this._handleError('error', reject);\n        // return _this._handleError('timeout', reject);\n        // return _this._handleError('abort', reject);\n        // return _this._handleError('send', reject, null, e.toString());\n\n        // if (err.reason === 'timeout') {\n        //     err.code = 408;\n        // } else {\n        //     err.code = 404;\n        // }\n\n        return errorFormatted;\n    };\n\n    public post(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n\n        const opt: any = {\n            method: 'POST',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n\n        return this.xhr\n            .post(opt.url, {\n                data: opt.data,\n                headers: opt.headers,\n                timeout: 10000\n            })\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n\n    public put(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n        const opt: any = {\n            method: 'PUT',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .put(opt.url, {\n                data: opt.data,\n                headers: opt.headers,\n                timeout: 10000\n            })\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n\n    public delete(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n        const opt: any = {\n            method: 'DELETE',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .delete(opt.url, {\n                data: opt.data,\n                headers: opt.headers,\n                timeout: 10000\n            })\n            // .delete(opt.url) // .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n\n    public get(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n        const opt: any = {\n            method: 'GET',\n            url: args.url\n        };\n        if (args.data) {\n            opt.data = args.data;\n        }\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .get(opt.url, {\n                data: opt.data,\n                headers: opt.headers,\n                timeout: 10000\n            })\n            // .get(opt.url) // .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n}\n","import {Ajax} from './ajax';\nimport {LocalStorage} from '../tools';\nimport {SdkInterface, ErrorInterface} from '../sdk/interfaces';\n\nexport class Client {\n\n    public clientId: string;\n    private clientUuid: string;\n    private clientInfo: string;\n    // private refreshToken: string;\n    private static refreshCountInitial = 1;\n    private static refreshCount = Client.refreshCountInitial;\n    private static _clientUuid = 'v2.clientUuid';\n    private static _clientId = 'v2.clientId';\n    private static _refreshCount = 'v2.refreshCount';\n\n    constructor(private appId: string,\n                private URI: string,\n                private storage: LocalStorage,\n                private sdk: SdkInterface) {\n\n        let uuid: string = this.storage.get(Client._clientUuid) || 'uuid-' + Math.random();\n        let info = '_clientInfo'; // this.storage.get(Client._clientInfo);\n        if (typeof window !== 'undefined' && window.navigator) {\n            info = window.navigator.appName + '@' + window.navigator.appVersion + '-' + window.navigator.userAgent;\n        }\n        if (typeof window !== 'undefined' && window['device'] && window['device'].uuid) {\n            uuid = window['device'].uuid;\n        }\n        this.setClientUuid(uuid);\n        this.setClientInfo(info);\n        this.clientId = this.storage.get(Client._clientId);\n        Client.refreshCount = this.storage.get(Client._refreshCount) || Client.refreshCountInitial;\n    };\n\n    public setClientId(value: string) {\n        this.clientId = '' + value;\n        this.storage.set(Client._clientId, this.clientId);\n    }\n\n    public setClientUuid(value: string) {\n        this.clientUuid = '' + value;\n        this.storage.set(Client._clientUuid, this.clientUuid);\n    }\n\n    public setClientInfo(value: string) {\n        this.clientInfo = '' + value;\n        // this.storage.set('clientInfo', this.clientInfo);\n    }\n\n    public login(login: string, password: string, updateProperties?: any): Promise<any | ErrorInterface> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        const urlLogin = this.URI + '/users';\n        const dataLogin = {\n            name: login,\n            username: login,\n            email: login,\n            password: password\n        };\n\n        return new Ajax()\n            .post({\n                url: urlLogin,\n                data: dataLogin,\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n            })\n            .then(createdUser => {\n\n                this.setClientId(createdUser._id);\n                const urlToken = this.URI + '/oauth/token';\n                const dataToken = {\n                    grant_type: 'client_credentials',\n                    client_id: this.clientId,\n                    client_secret: password,\n                    client_udid: this.clientUuid,\n                    client_info: this.clientInfo,\n                    audience: this.appId,\n                    scope: JSON.stringify(this.sdk)\n                };\n                return new Ajax()\n                    .post({\n                        url: urlToken,\n                        data: dataToken,\n                        headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                    });\n            });\n    }\n\n    public reAuthenticate(refreshToken: string): Promise<any | ErrorInterface> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        const url = this.URI + '/oauth/token';\n        const data = {\n            grant_type: 'refresh_token',\n            client_id: this.clientId,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            audience: this.appId,\n            scope: JSON.stringify(this.sdk),\n            refresh_token: refreshToken,\n            refresh_extra: Client.refreshCount,\n        };\n\n        return new Ajax()\n            .post({\n                url: url,\n                data: data,\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n            })\n            .then((obj: any) => {\n                Client.refreshCount++;\n                this.storage.set(Client._refreshCount, Client.refreshCount);\n                return Promise.resolve(obj);\n            });\n    }\n\n    public logout(refreshToken?: string): Promise<void | ErrorInterface> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        // delete this.clientUuid;\n        // delete this.clientId;\n        // this.storage.remove(Client._clientUuid);\n        this.storage.remove(Client._clientId);\n        this.storage.remove(Client._refreshCount);\n        Client.refreshCount = Client.refreshCountInitial;\n\n        if (!refreshToken || !this.clientId) {\n            return Promise.resolve();\n        }\n\n        const url = this.URI + '/oauth/revoke';\n        const data = {\n            token: refreshToken,\n            client_id: this.clientId,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            audience: this.appId,\n            scope: JSON.stringify(this.sdk)\n        };\n\n        return new Ajax()\n            .post({\n                url: url,\n                data: data,\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n            });\n    }\n\n    public isReady(): boolean {\n        return !!this.URI;\n    }\n}\n","import {ErrorInterface} from './interfaces';\n\nexport class Error implements ErrorInterface {\n\n    constructor(public code: number, public reason: string) {\n    };\n\n    equals(err: Error) {\n        return this.code === err.code && this.reason === err.reason;\n    }\n\n    toString(): string {\n        const msg: string = (typeof this.reason === 'string') ? this.reason : JSON.stringify(this.reason);\n        return '' + this.code + ' - ' + msg;\n    }\n\n}\n","import {Client} from './client';\nimport {ModuleServiceLoginOptionsInterface, SdkInterface, ErrorInterface, EndpointInterface, LoggerInterface} from '../sdk/interfaces';\nimport {Base64, LocalStorage, Xor} from '../tools';\nimport {Ajax} from './ajax';\nimport {ConnectionFindOptionsInterface} from './interfaces';\nimport {Error} from '../sdk/error';\n\nexport class Connection {\n\n    public fidjId: string;\n    public fidjVersion: string;\n    public fidjCrypto: boolean;\n    public accessToken: string;\n    public accessTokenPrevious: string;\n    public idToken: string;\n    public refreshToken: string;\n    public states: { [s: string]: { state: boolean, time: number, lastTimeWasOk: number }; }; // Map<string, boolean>;\n    public apis: Array<EndpointInterface>;\n\n    private cryptoSalt: string;\n    private cryptoSaltNext: string;\n    private client: Client;\n    private user: any;\n\n    private static _accessToken = 'v2.accessToken';\n    private static _accessTokenPrevious = 'v2.accessTokenPrevious';\n    private static _idToken = 'v2.idToken';\n    private static _refreshToken = 'v2.refreshToken';\n    private static _states = 'v2.states';\n    private static _cryptoSalt = 'v2.cryptoSalt';\n    private static _cryptoSaltNext = 'v2.cryptoSalt.next';\n\n    constructor(private _sdk: SdkInterface,\n                private _storage: LocalStorage,\n                private _logger: LoggerInterface) {\n        this.client = null;\n        this.user = null;\n        this.cryptoSalt = this._storage.get(Connection._cryptoSalt) || null;\n        this.cryptoSaltNext = this._storage.get(Connection._cryptoSaltNext) || null;\n        this.accessToken = this._storage.get(Connection._accessToken) || null;\n        this.accessTokenPrevious = this._storage.get('v2.accessTokenPrevious') || null;\n        this.idToken = this._storage.get(Connection._idToken) || null;\n        this.refreshToken = this._storage.get(Connection._refreshToken) || null;\n        this.states = this._storage.get(Connection._states) || {};\n        this.apis = [];\n    };\n\n    isReady(): boolean {\n        return !!this.client && this.client.isReady();\n    }\n\n    destroy(force?: boolean): void {\n\n        this._storage.remove(Connection._accessToken);\n        this._storage.remove(Connection._idToken);\n        this._storage.remove(Connection._refreshToken);\n        this._storage.remove(Connection._states);\n\n        if (this.accessToken) {\n            this.accessTokenPrevious = this.accessToken;\n            this._storage.set(Connection._accessTokenPrevious, this.accessTokenPrevious);\n        }\n\n        if (force) {\n            this._storage.remove(Connection._cryptoSalt);\n            this._storage.remove(Connection._cryptoSaltNext);\n            this._storage.remove(Connection._accessTokenPrevious);\n        }\n\n        this.user = null;\n        if (this.client) {\n            // this.client.setClientId(null);\n            this.client.logout();\n        }\n        this.accessToken = null;\n        this.idToken = null;\n        this.refreshToken = null;\n        this.states = {}; // new Map<string, boolean>();\n    }\n\n    setClient(client: Client): void {\n\n        this.client = client;\n        if (!this.user) {\n            this.user = {};\n        }\n\n        // this._user._id = this._client.clientId;\n        this.user._name = JSON.parse(this.getIdPayload({name: ''})).name;\n    }\n\n    setUser(user: any): void {\n        this.user = user;\n        if (this.client && this.user._id) {\n            this.client.setClientId(this.user._id);\n\n            // store only clientId\n            delete this.user._id;\n        }\n    }\n\n    getUser(): any {\n        return this.user;\n    }\n\n    getClient(): Client {\n        return this.client;\n    }\n\n    setCryptoSalt(value: string) {\n        if (this.cryptoSalt !== value && this.cryptoSaltNext !== value) {\n            this.cryptoSaltNext = value;\n            this._storage.set(Connection._cryptoSaltNext, this.cryptoSaltNext);\n        }\n\n        if (!this.cryptoSalt) {\n            this.setCryptoSaltAsVerified();\n        }\n    }\n\n    setCryptoSaltAsVerified() {\n        if (this.cryptoSaltNext) {\n            this.cryptoSalt = this.cryptoSaltNext;\n            this._storage.set(Connection._cryptoSalt, this.cryptoSalt);\n        }\n        this.cryptoSaltNext = null;\n        this._storage.remove(Connection._cryptoSaltNext);\n    }\n\n    encrypt(data: any): string {\n\n        if (typeof data !== 'string') {\n            data = JSON.stringify(data);\n        } else {\n            const dataAsObj = {string: data};\n            data = JSON.stringify(dataAsObj);\n        }\n\n        if (this.fidjCrypto && this.cryptoSalt) {\n            const key = this.cryptoSalt;\n            return Xor.encrypt(data, key);\n        } else {\n            return data;\n        }\n    }\n\n    decrypt(data: string): any {\n        let decrypted = null;\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSaltNext) {\n                const key = this.cryptoSaltNext;\n                decrypted = Xor.decrypt(data, key);\n                decrypted = JSON.parse(decrypted);\n                // if (decrypted) {\n                //    this.setCryptoSaltAsVerified();\n                // }\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSalt) {\n                const key = this.cryptoSalt;\n                decrypted = Xor.decrypt(data, key);\n                decrypted = JSON.parse(decrypted);\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSalt) {\n                const key = this.cryptoSalt;\n                decrypted = Xor.decrypt(data, key, true);\n                decrypted = JSON.parse(decrypted);\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n\n        try {\n\n            if (!decrypted) {\n                decrypted = JSON.parse(data);\n            }\n\n            if (decrypted && decrypted.string) {\n                decrypted = decrypted.string;\n            }\n\n        } catch (err) {\n            decrypted = null;\n        }\n\n        return decrypted;\n    }\n\n    isLogin(): boolean {\n        let exp = true;\n        try {\n            const payload = this.refreshToken.split('.')[1];\n            const decoded = JSON.parse(Base64.decode(payload));\n            exp = ((new Date().getTime() / 1000) >= decoded.exp);\n\n        } catch (e) {\n        }\n        return !exp;\n    }\n\n    // todo reintegrate client.login()\n\n    logout(): Promise<void | ErrorInterface> {\n        return this.getClient().logout(this.refreshToken);\n    }\n\n    getClientId(): string {\n        if (!this.client) {\n            return null;\n        }\n        return this.client.clientId;\n    }\n\n    getIdToken(): string {\n        return this.idToken;\n    }\n\n    getIdPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.getIdToken().split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n            this._logger.log('fidj.connection.getIdPayload pb: ', def, e);\n        }\n        return def ? def : null;\n    }\n\n    getAccessPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.accessToken.split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n        }\n        return def ? def : null;\n    }\n\n    getPreviousAccessPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.accessTokenPrevious.split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n        }\n        return def ? def : null;\n    }\n\n    refreshConnection(): Promise<any | ErrorInterface> {\n\n        // store states\n        this._storage.set(Connection._states, this.states);\n\n        // token not expired : ok\n        if (this.accessToken) {\n            const payload = this.accessToken.split('.')[1];\n            const decoded = Base64.decode(payload);\n            const notExpired = (new Date().getTime() / 1000) < JSON.parse(decoded).exp;\n            // console.log('new Date().getTime() < JSON.parse(decoded).exp :', (new Date().getTime() / 1000), JSON.parse(decoded).exp);\n            this._logger.log('fidj.connection.connection.refreshConnection : token not expired ? ', notExpired);\n            if (notExpired) {\n                return Promise.resolve(this.getUser());\n            }\n        }\n\n        // remove expired refreshToken\n        if (this.refreshToken) {\n            const payload = this.refreshToken.split('.')[1];\n            const decoded = Base64.decode(payload);\n            const expired = (new Date().getTime() / 1000) >= JSON.parse(decoded).exp;\n            this._logger.log('fidj.connection.connection.refreshConnection : refreshToken not expired ? ', expired);\n            if (expired) {\n                this._storage.remove(Connection._refreshToken);\n            }\n        }\n\n        // remove expired accessToken & idToken & store it as Previous one\n        this.accessTokenPrevious = this.accessToken;\n        this._storage.set('v2.accessTokenPrevious', this.accessTokenPrevious);\n        this._storage.remove(Connection._accessToken);\n        this._storage.remove(Connection._idToken);\n        this.accessToken = null;\n        this.idToken = null;\n\n        // refresh authentication\n        this._logger.log('fidj.connection.connection.refreshConnection : refresh authentication.');\n        return new Promise((resolve, reject) => {\n            const client = this.getClient();\n\n            if (!client) {\n                return reject(new Error(400, 'Need an initialized client.'))\n            }\n\n            this.getClient().reAuthenticate(this.refreshToken)\n                .then(user => {\n                    this.setConnection(user);\n                    resolve(this.getUser());\n                })\n                .catch(err => {\n\n                    // if (err && err.code === 408) {\n                    //     code = 408; // no api uri or basic timeout : offline\n                    // } else if (err && err.code === 404) {\n                    //     code = 404; // page not found : offline\n                    // } else if (err && err.code === 410) {\n                    //     code = 403; // token expired or device not sure : need relogin\n                    // } else if (err) {\n                    //     code = 403; // forbidden : need relogin\n                    // }\n\n                    // resolve(code);\n                    reject(err);\n                });\n        });\n    };\n\n    setConnection(clientUser: any): void {\n\n        // only in private storage\n        if (clientUser.access_token) {\n            this.accessToken = clientUser.access_token;\n            this._storage.set(Connection._accessToken, this.accessToken);\n            delete clientUser.access_token;\n\n            const salt: string = JSON.parse(this.getAccessPayload({salt: ''})).salt;\n            if (salt) {\n                this.setCryptoSalt(salt);\n            }\n        }\n        if (clientUser.id_token) {\n            this.idToken = clientUser.id_token;\n            this._storage.set(Connection._idToken, this.idToken);\n            delete clientUser.id_token;\n        }\n        if (clientUser.refresh_token) {\n            this.refreshToken = clientUser.refresh_token;\n            this._storage.set(Connection._refreshToken, this.refreshToken);\n            delete clientUser.refresh_token;\n        }\n\n        // store changed states\n        this._storage.set(Connection._states, this.states);\n\n        // expose roles, message\n        // clientUser.roles = self.fidjRoles();\n        // clientUser.message = self.fidjMessage();\n        clientUser.roles = JSON.parse(this.getIdPayload({roles: []})).roles;\n        clientUser.message = JSON.parse(this.getIdPayload({message: ''})).message;\n        this.setUser(clientUser);\n    };\n\n    setConnectionOffline(options: ModuleServiceLoginOptionsInterface): void {\n\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n            this._storage.set(Connection._accessToken, this.accessToken);\n        }\n        if (options.idToken) {\n            this.idToken = options.idToken;\n            this._storage.set(Connection._idToken, this.idToken);\n        }\n        if (options.refreshToken) {\n            this.refreshToken = options.refreshToken;\n            this._storage.set(Connection._refreshToken, this.refreshToken);\n        }\n\n        this.setUser({\n            roles: JSON.parse(this.getIdPayload({roles: []})).roles,\n            message: JSON.parse(this.getIdPayload({message: ''})).message,\n            _id: 'demo'\n        });\n    }\n\n    getApiEndpoints(options?: ConnectionFindOptionsInterface): Array<EndpointInterface> {\n\n        // todo : let ea = ['https://fidj/api', 'https://fidj-proxy.herokuapp.com/api'];\n        let ea: EndpointInterface[] = [\n            {key: 'fidj.default', url: 'https://fidj.ovh/api', blocked: false}];\n        let filteredEa = [];\n\n        if (!this._sdk.prod) {\n            ea = [\n                {key: 'fidj.default', url: 'http://localhost:3201/api', blocked: false},\n                {key: 'fidj.default', url: 'https://fidj-sandbox.herokuapp.com/api', blocked: false}\n            ];\n        }\n\n        if (this.accessToken) {\n            const val = this.getAccessPayload({apis: []});\n            const apiEndpoints: EndpointInterface[] = JSON.parse(val).apis;\n            if (apiEndpoints && apiEndpoints.length) {\n                ea = [];\n                apiEndpoints.forEach((endpoint) => {\n                    if (endpoint.url) {\n                        ea.push(endpoint);\n                    }\n                });\n            }\n        }\n\n        if (this.accessTokenPrevious) {\n            const apiEndpoints: EndpointInterface[] = JSON.parse(this.getPreviousAccessPayload({apis: []})).apis;\n            if (apiEndpoints && apiEndpoints.length) {\n                apiEndpoints.forEach((endpoint) => {\n                    if (endpoint.url && ea.filter((r) => r.url === endpoint.url).length === 0) {\n                        ea.push(endpoint);\n                    }\n                });\n            }\n        }\n\n        this._logger.log('fidj.sdk.connection.getApiEndpoints : ', ea);\n\n        let couldCheckStates = true;\n        if (this.states && Object.keys(this.states).length) {\n            for (let i = 0; (i < ea.length) && couldCheckStates; i++) {\n                if (!this.states[ea[i].url]) {\n                    couldCheckStates = false;\n                }\n            }\n        } else {\n            couldCheckStates = false;\n        }\n\n        if (options && options.filter) {\n\n            if (couldCheckStates && options.filter === 'theBestOne') {\n                for (let i = 0; (i < ea.length) && (filteredEa.length === 0); i++) {\n                    const endpoint = ea[i];\n                    if (this.states[endpoint.url] &&\n                        this.states[endpoint.url].state) {\n                        filteredEa.push(endpoint);\n                    }\n                }\n            } else if (couldCheckStates && options.filter === 'theBestOldOne') {\n                let bestOldOne: EndpointInterface;\n                for (let i = 0; (i < ea.length); i++) {\n                    const endpoint = ea[i];\n                    if (this.states[endpoint.url] &&\n                        this.states[endpoint.url].lastTimeWasOk &&\n                        (!bestOldOne || this.states[endpoint.url].lastTimeWasOk > this.states[bestOldOne.url].lastTimeWasOk)) {\n\n                        bestOldOne = endpoint;\n                    }\n                }\n                if (bestOldOne) {\n                    filteredEa.push(bestOldOne);\n                }\n            } else if (ea.length) {\n                filteredEa.push(ea[0]);\n            }\n        } else {\n            filteredEa = ea;\n        }\n\n        return filteredEa;\n    };\n\n    getDBs(options?: ConnectionFindOptionsInterface): EndpointInterface[] {\n\n        if (!this.accessToken) {\n            return [];\n        }\n\n        // todo test random DB connection\n        const random = Math.random() % 2;\n        let dbs = JSON.parse(this.getAccessPayload({dbs: []})).dbs || [];\n\n        // need to synchronize db\n        if (random === 0) {\n            dbs = dbs.sort();\n        } else if (random === 1) {\n            dbs = dbs.reverse();\n        }\n\n        let filteredDBs = [];\n        let couldCheckStates = true;\n        if (this.states && Object.keys(this.states).length) {\n            for (let i = 0; (i < dbs.length) && couldCheckStates; i++) {\n                if (!this.states[dbs[i].url]) {\n                    couldCheckStates = false;\n                }\n            }\n        } else {\n            couldCheckStates = false;\n        }\n\n        if (couldCheckStates && options && options.filter === 'theBestOne') {\n            for (let i = 0; (i < dbs.length) && (filteredDBs.length === 0); i++) {\n                const endpoint = dbs[i];\n                if (this.states[endpoint.url] &&\n                    this.states[endpoint.url].state) {\n                    filteredDBs.push(endpoint);\n                }\n            }\n        } else if (couldCheckStates && options && options.filter === 'theBestOnes') {\n            for (let i = 0; (i < dbs.length); i++) {\n                const endpoint = dbs[i];\n                if (this.states[endpoint.url] &&\n                    this.states[endpoint.url].state) {\n                    filteredDBs.push(endpoint);\n                }\n            }\n        } else if (options && options.filter === 'theBestOne' && dbs.length) {\n            filteredDBs.push(dbs[0]);\n        } else {\n            filteredDBs = dbs;\n        }\n\n        return filteredDBs;\n    };\n\n    private async verifyApiState(currentTime: number, endpointUrl: string) {\n\n        try {\n\n            this._logger.log('fidj.sdk.connection.verifyApiState : ', currentTime, endpointUrl);\n\n            const data = await new Ajax()\n                .get({\n                    url: endpointUrl + '/status?isok=' + this._sdk.version,\n                    headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                });\n\n            let state = false;\n            if (data && data.isok) {\n                state = true;\n            }\n            this.states[endpointUrl] = {state: state, time: currentTime, lastTimeWasOk: currentTime};\n\n            this._logger.log('fidj.sdk.connection.verifyApiState > states : ', this.states);\n\n        } catch (err) {\n            let lastTimeWasOk = 0;\n            if (this.states[endpointUrl]) {\n                lastTimeWasOk = this.states[endpointUrl].lastTimeWasOk;\n            }\n            this.states[endpointUrl] = {state: false, time: currentTime, lastTimeWasOk: lastTimeWasOk};\n\n            this._logger.log('fidj.sdk.connection.verifyApiState > catch pb  - states : ', err, this.states);\n        }\n    }\n\n    private async verifyDbState(currentTime: number, dbEndpoint: string) {\n\n        try {\n            // console.log('verifyDbState: ', dbEndpoint);\n            const data = await new Ajax()\n                .get({\n                    url: dbEndpoint,\n                    headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                });\n\n            this.states[dbEndpoint] = {state: true, time: currentTime, lastTimeWasOk: currentTime};\n            // resolve();\n            // console.log('verifyDbState: state', dbEndpoint, true);\n\n        } catch (err) {\n            let lastTimeWasOk = 0;\n            if (this.states[dbEndpoint]) {\n                lastTimeWasOk = this.states[dbEndpoint].lastTimeWasOk;\n            }\n            this.states[dbEndpoint] = {state: false, time: currentTime, lastTimeWasOk: lastTimeWasOk};\n            // resolve();\n        }\n    }\n\n    verifyConnectionStates(): Promise<any | ErrorInterface> {\n\n        const currentTime = new Date().getTime();\n\n        // todo need verification ? not yet (cache)\n        // if (Object.keys(this.states).length > 0) {\n        //     const time = this.states[Object.keys(this.states)[0]].time;\n        //     if (currentTime < time) {\n        //         return Promise.resolve();\n        //     }\n        // }\n\n        // verify via GET status on Endpoints & DBs\n        const promises = [];\n        // this.states = {};\n        this.apis = this.getApiEndpoints();\n        this.apis.forEach((endpointObj) => {\n            let endpointUrl: string = endpointObj.url;\n            if (!endpointUrl) {\n                endpointUrl = endpointObj.toString();\n            }\n            promises.push(this.verifyApiState(currentTime, endpointUrl));\n        });\n\n        const dbs = this.getDBs();\n        dbs.forEach((dbEndpointObj) => {\n            let dbEndpoint: string = dbEndpointObj.url;\n            if (!dbEndpoint) {\n                dbEndpoint = dbEndpointObj.toString();\n            }\n            promises.push(this.verifyDbState(currentTime, dbEndpoint));\n        });\n        return Promise.all(promises);\n    };\n\n}\n","// import PouchDB from 'pouchdb';\n// let PouchDB: any;\n\nimport PouchDB from 'pouchdb/dist/pouchdb.js';\nimport {Error} from '../sdk/error';\nimport {EndpointInterface, ErrorInterface} from '../sdk/interfaces';\n\nlet FidjPouch;\n\nif (typeof window !== 'undefined') {\n    FidjPouch = (window['PouchDB']) ? window['PouchDB'] : require('pouchdb').default; // .default;\n    // load cordova adapter : https://github.com/pouchdb-community/pouchdb-adapter-cordova-sqlite/issues/22\n    const PouchAdapterCordovaSqlite = require('pouchdb-adapter-cordova-sqlite');\n    FidjPouch.plugin(PouchAdapterCordovaSqlite);\n}\n\nexport interface SessionCryptoInterface {\n    obj: Object,\n    method: string\n}\n\nexport class Session {\n\n    public dbRecordCount: number;\n    public dbLastSync: number; // Date().getTime();\n\n    private db: PouchDB; // PouchDB\n    private remoteDb: PouchDB; // PouchDB;\n    private remoteUri: string;\n    private dbs: Array<EndpointInterface>;\n\n    constructor() {\n        this.db = null;\n        this.dbRecordCount = 0;\n        this.dbLastSync = null;\n        this.remoteDb = null;\n        this.dbs = [];\n    };\n\n    public isReady(): boolean {\n        return !!this.db;\n    }\n\n    public create(uid: string, force?: boolean): Promise<any | ErrorInterface> {\n\n        if (!force && this.db) {\n            return Promise.resolve(this.db);\n        }\n\n        this.dbRecordCount = 0;\n        this.dbLastSync = null; // new Date().getTime();\n        this.db = null;\n        uid = uid || 'default';\n\n        if (typeof window === 'undefined') {\n            return Promise.resolve(this.db);\n        }\n\n        return new Promise((resolve, reject) => {\n\n            let opts: any = {location: 'default'};\n            try {\n                if (window['cordova']) {\n                    opts = {location: 'default', adapter: 'cordova-sqlite'};\n                    //    const plugin = require('pouchdb-adapter-cordova-sqlite');\n                    //    if (plugin) { Pouch.plugin(plugin); }\n                    //    this.db = new Pouch('fidj_db', {adapter: 'cordova-sqlite'});\n                }\n                // } else {\n                this.db = new FidjPouch('fidj_db_' + uid, opts); // , {adapter: 'websql'} ???\n                // }\n\n                this.db.info()\n                    .then((info) => {\n\n                        // todo if (info.adapter !== 'websql') {\n                        return resolve(this.db);\n                        // }\n\n                        // const newopts: any = opts || {};\n                        // newopts.adapter = 'idb';\n                        //\n                        // const newdb = new Pouch('fidj_db', opts);\n                        // this.db.replicate.to(newdb)\n                        //     .then(() => {\n                        //         this.db = newdb;\n                        //         resolve();\n                        //     })\n                        //     .catch((err) => {\n                        //         reject(new Error(400, err.toString()))\n                        //     });\n\n                    }).catch((err) => {\n                    reject(new Error(400, err));\n                });\n            } catch (err) {\n                reject(new Error(500, err));\n            }\n        });\n    }\n\n    public destroy(): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            this.dbRecordCount = 0;\n            this.dbLastSync = null;\n            return Promise.resolve();\n        }\n\n        if (this.db && !this.db.destroy) {\n            return Promise.reject(new Error(408, 'Need a valid db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.destroy((err, info) => {\n                if (err) {\n                    reject(new Error(500, err));\n                } else {\n                    this.dbRecordCount = 0;\n                    this.dbLastSync = null;\n                    this.db = null;\n                    resolve();\n                }\n            });\n        });\n    };\n\n    public setRemote(dbs: Array<EndpointInterface>): void {\n        this.dbs = dbs;\n    }\n\n    public sync(userId: string): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n        if (!this.dbs || !this.dbs.length) {\n            return Promise.reject(new Error(408, 'need a remote db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            try {\n\n                if (!this.remoteDb || this.remoteUri !== this.dbs[0].url) {\n                    this.remoteUri = this.dbs[0].url;\n                    this.remoteDb = new FidjPouch(this.remoteUri);\n                    // todo , {headers: {'Authorization': 'Bearer ' + id_token}});\n                }\n\n                this.db.replicate.to(this.remoteDb)\n                    .on('complete', (info) => {\n                        return this.remoteDb.replicate.to(this.db,\n                            {\n                                filter: (doc) => {\n                                    return (!!userId && !!doc && doc.fidjUserId === userId);\n                                }\n                            })\n                            .on('complete', () => {\n                                // this.logger\n                                resolve();\n                            })\n                            .on('denied', (err) => reject({code: 403, reason: {second: err}}))\n                            .on('error', (err) => reject({code: 401, reason: {second: err}}));\n\n                    })\n                    .on('denied', (err) => reject({code: 403, reason: {first: err}}))\n                    .on('error', (err) => reject({code: 401, reason: {first: err}}));\n\n            } catch (err) {\n                reject(new Error(500, err));\n            }\n        });\n    }\n\n    public put(data: any,\n               _id: string,\n               uid: string,\n               oid: string,\n               ave: string,\n               crypto?: SessionCryptoInterface): Promise<any | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n\n        if (!data || !_id || !uid || !oid || !ave) {\n            return Promise.reject(new Error(400, 'need formated data'));\n        }\n\n        const dataWithoutIds = JSON.parse(JSON.stringify(data));\n        const toStore: any = {\n            _id: _id,\n            fidjUserId: uid,\n            fidjOrgId: oid,\n            fidjAppVersion: ave\n        };\n        if (dataWithoutIds._rev) {\n            toStore._rev = '' + dataWithoutIds._rev;\n        }\n        delete dataWithoutIds._id;\n        delete dataWithoutIds._rev;\n        delete dataWithoutIds.fidjUserId;\n        delete dataWithoutIds.fidjOrgId;\n        delete dataWithoutIds.fidjAppVersion;\n        delete dataWithoutIds.fidjData;\n\n        let resultAsString = Session.write(Session.value(dataWithoutIds));\n        if (crypto) {\n            resultAsString = crypto.obj[crypto.method](resultAsString);\n            toStore.fidjDacr = resultAsString;\n        } else {\n            toStore.fidjData = resultAsString;\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.put(toStore, (err, response) => {\n                if (response && response.ok && response.id && response.rev) {\n                    this.dbRecordCount++;\n\n                    // propagate _rev & _id\n                    if (typeof data === 'object') {\n                        (data as any)._rev = response.rev;\n                        (data as any)._id = response.id;\n                        resolve(data);\n                    } else {\n                        resolve(response.id);\n                    }\n\n                } else {\n                    reject(new Error(500, err));\n                }\n            });\n        });\n    }\n\n    public remove(data_id: string): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then((doc) => {\n                    doc._deleted = true;\n                    return this.db.put(doc);\n                })\n                .then((result) => {\n                    resolve();\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public get(data_id: string, crypto?: SessionCryptoInterface): Promise<any | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'Need db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then(row => {\n                    if (!!row && (!!row.fidjDacr || !!row.fidjData)) {\n                        let data = row.fidjDacr;\n                        if (crypto && data) {\n                            data = crypto.obj[crypto.method](data);\n                        } else if (row.fidjData) {\n                            data = JSON.parse(row.fidjData);\n                        }\n                        const resultAsJson = Session.extractJson(data);\n                        if (resultAsJson) {\n                            resultAsJson._id = row._id;\n                            resultAsJson._rev = row._rev;\n                            resolve(JSON.parse(JSON.stringify(resultAsJson)));\n                        } else {\n                            // row._deleted = true;\n                            this.remove(row._id);\n                            reject(new Error(400, 'Bad encoding'));\n                        }\n                    } else {\n                        reject(new Error(400, 'No data found'));\n                    }\n                })\n                .catch(err => reject(new Error(500, err)));\n        });\n    }\n\n    public getAll(crypto?: SessionCryptoInterface): Promise<Array<any> | ErrorInterface> {\n\n        if (!this.db || !(this.db as any).allDocs) {\n            return Promise.reject(new Error(408, 'Need a valid db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            (this.db as any).allDocs({include_docs: true, descending: true})\n                .then(rows => {\n                    const all = [];\n                    rows.rows.forEach(row => {\n                        if (!!row && !!row.doc._id && (!!row.doc.fidjDacr || !!row.doc.fidjData)) {\n                            let data = row.doc.fidjDacr;\n                            if (crypto && data) {\n                                data = crypto.obj[crypto.method](data);\n                            } else if (row.doc.fidjData) {\n                                data = JSON.parse(row.doc.fidjData);\n                            }\n                            const resultAsJson = Session.extractJson(data);\n                            if (resultAsJson) {\n                                resultAsJson._id = row.doc._id;\n                                resultAsJson._rev = row.doc._rev;\n                                all.push(JSON.parse(JSON.stringify(resultAsJson)));\n                            } else {\n                                console.error('Bad encoding : delete row');\n                                // resultAsJson = {};\n                                // resultAsJson._id = row.doc._id;\n                                // resultAsJson._rev = row.doc._rev;\n                                // resultAsJson._deleted = true;\n                                // all.push(resultAsJson);\n                                this.remove(row.doc._id);\n                            }\n                        } else {\n                            console.error('Bad encoding');\n                        }\n                    });\n                    resolve(all);\n                })\n                .catch(err => reject(new Error(400, err)));\n        });\n    }\n\n    public isEmpty(): Promise<boolean | ErrorInterface> {\n\n        if (!this.db || !(this.db as any).allDocs) {\n            return Promise.reject(new Error(408, 'No db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            (this.db as any).allDocs({\n                // filter:  (doc) => {\n                //    if (!self.connection.user || !self.connection.user._id) return doc;\n                //    if (doc.fidjUserId === self.connection.user._id) return doc;\n                // }\n            })\n                .then((response) => {\n                    if (!response) {\n                        reject(new Error(400, 'No response'));\n                    } else {\n                        this.dbRecordCount = response.total_rows;\n                        if (response.total_rows && response.total_rows > 0) {\n                            resolve(false);\n                        } else {\n                            resolve(true);\n                        }\n                    }\n                })\n                .catch((err) => reject(new Error(400, err)));\n        });\n    }\n\n    public info(): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'No db'));\n        }\n        return this.db.info();\n    }\n\n    static write(item: any): string {\n        let value = 'null';\n        const t = typeof (item);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: item})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: item});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: item});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: item});\n        }\n        return value;\n    }\n\n    static value(item: any): any {\n        let result = item;\n        if (typeof (item) !== 'object') {\n            // return item;\n        } else if ('string' in item) {\n            result = item.string;\n        } else if ('number' in item) {\n            result = item.number.valueOf();\n        } else if ('bool' in item) {\n            result = item.bool.valueOf();\n        } else if ('json' in item) {\n            result = item.json;\n            if (typeof (result) !== 'object') {\n                result = JSON.parse(result);\n            }\n        }\n        return result;\n    }\n\n    static extractJson(item: any): any {\n        let result = item;\n        if (!item) {\n            return null;\n        }\n        if (typeof (item) === 'object' && 'json' in item) {\n            result = item.json;\n        }\n        if (typeof (result) === 'string') {\n            result = JSON.parse(result);\n        }\n        if (typeof (result) === 'object' && 'json' in result) {\n            result = (result as any).json;\n        }\n        if (typeof result !== 'object') {\n            result = null;\n        }\n        return result;\n    }\n\n}\n","export class Error {\n\n    constructor() {\n    };\n\n\n}","import {\n    LoggerInterface, LoggerLevelEnum\n} from './interfaces';\n\nexport class LoggerService implements LoggerInterface {\n\n    constructor(private level?: LoggerLevelEnum) {\n        if (!level) {\n            this.level = LoggerLevelEnum.ERROR;\n        }\n\n        if (typeof console === 'undefined') {\n            this.level = LoggerLevelEnum.NONE;\n        }\n    }\n\n    log(message: string, args: [any]) {\n        if (this.level === LoggerLevelEnum.LOG) {\n            console.log(message, args);\n        }\n    }\n\n    warn(message: string, args: [any]) {\n        if (this.level === LoggerLevelEnum.LOG || this.level === LoggerLevelEnum.WARN) {\n            console.warn(message, args);\n        }\n    }\n\n    error(message: string, args: [any]) {\n        if (this.level === LoggerLevelEnum.LOG || this.level === LoggerLevelEnum.WARN || this.level === LoggerLevelEnum.ERROR) {\n            console.error(message, args);\n        }\n    }\n\n    setLevel(level: LoggerLevelEnum) {\n        this.level = level;\n    }\n}\n\n","// import PouchDB from 'pouchdb';\n// import * as PouchDB from 'pouchdb/dist/pouchdb.js';\n// import PouchDB from 'pouchdb/dist/pouchdb.js';\nimport * as version from '../version';\nimport * as tools from '../tools';\nimport * as connection from '../connection';\nimport * as session from '../session';\nimport {\n    LoggerInterface,\n    ModuleServiceInitOptionsInterface,\n    ModuleServiceLoginOptionsInterface,\n    SdkInterface,\n    ErrorInterface, EndpointInterface, EndpointFilterInterface\n} from './interfaces';\nimport {SessionCryptoInterface} from '../session/session';\nimport {Error} from './error';\nimport {Ajax} from '../connection/ajax';\nimport {LoggerService} from './logger.service';\n\nconst urljoin = require('url-join');\n// import {LocalStorage} from 'node-localstorage';\n// import 'localstorage-polyfill/localStorage';\n\n// const PouchDB = window['PouchDB'] || require('pouchdb').default;\n\n/**\n * please use its angular.js or angular.io wrapper\n * usefull only for fidj dev team\n */\nexport class InternalService {\n\n    private sdk: SdkInterface;\n    private logger: LoggerInterface;\n    private promise: PromiseConstructor;\n    private storage: tools.LocalStorage;\n    private session: session.Session;\n    private connection: connection.Connection;\n\n    constructor(logger: LoggerInterface, promise: PromiseConstructor, options?: ModuleServiceInitOptionsInterface) {\n\n        this.sdk = {\n            org: 'fidj',\n            version: version.version,\n            prod: false,\n            useDB: true\n        };\n        if (promise) {\n            this.promise = promise;\n        }\n        if (logger) {\n            this.logger = logger;\n        } else {\n            this.logger = new LoggerService();\n        }\n        if (options && options.logLevel) {\n            this.logger.setLevel(options.logLevel);\n        }\n\n        this.logger.log('fidj.sdk.service : constructor');\n        let ls;\n        if (typeof window !== 'undefined') {\n            ls = window.localStorage;\n        } else if (typeof global !== 'undefined') {\n            require('localstorage-polyfill');\n            ls = global['localStorage'];\n        }\n        this.storage = new tools.LocalStorage(ls, 'fidj.');\n        this.session = new session.Session();\n        this.connection = new connection.Connection(this.sdk, this.storage, this.logger);\n    }\n\n    /**\n     * Init connection & session\n     * Check uri\n     * Done each app start\n     *\n     * @param options Optional settings\n     * @param options.fidjId  required use your customized endpoints\n     * @param options.fidjSalt required use your customized endpoints\n     * @param options.fidjVersion required use your customized endpoints\n     * @param options.devMode optional default false, use your customized endpoints\n     * @returns\n     */\n    public fidjInit(fidjId: string, options?: ModuleServiceInitOptionsInterface): Promise<void | ErrorInterface> {\n\n        const self = this;\n        /*\n        if (options && options.forcedEndpoint) {\n            this.fidjService.setAuthEndpoint(options.forcedEndpoint);\n        }\n        if (options && options.forcedDBEndpoint) {\n            this.fidjService.setDBEndpoint(options.forcedDBEndpoint);\n        }*/\n        if (options && options.logLevel) {\n            self.logger.setLevel(options.logLevel);\n        }\n\n        self.logger.log('fidj.sdk.service.fidjInit : ', options);\n        if (!fidjId) {\n            self.logger.error('fidj.sdk.service.fidjInit : bad init');\n            return self.promise.reject(new Error(400, 'Need a fidjId'));\n        }\n\n        self.sdk.prod = !options ? true : options.prod;\n        self.sdk.useDB = !options ? true : options.useDB;\n        self.connection.fidjId = fidjId;\n        self.connection.fidjVersion = self.sdk.version;\n        self.connection.fidjCrypto = (!options || !options.hasOwnProperty('crypto')) ? true : options.crypto;\n\n        return new self.promise((resolve, reject) => {\n            self.connection.verifyConnectionStates()\n                .then(() => {\n\n                    let theBestUrl: any = self.connection.getApiEndpoints({filter: 'theBestOne'})[0];\n                    let theBestOldUrl: any = self.connection.getApiEndpoints({filter: 'theBestOldOne'})[0];\n                    const isLogin = self.fidjIsLogin();\n                    self.logger.log('fidj.sdk.service.fidjInit > verifyConnectionStates : ', theBestUrl, theBestOldUrl, isLogin);\n\n                    if (theBestUrl && theBestUrl.url) {\n                        theBestUrl = theBestUrl.url;\n                    }\n                    if (theBestOldUrl && theBestOldUrl.url) {\n                        theBestOldUrl = theBestOldUrl.url;\n                    }\n\n                    if (theBestUrl) {\n                        self.connection.setClient(new connection.Client(self.connection.fidjId, theBestUrl, self.storage, self.sdk));\n                        resolve();\n                    } else if (isLogin && theBestOldUrl) {\n                        self.connection.setClient(new connection.Client(self.connection.fidjId, theBestOldUrl, self.storage, self.sdk));\n                        resolve();\n                    } else {\n                        reject(new Error(404, 'Need one connection - or too old SDK version (check update)'));\n                    }\n\n                })\n                .catch((err) => {\n                    self.logger.error('fidj.sdk.service.fidjInit: ', err);\n                    reject(new Error(500, err.toString()));\n                });\n        });\n    };\n\n    /**\n     * Call it if fidjIsLogin() === false\n     * Erase all (db & storage)\n     *\n     * @param login\n     * @param password\n     * @returns\n     */\n    public fidjLogin(login: string, password: string): Promise<any | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjLogin');\n        if (!self.connection.isReady()) {\n            return self.promise.reject(new Error(404, 'Need an intialized FidjService'));\n        }\n\n        return new self.promise((resolve, reject) => {\n            self._removeAll()\n                .then(() => {\n                    return self.connection.verifyConnectionStates();\n                })\n                .then(() => {\n                    return self._createSession(self.connection.fidjId);\n                })\n                .then(() => {\n                    return self._loginInternal(login, password);\n                })\n                .then((user) => {\n                    self.connection.setConnection(user);\n\n                    if (!self.sdk.useDB) {\n                        resolve(self.connection.getUser());\n                    } else {\n                        self.session.sync(self.connection.getClientId())\n                            .then(() => resolve(self.connection.getUser()))\n                            .catch((err) => resolve(self.connection.getUser()));\n                    }\n                })\n                .catch((err) => {\n                    self.logger.error('fidj.sdk.service.fidjLogin: ', err.toString());\n                    reject(err);\n                });\n        });\n    };\n\n    /**\n     *\n     * @param options\n     * @param options.accessToken optional\n     * @param options.idToken  optional\n     * @returns\n     */\n    public fidjLoginInDemoMode(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface> {\n        const self = this;\n\n        // generate one day tokens if not set\n        if (!options || !options.accessToken) {\n            const now = new Date();\n            now.setDate(now.getDate() + 1);\n            const tomorrow = now.getTime();\n            const payload = tools.Base64.encode(JSON.stringify({\n                roles: [],\n                message: 'demo',\n                apis: [],\n                endpoints: [],\n                dbs: [],\n                exp: tomorrow\n            }));\n            const jwtSign = tools.Base64.encode(JSON.stringify({}));\n            const token = jwtSign + '.' + payload + '.' + jwtSign;\n            options = {\n                accessToken: token,\n                idToken: token,\n                refreshToken: token\n            };\n        }\n\n        return new self.promise((resolve, reject) => {\n            self._removeAll()\n                .then(() => {\n                    return self._createSession(self.connection.fidjId);\n                })\n                .then(() => {\n                    self.connection.setConnectionOffline(options);\n                    resolve(self.connection.getUser());\n                })\n                .catch((err) => {\n                    self.logger.error('fidj.sdk.service.fidjLoginInDemoMode error: ', err);\n                    reject(err);\n                });\n        });\n    };\n\n    public fidjGetEndpoints(filter?: EndpointFilterInterface): Array<EndpointInterface> {\n\n        if (!filter) {\n            filter = {showBlocked: false};\n        }\n        const ap = this.connection.getAccessPayload({endpoints: []});\n        let endpoints = JSON.parse(ap).endpoints;\n        if (!endpoints || !Array.isArray(endpoints)) {\n            return [];\n        }\n\n        endpoints = endpoints.filter((endpoint: EndpointInterface) => {\n            let ok = true;\n            if (ok && filter.key) {\n                ok = (endpoint.key === filter.key);\n            }\n            if (ok && !filter.showBlocked) {\n                ok = !endpoint.blocked;\n            }\n            return ok;\n        });\n        return endpoints;\n    };\n\n    public fidjRoles(): Array<string> {\n        return JSON.parse(this.connection.getIdPayload({roles: []})).roles;\n    };\n\n    public fidjMessage(): string {\n        return JSON.parse(this.connection.getIdPayload({message: ''})).message;\n    };\n\n    public fidjIsLogin(): boolean {\n        return this.connection.isLogin();\n    };\n\n    public fidjLogout(force?: boolean): Promise<void | ErrorInterface> {\n        const self = this;\n        if (!self.connection.getClient() && !force) {\n            return self._removeAll()\n                .then(() => {\n                    return this.session.create(self.connection.fidjId, true);\n                });\n        }\n\n        return self.connection.logout()\n            .then(() => {\n                return self._removeAll();\n            })\n            .catch(() => {\n                return self._removeAll();\n            })\n            .then(() => {\n                return this.session.create(self.connection.fidjId, true);\n            });\n    };\n\n    /**\n     * Synchronize DB\n     *\n     *\n     * @param fnInitFirstData a function with db as input and that return promise: call if DB is empty\n     * @param fnInitFirstData_Arg arg to set to fnInitFirstData()\n     * @returns  promise\n     */\n    public fidjSync(fnInitFirstData?, fnInitFirstData_Arg?): Promise<void | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjSync');\n        // if (!self.session.isReady()) {\n        //    return self.promise.reject('fidj.sdk.service.fidjSync : DB sync impossible. Did you login ?');\n        // }\n\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjSync: you ar not using DB - no sync available.');\n            return Promise.resolve();\n        }\n\n        const firstSync = (self.session.dbLastSync === null);\n\n        return new self.promise((resolve, reject) => {\n\n            self._createSession(self.connection.fidjId)\n                .then(() => {\n                    return self.session.sync(self.connection.getClientId());\n                })\n                .then(() => {\n                    self.logger.log('fidj.sdk.service.fidjSync resolved');\n                    return self.session.isEmpty();\n                })\n                .catch((err) => {\n                    self.logger.warn('fidj.sdk.service.fidjSync warn: ', err);\n                    return self.session.isEmpty();\n                })\n                .then((isEmpty) => {\n                    self.logger.log('fidj.sdk.service.fidjSync isEmpty : ', isEmpty, firstSync);\n\n                    return new self.promise((resolveEmpty, rejectEmptyNotUsed) => {\n                        if (isEmpty && firstSync && fnInitFirstData) {\n                            const ret = fnInitFirstData(fnInitFirstData_Arg);\n                            if (ret && ret['catch'] instanceof Function) {\n                                ret.then(resolveEmpty).catch(reject);\n                            }\n                            if (typeof ret === 'string') {\n                                self.logger.log(ret);\n                            }\n                        }\n                        resolveEmpty(); // self.connection.getUser());\n                    });\n                })\n                .then((info) => {\n                    self.logger.log('fidj.sdk.service.fidjSync fnInitFirstData resolved: ', info);\n                    self.session.dbLastSync = new Date().getTime();\n                    return self.session.info();\n                })\n                .then((result: any) => {\n                    self.session.dbRecordCount = 0;\n                    if (result && result.doc_count) {\n                        self.session.dbRecordCount = result.doc_count;\n                    }\n                    self.logger.log('fidj.sdk.service.fidjSync _dbRecordCount : ' + self.session.dbRecordCount);\n\n                    return self.connection.refreshConnection();\n                })\n                .then((user) => {\n                    self.logger.log('fidj.sdk.service.fidjSync refreshConnection done : ', user);\n                    resolve(); // self.connection.getUser()\n                })\n                .catch((err: ErrorInterface) => {\n                    // console.error(err);\n                    self.logger.warn('fidj.sdk.service.fidjSync refreshConnection failed : ', err);\n\n                    if (err && (err.code === 403 || err.code === 410)) {\n                        this.fidjLogout()\n                            .then(() => {\n                                reject({code: 403, reason: 'Synchronization unauthorized : need to login again.'});\n                            })\n                            .catch(() => {\n                                reject({code: 403, reason: 'Synchronization unauthorized : need to login again..'});\n                            });\n                    } else if (err && err.code) {\n                        // todo what to do with this err ?\n                        resolve();\n                    } else {\n                        const errMessage = 'Error during synchronisation: ' + err.toString();\n                        self.logger.error(errMessage);\n                        reject({code: 500, reason: errMessage});\n                    }\n                })\n            ;\n        });\n    };\n\n    public fidjPutInDb(data: any): Promise<string | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjPutInDb: ', data);\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjPutInDb: you are not using DB - no put available.');\n            return Promise.resolve('NA');\n        }\n\n        if (!self.connection.getClientId()) {\n            return self.promise.reject(new Error(401, 'DB put impossible. Need a user logged in.'));\n        }\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, 'Need to be synchronised.'));\n        }\n\n        let _id: string;\n        if (data && typeof data === 'object' && Object.keys(data).indexOf('_id')) {\n            _id = data._id;\n        }\n        if (!_id) {\n            _id = self._generateObjectUniqueId(self.connection.fidjId);\n        }\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'encrypt'\n            }\n        }\n\n        return self.session.put(\n            data,\n            _id,\n            self.connection.getClientId(),\n            self.sdk.org,\n            self.connection.fidjVersion,\n            crypto);\n    };\n\n    public fidjRemoveInDb(data_id: string): Promise<void | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjRemoveInDb ', data_id);\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjRemoveInDb: you are not using DB - no remove available.');\n            return Promise.resolve();\n        }\n\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, 'Need to be synchronised.'));\n        }\n\n        if (!data_id || typeof data_id !== 'string') {\n            return self.promise.reject(new Error(400, 'DB remove impossible. ' +\n                'Need the data._id.'));\n        }\n\n        return self.session.remove(data_id);\n    };\n\n    public fidjFindInDb(data_id: string): Promise<any | ErrorInterface> {\n        const self = this;\n\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjFindInDb: you are not using DB - no find available.');\n            return Promise.resolve();\n        }\n\n        if (!self.connection.getClientId()) {\n            return self.promise.reject(new Error(401, 'Find pb : need a user logged in.'));\n        }\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, ' Need to be synchronised.'));\n        }\n\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.get(data_id, crypto);\n    };\n\n    public fidjFindAllInDb(): Promise<Array<any> | ErrorInterface> {\n        const self = this;\n\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjFindAllInDb: you are not using DB - no find available.');\n            return Promise.resolve([]);\n        }\n\n        if (!self.connection.getClientId()) {\n            return self.promise.reject(new Error(401, 'Need a user logged in.'));\n        }\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, 'Need to be synchronised.'));\n        }\n\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.getAll(crypto)\n            .then(results => {\n                self.connection.setCryptoSaltAsVerified();\n                return self.promise.resolve((results as Array<any>));\n            });\n    };\n\n    public fidjSendOnEndpoint(key: string, verb: string, relativePath: string, data: any): Promise<any | ErrorInterface> {\n        const filter: EndpointFilterInterface = {\n            key: key\n        };\n        const endpoints = this.fidjGetEndpoints(filter);\n        if (!endpoints || endpoints.length !== 1) {\n            return this.promise.reject(\n                new Error(400,\n                    'fidj.sdk.service.fidjSendOnEndpoint : endpoint does not exist.'));\n        }\n\n        let endpointUrl = endpoints[0].url;\n        if (relativePath) {\n            endpointUrl = urljoin(endpointUrl, relativePath);\n        }\n        const jwt = this.connection.getIdToken();\n        let answer;\n        const query = new Ajax();\n        switch (verb) {\n            case 'POST' :\n                answer = query.post({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    data: data\n                });\n                break;\n            case 'PUT' :\n                answer = query.put({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    data: data\n                });\n                break;\n            case 'DELETE' :\n                answer = query.delete({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    // not used: data: data\n                });\n                break;\n            default:\n                answer = query.get({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    // not used: data: data\n                });\n        }\n        return answer;\n    };\n\n    public fidjGetIdToken(): string {\n        return this.connection.getIdToken();\n    };\n\n    // Internal functions\n\n    /**\n     * Logout then Login\n     *\n     * @param login\n     * @param password\n     * @param updateProperties\n     */\n    private _loginInternal(login: string, password: string, updateProperties?: any): Promise<any | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service._loginInternal');\n        if (!self.connection.isReady()) {\n            return self.promise.reject(new Error(403, 'Need an intialized FidjService'));\n        }\n\n        return new self.promise((resolve, reject) => {\n\n                self.connection.logout()\n                    .then(() => {\n                        return self.connection.getClient().login(login, password, updateProperties);\n                    })\n                    .catch((err) => {\n                        return self.connection.getClient().login(login, password, updateProperties);\n                    })\n                    .then(loginUser => {\n                        loginUser.email = login;\n                        resolve(loginUser);\n                    })\n                    .catch(err => {\n                        self.logger.error('fidj.sdk.service._loginInternal error : ' + err);\n                        reject(err);\n                    });\n            }\n        );\n    };\n\n    protected _removeAll(): Promise<void | ErrorInterface> {\n        this.connection.destroy();\n        return this.session.destroy();\n    };\n\n    private _createSession(uid: string): Promise<void | ErrorInterface> {\n        const dbs: EndpointInterface[] = this.connection.getDBs({filter: 'theBestOnes'});\n        if (!dbs || dbs.length === 0) {\n            this.logger.warn('Seems that you are in Demo mode or using Node (no remote DB).');\n        }\n        this.session.setRemote(dbs);\n        return this.session.create(uid);\n    };\n\n    private _testPromise(a?): Promise<any> {\n        if (a) {\n            return this.promise.resolve('test promise ok ' + a);\n        }\n        return new this.promise((resolve, reject) => {\n            resolve('test promise ok');\n        });\n    };\n\n    private static _srvDataUniqId = 0;\n\n    private _generateObjectUniqueId(appName, type?, name?) {\n\n        // return null;\n        const now = new Date();\n        const simpleDate = '' + now.getFullYear() + '' + now.getMonth() + '' + now.getDate()\n            + '' + now.getHours() + '' + now.getMinutes(); // new Date().toISOString();\n        const sequId = ++InternalService._srvDataUniqId;\n        let UId = '';\n        if (appName && appName.charAt(0)) {\n            UId += appName.charAt(0) + '';\n        }\n        if (type && type.length > 3) {\n            UId += type.substring(0, 4);\n        }\n        if (name && name.length > 3) {\n            UId += name.substring(0, 4);\n        }\n        UId += simpleDate + '' + sequId;\n        return UId;\n    }\n\n}\n","/* tslint:disable:max-line-length */\nimport {Injectable} from '@angular/core';\nimport {\n    EndpointInterface,\n    ErrorInterface,\n    LoggerInterface,\n    LoggerLevelEnum,\n    ModuleServiceInitOptionsInterface,\n    ModuleServiceInterface,\n    ModuleServiceLoginOptionsInterface\n} from './interfaces';\nimport {InternalService} from './internal.service';\nimport {Error as FidjError} from '../connection';\nimport {LoggerService} from './logger.service';\n\n/**\n * Angular2+ FidjService\n * @see ModuleServiceInterface\n *\n * @exemple\n *      // ... after install :\n *      // $ npm install --save-dev fidj\n *      // then init your app.js & use it in your services\n * TODO refresh gist :\n * <script src=\"https://gist.githubusercontent.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46/raw/5fff69dd9c15f692a856db62cf334b724ef3f4ac/angular.fidj.inject.js\"></script>\n *\n * <script src=\"https://gist.githubusercontent.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46/raw/5fff69dd9c15f692a856db62cf334b724ef3f4ac/angular.fidj.sync.js\"></script>\n *\n *\n */\n@Injectable()\nexport class FidjService implements ModuleServiceInterface {\n\n    private logger: LoggerInterface;\n    private fidjService: InternalService;\n    private promise: any;\n\n    constructor() {\n        this.logger = new LoggerService(LoggerLevelEnum.ERROR);\n        this.promise = Promise;\n        this.fidjService = null;\n        // let pouchdbRequired = PouchDB;\n        // pouchdbRequired.error();\n    };\n\n    public init(fidjId: string, options?: ModuleServiceInitOptionsInterface): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            this.fidjService = new InternalService(this.logger, this.promise);\n        }\n        return this.fidjService.fidjInit(fidjId, options);\n    };\n\n    public login(login: string, password: string): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.login : not initialized.'));\n        }\n        return this.fidjService.fidjLogin(login, password);\n    };\n\n    public loginAsDemo(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.loginAsDemo : not initialized.'));\n        }\n        return this.fidjService.fidjLoginInDemoMode(options);\n    };\n\n    public isLoggedIn(): boolean {\n        if (!this.fidjService) {\n            return false; // this.promise.reject('fidj.sdk.angular2.isLoggedIn : not initialized.');\n        }\n        return this.fidjService.fidjIsLogin();\n    };\n\n    public getRoles(): Array<string> {\n        if (!this.fidjService) {\n            return [];\n        }\n        return this.fidjService.fidjRoles();\n    };\n\n    public getEndpoints(): Array<EndpointInterface> {\n        if (!this.fidjService) {\n            return [];\n        }\n        return this.fidjService.fidjGetEndpoints();\n    };\n\n    public sendOnEndpoint(key: string, verb: string, relativePath?: string, data?: any): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.loginAsDemo : not initialized.'));\n        }\n        return this.fidjService.fidjSendOnEndpoint(key, verb, relativePath, data);\n    };\n\n    public getIdToken(): string {\n        if (!this.fidjService) {\n            return;\n        }\n        return this.fidjService.fidjGetIdToken();\n    };\n\n    public getMessage(): string {\n        if (!this.fidjService) {\n            return '';\n        }\n        return this.fidjService.fidjMessage();\n    };\n\n    public logout(force?: boolean): Promise<void | ErrorInterface> {\n        if (force || !this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.logout : not initialized.'));\n        }\n        return this.fidjService.fidjLogout(force);\n    };\n\n    /**\n     *\n     * Synchronize DB\n     * @param fnInitFirstData  a function with db as input and that return promise: call if DB is empty\n     * @returns promise with this.session.db\n     * @memberof fidj.angularService\n     *\n     * @example\n     *  let initDb = function() {\n     *     this.fidjService.put('my first row');\n     *  };\n     *  this.fidjService.sync(initDb)\n     *  .then(user => ...)\n     *  .catch(err => ...)\n     *\n     */\n    public sync(fnInitFirstData?): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.sync : not initialized.'));\n        }\n        return this.fidjService.fidjSync(fnInitFirstData, this);\n    };\n\n    /**\n     * Store data in your session\n     *\n     * @param data to store\n     * @returns\n     */\n    public put(data: any): Promise<string | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.put : not initialized.'));\n        }\n        return this.fidjService.fidjPutInDb(data);\n    };\n\n    /**\n     * Find object Id and remove it from your session\n     *\n     * @param id of object to find and remove\n     * @returns\n     */\n    public remove(id: string): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.remove : not initialized.'));\n        }\n        return this.fidjService.fidjRemoveInDb(id);\n    };\n\n    /**\n     * Find\n     */\n    public find(id: string): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.find : not initialized.'));\n        }\n        return this.fidjService.fidjFindInDb(id);\n    };\n\n    public findAll(): Promise<any[] | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.findAll : not initialized.'));\n        }\n        return this.fidjService.fidjFindAllInDb();\n    };\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FidjService} from './angular.service';\n\n\n/**\n * `NgModule` which provides associated services.\n *\n * ...\n *\n * @stable\n */\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [],\n\n    exports: [],\n\n    providers: [FidjService]\n})\nexport class FidjModule {\n    constructor() {\n    }\n}\n\n\n/**\n * module FidjModule\n *\n * exemple\n *      // ... after install :\n *      // $ npm install fidj\n *      // then init your app.js & use it in your services\n * TODO refresh gist :\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n *\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n */\n"],"names":["Error","version.version","tools.LocalStorage","session.Session","connection.Connection","connection.Client","tools.Base64","FidjError","Injectable","NgModule","CommonModule"],"mappings":"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"}