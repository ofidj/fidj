{"version":3,"file":"fidj.js","sources":["../../src/tools/base64.ts","../../src/tools/storage.ts","../../src/tools/xor.ts","../../src/sdk/interfaces.ts","../../src/sdk/error.ts","../../src/sdk/fidj.module.ts","../../src/version/index.ts","../../src/connection/interfaces.ts","../../src/connection/ajax.ts","../../src/connection/client.ts","../../src/connection/connection.ts","../../src/session/session.ts","../../src/session/error.ts","../../src/sdk/logger.service.ts","../../src/sdk/internal.service.ts","../../src/sdk/angular.service.ts","../../src/fidj.ts"],"sourcesContent":["export class Base64 {\n\n    constructor() {\n    };\n\n    /**\n     * Decodes string from Base64 string\n     */\n    public static encode(input: string): string {\n\n        if (!input) {\n            return null;\n        }\n\n        const _btoa = typeof window !== 'undefined' ? window.btoa : require('btoa');\n\n        return _btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g,\n            function toSolidBytes(match, p1) {\n                return String.fromCharCode(parseInt('0x' + p1, 16));\n            }));\n\n    }\n\n    public static decode(input: string): string {\n\n        if (!input) {\n            return null;\n        }\n\n        const _atob = typeof window !== 'undefined' ? window.atob : require('atob');\n\n        return decodeURIComponent(_atob(input).split('').map((c) => {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n\n    }\n}\n","/**\n * localStorage class factory\n * Usage : var LocalStorage = fidj.LocalStorageFactory(window.localStorage); // to create a new class\n * Usage : var localStorageService = new LocalStorage(); // to create a new instance\n */\nexport class LocalStorage {\n\n    public version = '0.1';\n    private storage;\n\n    // Constructor\n    constructor(storageService, private storageKey) {\n        this.storage = storageService || window.localStorage;\n        if (!this.storage) {\n            throw new Error('fidj.LocalStorageFactory needs a storageService!');\n        }\n        // todo LocalStorage refacto\n        //            if (!fidj.Xml) {\n        //                throw new Error('fidj.Xml needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Json) {\n        //                throw new Error('fidj.Json needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Xml.isXml || !fidj.Xml.xml2String || !fidj.Xml.string2Xml) {\n        //                throw new Error('fidj.Xml with isXml(), xml2String()\n        // and string2Xml() needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Json.object2String || !fidj.Json.string2Object) {\n        //                throw new Error('fidj.Json with object2String()\n        // and string2Object() needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //\n    }\n\n    // Public API\n\n    /**\n     * Sets a key's value.\n     *\n     * @param key - Key to set. If this value is not set or not\n     *              a string an exception is raised.\n     * @param value - Value to set. This can be any value that is JSON\n     *              compatible (Numbers, Strings, Objects etc.).\n     * @returns the stored value which is a container of user value.\n     */\n    set(key: string, value) {\n\n        key = this.storageKey + key;\n        this.checkKey(key);\n        // clone the object before saving to storage\n        const t = typeof(value);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: value})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: value});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: value});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: value});\n        } else {\n            // reject and do not insert\n            // if (typeof value == \"function\") for example\n            throw new TypeError('Value type ' + t + ' is invalid. It must be null, undefined, xml, string, number, boolean or object');\n        }\n        this.storage.setItem(key, value);\n        return value;\n    };\n\n    /**\n     * Looks up a key in cache\n     *\n     * @param key - Key to look up.\n     * @param def - Default value to return, if key didn't exist.\n     * @returns the key value, default value or <null>\n     */\n    get(key: string, def?) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const item = this.storage.getItem(key);\n        if (item !== null) {\n            if (item === 'null') {\n                return null;\n            }\n            const value = JSON.parse(item);\n\n            // var value = fidj.Json.string2Object(item);\n            // if ('xml' in value) {\n            //     return fidj.Xml.string2Xml(value.xml);\n            // } else\n            if ('string' in value) {\n                return value.string;\n            } else if ('number' in value) {\n                return value.number.valueOf();\n            } else if ('bool' in value) {\n                return value.bool.valueOf();\n            } else {\n                return value.json;\n            }\n        }\n        return !def ? null : def;\n    };\n\n    /**\n     * Deletes a key from cache.\n     *\n     * @param  key - Key to delete.\n     * @returns true if key existed or false if it didn't\n     */\n    remove(key: string) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const existed = (this.storage.getItem(key) !== null);\n        this.storage.removeItem(key);\n        return existed;\n    };\n\n    /**\n     * Deletes everything in cache.\n     *\n     * @return true\n     */\n    clear() {\n        const existed = (this.storage.length > 0);\n        this.storage.clear();\n        return existed;\n    };\n\n    /**\n     * How much space in bytes does the storage take?\n     *\n     * @returns Number\n     */\n    size() {\n        return this.storage.length;\n    };\n\n    /**\n     * Call function f on the specified context for each element of the storage\n     * from index 0 to index length-1.\n     * WARNING : You should not modify the storage during the loop !!!\n     *\n     * @param f - Function to call on every item.\n     * @param  context - Context (this for example).\n     * @returns Number of items in storage\n     */\n    foreach(f, context) {\n        const n = this.storage.length;\n        for (let i = 0; i < n; i++) {\n            const key = this.storage.key(i);\n            const value = this.get(key);\n            if (context) {\n                // f is an instance method on instance context\n                f.call(context, value);\n            } else {\n                // f is a function or class method\n                f(value);\n            }\n        }\n        return n;\n    };\n\n    // Private API\n    // helper functions and variables hidden within this function scope\n\n    private checkKey(key) {\n        if (!key || (typeof key !== 'string')) {\n            throw new TypeError('Key type must be string');\n        }\n        return true;\n    }\n}\n","import {Base64} from './base64';\n\nexport class Xor {\n\n    static header = 'artemis-lotsum';\n\n    constructor() {\n    };\n\n\n    public static encrypt(value: string, key: string): string {\n\n        let result = '';\n\n        value = Xor.header + value;\n\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode((value[i].charCodeAt(0).toString(10) as any) ^ Xor.keyCharAt(key, i));\n        }\n        result = Base64.encode(result);\n        return result;\n    };\n\n    public static decrypt(value: string, key: string, oldStyle?: boolean): string {\n        let result = '';\n        value = Base64.decode(value);\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode((value[i].charCodeAt(0).toString(10) as any) ^ Xor.keyCharAt(key, i));\n        }\n\n        if (!oldStyle && Xor.header !== result.substring(0, Xor.header.length)) {\n            return null;\n        }\n\n        if (!oldStyle) {\n            result = result.substring(Xor.header.length);\n        }\n        return result;\n    }\n\n    public static keyCharAt(key, i) {\n        return key[Math.floor(i % key.length)].charCodeAt(0).toString(10);\n    }\n\n\n}\n","// export namespace fidj {\n// }\nexport interface ErrorInterface {\n    code: number;\n    reason: string;\n}\n\nexport interface EndpointInterface {\n    key: string;\n    url: string;\n    blocked: boolean;\n}\n\nexport interface EndpointFilterInterface {\n    key?: string;\n    showBlocked?: boolean;\n}\n\n/**\n * Interface used by all InternalService wrappers (angular.js, angular.io)\n *\n * @see FidjModule\n * @see FidjModule, FidjAngularService\n */\nexport interface ModuleServiceInterface {\n\n    init(fidjId: string, options?: ModuleServiceInitOptionsInterface): Promise<void | ErrorInterface>;\n\n    login(login: string, password: string): Promise<any | ErrorInterface>;\n\n    loginAsDemo(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface>;\n\n    isLoggedIn(): boolean;\n\n    getRoles(): Promise<Array<string>>;\n\n    getEndpoints(): Promise<Array<EndpointInterface>>;\n\n    sendOnEndpoint(key: string, verb: string, relativePath?: string, data?: any): Promise<any | ErrorInterface>;\n\n    getIdToken(): Promise<string | ErrorInterface>;\n\n    getMessage(): Promise<string>;\n\n    logout(force?: boolean): Promise<void | ErrorInterface>;\n\n    sync(fnInitFirstData?: any): Promise<any | ErrorInterface>;\n\n    put(data: any): Promise<any | ErrorInterface>;\n\n    remove(dataId: any): Promise<any | ErrorInterface>;\n\n    find(id: string): Promise<any | ErrorInterface>;\n\n    findAll(): Promise<any | ErrorInterface>;\n}\n\n/**\n * prod : true by default\n * useDB : false by default\n * crypto : false by default\n * logLevel : NONE by default\n */\nexport interface ModuleServiceInitOptionsInterface {\n    prod: boolean,\n    useDB?: boolean,\n    // forcedEndpoint?: string,\n    // forcedDBEndpoint?: string,\n    crypto?: boolean,\n    logLevel?: LoggerLevelEnum\n}\n\nexport interface ModuleServiceLoginOptionsInterface {\n    accessToken?: string,\n    idToken?: string,\n    refreshToken?: string,\n}\n\nexport interface SdkInterface {\n    org: string,\n    version: string,\n    prod: boolean,\n    useDB: boolean\n}\n\nexport enum LoggerLevelEnum {\n    INFO = 1,\n    WARN = 2,\n    ERROR = 3,\n    NONE = 4\n}\n\nexport interface LoggerInterface {\n    setLevel: (LoggerLevelEnum) => void;\n\n    log: (a?, b?, c?, d?, e?, f?) => any;\n    warn: (a?, b?, c?, d?, e?, f?) => any;\n    error: (a?, b?, c?, d?, e?, f?) => any;\n}\n","import {ErrorInterface} from './interfaces';\n\nexport class Error implements ErrorInterface {\n\n    constructor(public code: number, public reason: string) {\n    };\n\n    equals(err: Error) {\n        return this.code === err.code && this.reason === err.reason;\n    }\n\n    toString(): string {\n        const msg: string = (typeof this.reason === 'string') ? this.reason : JSON.stringify(this.reason);\n        return '' + this.code + ' - ' + msg;\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n\n/**\n * `NgModule` which provides associated services.\n *\n * ...\n *\n * @stable\n */\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [],\n\n    exports: [],\n})\nexport class FidjModule {\n    constructor() {\n    }\n}\n\n\n/**\n * module FidjModule\n *\n * exemple\n *      // ... after install :\n *      // $ npm install fidj\n *      // then init your app.js & use it in your services\n * TODO refresh gist :\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n *\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n */\n","// bumped version via gulp\nexport const version = '3.3.0';\n","export interface ConnectionFindOptionsInterface {\n    filter: string,\n}\n\nexport class ClientToken {\n    constructor(\n        public id: string,\n        public type: string,\n        public data: string) {\n    }\n}\n\nexport class ClientTokens {\n    constructor(\n        public username: string,\n        public accessToken: ClientToken,\n        public idToken: ClientToken,\n        public refreshToken: ClientToken) {\n    }\n}\n\nexport class ClientUser {\n    constructor(public id: string,\n                public username: string,\n                public roles: string[],\n                message: string) {\n    }\n}\n\n","// import {XHRPromise} from './xhrpromise';\n// const superagent = require('superagent');\n// import from 'superagent';\n\nexport interface XhrOptionsInterface {\n    url: string,\n    data?: any,\n    headers?: any,\n    async?: boolean,\n    username?: string,\n    password?: string,\n    withCredentials?: boolean\n}\n\nexport enum XhrErrorReason {\n    UNKNOWN,\n    TIMEOUT,\n    STATUS\n}\n\n\nexport interface XhrErrorInterface {\n    reason: XhrErrorReason,\n    status: number,\n    code: number,\n    message: string,\n}\n\nexport class Ajax {\n\n    // private static xhr: XHRPromise = new XHRPromise();\n    private xhr; // : XHRPromise;\n\n    constructor() {\n\n        // https://www.twilio.com/blog/2017/08/http-requests-in-node-js.html\n        // axios ?\n        //  https://github.com/axios/axios\n        // const axios = require('axios');\n\n        // axios.get('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY')\n        //     .then(response => {\n        //         console.log(response.data.url);\n        //         console.log(response.data.explanation);\n        //     })\n\n        // superagent.get('https://api.nasa.gov/planetary/apod')\n        //     .query({ api_key: 'DEMO_KEY', date: '2017-08-02' })\n\n        this.xhr = require('axios'); // require('superagent'); // new XHRPromise();\n    };\n\n    private static formatResponseData(response: any): any {\n        // TODO switch depending on json headers\n        let dataParsed = response;\n\n        while (dataParsed && dataParsed.data) {\n            dataParsed = dataParsed.data;\n        }\n\n        try {\n            dataParsed = JSON.parse(dataParsed + '');\n        } catch (e) {\n        }\n        return dataParsed;\n    };\n\n    private static formatError(error: any): XhrErrorInterface {\n\n        const errorFormatted: XhrErrorInterface = {\n            reason: XhrErrorReason.UNKNOWN,\n            status: -1,\n            code: -1,\n            message: '',\n        };\n\n        if (error.status) {\n            errorFormatted.reason = XhrErrorReason.STATUS;\n            errorFormatted.status = parseInt(error.status, 10);\n            errorFormatted.code = parseInt(error.status, 10);\n        }\n\n        if (error.response) {\n            errorFormatted.message = error.response;\n\n            if (error.response.status) {\n                errorFormatted.reason = XhrErrorReason.STATUS;\n                errorFormatted.status = parseInt(error.response.status, 10);\n                errorFormatted.code = parseInt(error.response.status, 10);\n            } else if (error.response.status === null) { // timeout\n                errorFormatted.reason = XhrErrorReason.TIMEOUT;\n                errorFormatted.status = 408;\n                errorFormatted.code = 408;\n            }\n\n        } else if (error.request) {\n            errorFormatted.message = error.request;\n        } else if (error.message) {\n            errorFormatted.message = error.message;\n        }\n\n        // _this._handleError('browser', reject, null, 'browser doesn\\'t support XMLHttpRequest');\n        // _this._handleError('url', reject, null, 'URL is a required parameter');\n        // _this._handleError('parse', reject, null, 'invalid JSON response');\n        // return _this._handleError('error', reject);\n        // return _this._handleError('timeout', reject);\n        // return _this._handleError('abort', reject);\n        // return _this._handleError('send', reject, null, e.toString());\n\n        // if (err.reason === 'timeout') {\n        //     err.code = 408;\n        // } else {\n        //     err.code = 404;\n        // }\n\n        return errorFormatted;\n    };\n\n    public post(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n\n        const opt: any = {\n            method: 'POST',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n\n        return this.xhr.post(opt.url, opt.data, {\n                headers: opt.headers,\n                // timeout: 10000\n            })\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n\n    public put(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n        const opt: any = {\n            method: 'PUT',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .put(opt.url, opt.data, {\n                headers: opt.headers,\n                timeout: 10000\n            })\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n\n    public delete(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n        const opt: any = {\n            method: 'DELETE',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .delete(opt.url, // no data\n                {\n                    headers: opt.headers,\n                    timeout: 10000\n                })\n            // .delete(opt.url) // .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n\n    public get(args: XhrOptionsInterface): Promise<any | XhrErrorInterface> {\n        const opt: any = {\n            method: 'GET',\n            url: args.url\n        };\n        if (args.data) {\n            opt.data = args.data;\n        }\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .get(opt.url, {\n                // opt.data,\n                headers: opt.headers,\n                timeout: 10000\n            })\n            // .get(opt.url) // .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    return Promise.reject(Ajax.formatError(res));\n                }\n\n                return Promise.resolve(Ajax.formatResponseData(res));\n            })\n            .catch(err => {\n                return Promise.reject(Ajax.formatError(err));\n            });\n    }\n}\n","import {Ajax} from './ajax';\nimport {LocalStorage} from '../tools';\nimport {SdkInterface, ErrorInterface} from '../sdk/interfaces';\nimport * as tools from '../tools';\nimport {ClientToken, ClientTokens, ClientUser} from './interfaces';\n\nexport class Client {\n\n    public clientId: string;\n    private clientUuid: string;\n    private clientInfo: string;\n    // private refreshToken: string;\n    private static refreshCountInitial = 1;\n    private static refreshCount = Client.refreshCountInitial;\n    private static _clientUuid = 'v2.clientUuid';\n    private static _clientId = 'v2.clientId';\n    private static _refreshCount = 'v2.refreshCount';\n\n    constructor(private appId: string,\n                private URI: string,\n                private storage: LocalStorage,\n                private sdk: SdkInterface) {\n\n        let uuid: string = this.storage.get(Client._clientUuid) || 'uuid-' + Math.random();\n        let info = '_clientInfo'; // this.storage.get(Client._clientInfo);\n        if (typeof window !== 'undefined' && window.navigator) {\n            info = window.navigator.appName + '@' + window.navigator.appVersion + '-' + window.navigator.userAgent;\n        }\n        if (typeof window !== 'undefined' && window['device'] && window['device'].uuid) {\n            uuid = window['device'].uuid;\n        }\n        this.setClientUuid(uuid);\n        this.setClientInfo(info);\n        this.clientId = this.storage.get(Client._clientId);\n        Client.refreshCount = this.storage.get(Client._refreshCount) || Client.refreshCountInitial;\n    };\n\n    public setClientId(value: string) {\n        this.clientId = '' + value;\n        this.storage.set(Client._clientId, this.clientId);\n    }\n\n    public setClientUuid(value: string) {\n        this.clientUuid = '' + value;\n        this.storage.set(Client._clientUuid, this.clientUuid);\n    }\n\n    public setClientInfo(value: string) {\n        this.clientInfo = '' + value;\n        // this.storage.set('clientInfo', this.clientInfo);\n    }\n\n    /**\n     *\n     * @param login\n     * @param password\n     * @param updateProperties\n     * @throws {ErrorInterface}\n     */\n    public async login(login: string, password: string, updateProperties?: any): Promise<ClientTokens> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        const urlLogin = this.URI + '/users';\n        const dataLogin = {\n            name: login,\n            username: login,\n            email: login,\n            password: password\n        };\n\n        const createdUser: ClientUser = (await new Ajax().post({\n            url: urlLogin,\n            data: dataLogin,\n            headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n        }) as any).user;\n\n        this.setClientId(login); // login or createdUser.id or createdUser._id\n        const urlToken = this.URI + '/apps/' + this.appId + '/tokens';\n        const dataToken = {\n            grant_type: 'access_token',\n            // grant_type: 'client_credentials',\n            // client_id: this.clientId,\n            // client_secret: password,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            // audience: this.appId,\n            scope: JSON.stringify(this.sdk)\n        };\n        const createdAccessToken: ClientToken = (await new Ajax().post({\n            url: urlToken,\n            data: dataToken,\n            headers: {\n                'Content-Type': 'application/json', 'Accept': 'application/json',\n                'Authorization': 'Basic ' + tools.Base64.encode('' + login + ':' + password)\n            }\n        }) as any).token;\n\n        dataToken.grant_type = 'id_token';\n        const createdIdToken: ClientToken = (await new Ajax().post({\n            url: urlToken,\n            data: dataToken,\n            headers: {\n                'Content-Type': 'application/json', 'Accept': 'application/json',\n                'Authorization': 'Bearer ' + createdAccessToken.data\n            }\n        }) as any).token;\n\n        dataToken.grant_type = 'refresh_token';\n        const createdRefreshToken: ClientToken = (await new Ajax().post({\n            url: urlToken,\n            data: dataToken,\n            headers: {\n                'Content-Type': 'application/json', 'Accept': 'application/json',\n                'Authorization': 'Bearer ' + createdAccessToken.data\n            }\n        }) as any).token;\n\n        return new ClientTokens(login, createdAccessToken, createdIdToken, createdRefreshToken);\n    }\n\n    /**\n     *\n     * @param refreshToken\n     * @throws ErrorInterface\n     */\n    public async reAuthenticate(refreshToken: string): Promise<ClientToken> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        const url = this.URI + '/apps/' + this.appId + '/tokens';\n        const data = {\n            grant_type: 'refresh_token',\n            // client_id: this.clientId,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            // audience: this.appId,\n            scope: JSON.stringify(this.sdk),\n            refresh_token: refreshToken,\n            refreshCount: Client.refreshCount,\n        };\n\n        const clientToken: ClientToken = await new Ajax().post({\n            url: url,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json', 'Accept': 'application/json',\n                'Authorization': 'Bearer ' + refreshToken\n            }\n        })\n\n        Client.refreshCount++;\n        this.storage.set(Client._refreshCount, Client.refreshCount);\n\n        return clientToken;\n    }\n\n    public logout(refreshToken?: string): Promise<void | ErrorInterface> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        // delete this.clientUuid;\n        // delete this.clientId;\n        // this.storage.remove(Client._clientUuid);\n        this.storage.remove(Client._clientId);\n        this.storage.remove(Client._refreshCount);\n        Client.refreshCount = Client.refreshCountInitial;\n\n        if (!refreshToken || !this.clientId) {\n            return Promise.resolve();\n        }\n\n        const url = this.URI + '/apps/' + this.appId + '/tokens';\n\n        return new Ajax()\n            .delete({\n                url: url,\n                headers: {\n                    'Content-Type': 'application/json', 'Accept': 'application/json',\n                    'Authorization': 'Bearer ' + refreshToken\n                }\n            });\n    }\n\n    public isReady(): boolean {\n        return !!this.URI;\n    }\n}\n","import {Client} from './client';\nimport {ModuleServiceLoginOptionsInterface, SdkInterface, ErrorInterface, EndpointInterface, LoggerInterface} from '../sdk/interfaces';\nimport {Base64, LocalStorage, Xor} from '../tools';\nimport {Ajax} from './ajax';\nimport {ClientToken, ClientTokens, ClientUser, ConnectionFindOptionsInterface} from './interfaces';\nimport {Error} from '../sdk/error';\n\nexport class Connection {\n\n    public fidjId: string;\n    public fidjVersion: string;\n    public fidjCrypto: boolean;\n    public accessToken: string;\n    public accessTokenPrevious: string;\n    public idToken: string;\n    public refreshToken: string;\n    public states: { [s: string]: { state: boolean, time: number, lastTimeWasOk: number }; }; // Map<string, boolean>;\n    public apis: Array<EndpointInterface>;\n\n    private cryptoSalt: string;\n    private cryptoSaltNext: string;\n    private client: Client;\n    private user: ClientUser;\n\n    private static _accessToken = 'v2.accessToken';\n    private static _accessTokenPrevious = 'v2.accessTokenPrevious';\n    private static _idToken = 'v2.idToken';\n    private static _refreshToken = 'v2.refreshToken';\n    private static _states = 'v2.states';\n    private static _cryptoSalt = 'v2.cryptoSalt';\n    private static _cryptoSaltNext = 'v2.cryptoSalt.next';\n\n    constructor(private _sdk: SdkInterface,\n                private _storage: LocalStorage,\n                private _logger: LoggerInterface) {\n        this.client = null;\n        this.user = null;\n        this.cryptoSalt = this._storage.get(Connection._cryptoSalt) || null;\n        this.cryptoSaltNext = this._storage.get(Connection._cryptoSaltNext) || null;\n        this.accessToken = this._storage.get(Connection._accessToken) || null;\n        this.accessTokenPrevious = this._storage.get('v2.accessTokenPrevious') || null;\n        this.idToken = this._storage.get(Connection._idToken) || null;\n        this.refreshToken = this._storage.get(Connection._refreshToken) || null;\n        this.states = this._storage.get(Connection._states) || {};\n        this.apis = [];\n    };\n\n    isReady(): boolean {\n        return !!this.client && this.client.isReady();\n    }\n\n    async destroy(force?: boolean) {\n\n        this._storage.remove(Connection._accessToken);\n        this._storage.remove(Connection._idToken);\n        this._storage.remove(Connection._refreshToken);\n        this._storage.remove(Connection._states);\n\n        if (this.accessToken) {\n            this.accessTokenPrevious = this.accessToken;\n            this._storage.set(Connection._accessTokenPrevious, this.accessTokenPrevious);\n        }\n\n        if (force) {\n            this._storage.remove(Connection._cryptoSalt);\n            this._storage.remove(Connection._cryptoSaltNext);\n            this._storage.remove(Connection._accessTokenPrevious);\n        }\n\n        this.user = null;\n        if (this.client) {\n            // this.client.setClientId(null);\n            await this.client.logout();\n        }\n        this.accessToken = null;\n        this.idToken = null;\n        this.refreshToken = null;\n        this.states = {}; // new Map<string, boolean>();\n    }\n\n    setClient(client: Client): void {\n\n        this.client = client;\n        //if (!this.user) {\n        //    this.user = new ClientUser();\n        //}\n\n        // this._user._id = this._client.clientId;\n        //this.user._name = JSON.parse(this.getIdPayload({name: ''})).name;\n    }\n\n    setUser(user: ClientUser): void {\n        this.user = user;\n        if (this.client && this.user.id) {\n            this.client.setClientId(this.user.id);\n\n            // store only clientId\n            // delete this.user._id;\n        }\n    }\n\n    getUser(): ClientUser {\n        return this.user;\n    }\n\n    getClient(): Client {\n        return this.client;\n    }\n\n    setCryptoSalt(value: string) {\n        if (this.cryptoSalt !== value && this.cryptoSaltNext !== value) {\n            this.cryptoSaltNext = value;\n            this._storage.set(Connection._cryptoSaltNext, this.cryptoSaltNext);\n        }\n\n        if (!this.cryptoSalt) {\n            this.setCryptoSaltAsVerified();\n        }\n    }\n\n    setCryptoSaltAsVerified() {\n        if (this.cryptoSaltNext) {\n            this.cryptoSalt = this.cryptoSaltNext;\n            this._storage.set(Connection._cryptoSalt, this.cryptoSalt);\n        }\n        this.cryptoSaltNext = null;\n        this._storage.remove(Connection._cryptoSaltNext);\n    }\n\n    encrypt(data: any): string {\n\n        if (typeof data !== 'string') {\n            data = JSON.stringify(data);\n        } else {\n            const dataAsObj = {string: data};\n            data = JSON.stringify(dataAsObj);\n        }\n\n        if (this.fidjCrypto && this.cryptoSalt) {\n            const key = this.cryptoSalt;\n            return Xor.encrypt(data, key);\n        } else {\n            return data;\n        }\n    }\n\n    decrypt(data: string): any {\n        let decrypted = null;\n\n        try {\n            if (this.fidjCrypto && this.cryptoSaltNext) {\n                const key = this.cryptoSaltNext;\n                decrypted = Xor.decrypt(data, key);\n                decrypted = JSON.parse(decrypted);\n                // if (decrypted) {\n                //    this.setCryptoSaltAsVerified();\n                // }\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSalt) {\n                const key = this.cryptoSalt;\n                decrypted = Xor.decrypt(data, key);\n                decrypted = JSON.parse(decrypted);\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSalt) {\n                const key = this.cryptoSalt;\n                decrypted = Xor.decrypt(data, key, true);\n                decrypted = JSON.parse(decrypted);\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n\n        try {\n\n            if (!decrypted) {\n                decrypted = JSON.parse(data);\n            }\n\n            if (decrypted && decrypted.string) {\n                decrypted = decrypted.string;\n            }\n\n        } catch (err) {\n            decrypted = null;\n        }\n\n        return decrypted;\n    }\n\n    isLogin(): boolean {\n        let exp = true;\n        try {\n            const payload = this.refreshToken.split('.')[1];\n            const decoded = JSON.parse(Base64.decode(payload));\n            exp = ((new Date().getTime() / 1000) >= decoded.exp);\n\n        } catch (e) {\n        }\n        return !exp;\n    }\n\n    // todo reintegrate client.login()\n\n    async logout(): Promise<void | ErrorInterface> {\n        return this.getClient().logout(this.refreshToken);\n    }\n\n    getClientId(): string {\n        if (!this.client) {\n            return null;\n        }\n        return this.client.clientId;\n    }\n\n    async getIdToken() {\n        return this.idToken;\n    }\n\n    async getIdPayload(def?: any) {\n\n        const idToken = await this.getIdToken();\n\n        try {\n            let payload;\n            if (idToken) {\n                payload = idToken.split('.')[1];\n            }\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n            this._logger.log('fidj.connection.getIdPayload pb: ', def, e);\n        }\n\n        if (def) {\n            if (typeof def !== 'string') {\n                def = JSON.stringify(def);\n            }\n            return def;\n        }\n\n        return null;\n    }\n\n    async getAccessPayload(def?: any): Promise<string> {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.accessToken.split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n        }\n        return def ? def : null;\n    }\n\n    getPreviousAccessPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.accessTokenPrevious.split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n        }\n        return def ? def : null;\n    }\n\n    /**\n     * @throws ErrorInterface\n     */\n    async refreshConnection(): Promise<ClientUser> {\n\n        // store states\n        this._storage.set(Connection._states, this.states);\n\n        // token not expired : ok\n        if (this.accessToken) {\n            const payload = this.accessToken.split('.')[1];\n            const decoded = Base64.decode(payload);\n            const notExpired = (new Date().getTime() / 1000) < JSON.parse(decoded).exp;\n            // console.log('new Date().getTime() < JSON.parse(decoded).exp :', (new Date().getTime() / 1000), JSON.parse(decoded).exp);\n            this._logger.log('fidj.connection.connection.refreshConnection : token not expired ? ', notExpired);\n            if (notExpired) {\n                return Promise.resolve(this.getUser());\n            }\n        }\n\n        // remove expired refreshToken\n        if (this.refreshToken) {\n            const payload = this.refreshToken.split('.')[1];\n            const decoded = Base64.decode(payload);\n            const expired = (new Date().getTime() / 1000) >= JSON.parse(decoded).exp;\n            this._logger.log('fidj.connection.connection.refreshConnection : refreshToken not expired ? ', expired);\n            if (expired) {\n                this._storage.remove(Connection._refreshToken);\n            }\n        }\n\n        // remove expired accessToken & idToken & store it as Previous one\n        this.accessTokenPrevious = this.accessToken;\n        this._storage.set('v2.accessTokenPrevious', this.accessTokenPrevious);\n        this._storage.remove(Connection._accessToken);\n        this._storage.remove(Connection._idToken);\n        this.accessToken = null;\n        this.idToken = null;\n\n        // refresh authentication\n        this._logger.log('fidj.connection.connection.refreshConnection : refresh authentication.');\n        const client = this.getClient();\n        if (!client) {\n            throw new Error(400, 'Need an initialized client.');\n        }\n\n        const refreshToken: ClientToken = await this.getClient().reAuthenticate(this.refreshToken);\n\n        const previousIdToken = new ClientToken(this.getClientId(), 'idToken', this.idToken);\n        const previousAccessToken = new ClientToken(this.getClientId(), 'accessToken', this.accessToken);\n        const clientTokens = new ClientTokens(this.getClientId(), previousIdToken, previousAccessToken, refreshToken);\n        await this.setConnection(clientTokens);\n        return this.getUser();\n    };\n\n    async setConnection(clientTokens: ClientTokens) {\n\n        // only in private storage\n        if (clientTokens.accessToken) {\n            this.accessToken = clientTokens.accessToken.data;\n            this._storage.set(Connection._accessToken, this.accessToken);\n\n            const salt: string = JSON.parse(await this.getAccessPayload({salt: ''})).salt;\n            if (salt) {\n                this.setCryptoSalt(salt);\n            }\n        }\n        if (clientTokens.idToken) {\n            this.idToken = clientTokens.idToken.data;\n            this._storage.set(Connection._idToken, this.idToken);\n        }\n        if (clientTokens.refreshToken) {\n            this.refreshToken = clientTokens.refreshToken.data;\n            this._storage.set(Connection._refreshToken, this.refreshToken);\n        }\n\n        // store changed states\n        this._storage.set(Connection._states, this.states);\n\n        // expose roles, message\n        const clientUser = new ClientUser(\n            clientTokens.username, clientTokens.username,\n            JSON.parse(await this.getIdPayload({roles: []})).roles,\n            JSON.parse(await this.getIdPayload({message: ''})).message);\n        this.setUser(clientUser);\n    };\n\n    async setConnectionOffline(options: ModuleServiceLoginOptionsInterface) {\n\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n            this._storage.set(Connection._accessToken, this.accessToken);\n        }\n        if (options.idToken) {\n            this.idToken = options.idToken;\n            this._storage.set(Connection._idToken, this.idToken);\n        }\n        if (options.refreshToken) {\n            this.refreshToken = options.refreshToken;\n            this._storage.set(Connection._refreshToken, this.refreshToken);\n        }\n\n        this.setUser(new ClientUser('demo', 'demo',\n            JSON.parse(await this.getIdPayload({roles: []})).roles,\n            JSON.parse(await this.getIdPayload({message: ''})).message));\n    }\n\n    async getApiEndpoints(options?: ConnectionFindOptionsInterface): Promise<Array<EndpointInterface>> {\n\n        // todo : let ea = ['https://fidj/v3', 'https://fidj-proxy.herokuapp.com/v3'];\n        let ea: EndpointInterface[] = [\n            {key: 'fidj.default', url: 'https://api.fidj.ovh/v3', blocked: false}];\n        let filteredEa = [];\n\n        if (!this._sdk.prod) {\n            ea = [\n                {key: 'fidj.default', url: 'http://localhost:3201/v3', blocked: false},\n                {key: 'fidj.default', url: 'https://fidj-sandbox.herokuapp.com/v3', blocked: false}\n            ];\n        }\n\n        if (this.accessToken) {\n            const val = await this.getAccessPayload({apis: []});\n            const apiEndpoints: EndpointInterface[] = JSON.parse(val).apis;\n            if (apiEndpoints && apiEndpoints.length) {\n                ea = [];\n                apiEndpoints.forEach((endpoint) => {\n                    if (endpoint.url) {\n                        ea.push(endpoint);\n                    }\n                });\n            }\n        }\n\n        if (this.accessTokenPrevious) {\n            const apiEndpoints: EndpointInterface[] = JSON.parse(this.getPreviousAccessPayload({apis: []})).apis;\n            if (apiEndpoints && apiEndpoints.length) {\n                apiEndpoints.forEach((endpoint) => {\n                    if (endpoint.url && ea.filter((r) => r.url === endpoint.url).length === 0) {\n                        ea.push(endpoint);\n                    }\n                });\n            }\n        }\n\n        this._logger.log('fidj.sdk.connection.getApiEndpoints : ', ea);\n\n        let couldCheckStates = true;\n        if (this.states && Object.keys(this.states).length) {\n            for (let i = 0; (i < ea.length) && couldCheckStates; i++) {\n                if (!this.states[ea[i].url]) {\n                    couldCheckStates = false;\n                }\n            }\n        } else {\n            couldCheckStates = false;\n        }\n\n        if (options && options.filter) {\n            if (couldCheckStates && options.filter === 'theBestOne') {\n                for (let i = 0; (i < ea.length) && (filteredEa.length === 0); i++) {\n                    const endpoint = ea[i];\n                    if (this.states[endpoint.url] &&\n                        this.states[endpoint.url].state) {\n                        filteredEa.push(endpoint);\n                    }\n                }\n            } else if (couldCheckStates && options.filter === 'theBestOldOne') {\n                let bestOldOne: EndpointInterface;\n                for (let i = 0; (i < ea.length); i++) {\n                    const endpoint = ea[i];\n                    if (this.states[endpoint.url] &&\n                        this.states[endpoint.url].lastTimeWasOk &&\n                        (!bestOldOne || this.states[endpoint.url].lastTimeWasOk > this.states[bestOldOne.url].lastTimeWasOk)) {\n\n                        bestOldOne = endpoint;\n                    }\n                }\n                if (bestOldOne) {\n                    filteredEa.push(bestOldOne);\n                }\n            } else if (ea.length) {\n                filteredEa.push(ea[0]);\n            }\n        } else {\n            filteredEa = ea;\n        }\n\n        return filteredEa;\n    };\n\n    async getDBs(options?: ConnectionFindOptionsInterface): Promise<EndpointInterface[]> {\n\n        if (!this.accessToken) {\n            return [];\n        }\n\n        // todo test random DB connection\n        const random = Math.random() % 2;\n        let dbs = JSON.parse(await this.getAccessPayload({dbs: []})).dbs || [];\n\n        // need to synchronize db\n        if (random === 0) {\n            dbs = dbs.sort();\n        } else if (random === 1) {\n            dbs = dbs.reverse();\n        }\n\n        let filteredDBs = [];\n        let couldCheckStates = true;\n        if (this.states && Object.keys(this.states).length) {\n            for (let i = 0; (i < dbs.length) && couldCheckStates; i++) {\n                if (!this.states[dbs[i].url]) {\n                    couldCheckStates = false;\n                }\n            }\n        } else {\n            couldCheckStates = false;\n        }\n\n        if (couldCheckStates && options && options.filter === 'theBestOne') {\n            for (let i = 0; (i < dbs.length) && (filteredDBs.length === 0); i++) {\n                const endpoint = dbs[i];\n                if (this.states[endpoint.url] &&\n                    this.states[endpoint.url].state) {\n                    filteredDBs.push(endpoint);\n                }\n            }\n        } else if (couldCheckStates && options && options.filter === 'theBestOnes') {\n            for (let i = 0; (i < dbs.length); i++) {\n                const endpoint = dbs[i];\n                if (this.states[endpoint.url] &&\n                    this.states[endpoint.url].state) {\n                    filteredDBs.push(endpoint);\n                }\n            }\n        } else if (options && options.filter === 'theBestOne' && dbs.length) {\n            filteredDBs.push(dbs[0]);\n        } else {\n            filteredDBs = dbs;\n        }\n\n        return filteredDBs;\n    };\n\n    private async verifyApiState(currentTime: number, endpointUrl: string) {\n\n        try {\n\n            this._logger.log('fidj.sdk.connection.verifyApiState : ', currentTime, endpointUrl);\n\n            const data = await new Ajax()\n                .get({\n                    url: endpointUrl + '/status?isOk=' + this._sdk.version,\n                    headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                });\n\n            let state = false;\n            if (data && data.isOk) {\n                state = true;\n            }\n            this.states[endpointUrl] = {state: state, time: currentTime, lastTimeWasOk: currentTime};\n\n            this._logger.log('fidj.sdk.connection.verifyApiState > states : ', this.states);\n\n        } catch (err) {\n            let lastTimeWasOk = 0;\n            if (this.states[endpointUrl]) {\n                lastTimeWasOk = this.states[endpointUrl].lastTimeWasOk;\n            }\n            this.states[endpointUrl] = {state: false, time: currentTime, lastTimeWasOk: lastTimeWasOk};\n\n            this._logger.log('fidj.sdk.connection.verifyApiState > catch pb  - states : ', err, this.states);\n        }\n    }\n\n    private async verifyDbState(currentTime: number, dbEndpoint: string) {\n\n        try {\n            // console.log('verifyDbState: ', dbEndpoint);\n            await new Ajax()\n                .get({\n                    url: dbEndpoint,\n                    headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                });\n\n            this.states[dbEndpoint] = {state: true, time: currentTime, lastTimeWasOk: currentTime};\n            // resolve();\n            // console.log('verifyDbState: state', dbEndpoint, true);\n\n        } catch (err) {\n            let lastTimeWasOk = 0;\n            if (this.states[dbEndpoint]) {\n                lastTimeWasOk = this.states[dbEndpoint].lastTimeWasOk;\n            }\n            this.states[dbEndpoint] = {state: false, time: currentTime, lastTimeWasOk: lastTimeWasOk};\n            // resolve();\n        }\n    }\n\n    async verifyConnectionStates(): Promise<any | ErrorInterface> {\n\n        const currentTime = new Date().getTime();\n\n        // todo need verification ? not yet (cache)\n        // if (Object.keys(this.states).length > 0) {\n        //     const time = this.states[Object.keys(this.states)[0]].time;\n        //     if (currentTime < time) {\n        //         return Promise.resolve();\n        //     }\n        // }\n\n        // verify via GET status on Endpoints & DBs\n        const promises = [];\n        // this.states = {};\n        this.apis = await this.getApiEndpoints();\n        this.apis.forEach((endpointObj) => {\n            let endpointUrl: string = endpointObj.url;\n            if (!endpointUrl) {\n                endpointUrl = endpointObj.toString();\n            }\n            promises.push(this.verifyApiState(currentTime, endpointUrl));\n        });\n\n        const dbs = await this.getDBs();\n        dbs.forEach((dbEndpointObj) => {\n            let dbEndpoint: string = dbEndpointObj.url;\n            if (!dbEndpoint) {\n                dbEndpoint = dbEndpointObj.toString();\n            }\n            promises.push(this.verifyDbState(currentTime, dbEndpoint));\n        });\n        return Promise.all(promises);\n    };\n\n}\n","// import PouchDB from 'pouchdb';\n// let PouchDB: any;\n\nimport PouchDB from 'pouchdb/dist/pouchdb.js';\nimport {Error} from '../sdk/error';\nimport {EndpointInterface, ErrorInterface} from '../sdk/interfaces';\n\nlet FidjPouch;\n\nif (typeof window !== 'undefined') {\n    FidjPouch = (window['PouchDB']) ? window['PouchDB'] : require('pouchdb').default; // .default;\n    // load cordova adapter : https://github.com/pouchdb-community/pouchdb-adapter-cordova-sqlite/issues/22\n    const PouchAdapterCordovaSqlite = require('pouchdb-adapter-cordova-sqlite');\n    FidjPouch.plugin(PouchAdapterCordovaSqlite);\n}\n\nexport interface SessionCryptoInterface {\n    obj: Object,\n    method: string\n}\n\nexport class Session {\n\n    public dbRecordCount: number;\n    public dbLastSync: number; // Date().getTime();\n\n    private db: PouchDB; // PouchDB\n    private remoteDb: PouchDB; // PouchDB;\n    private remoteUri: string;\n    private dbs: Array<EndpointInterface>;\n\n    constructor() {\n        this.db = null;\n        this.dbRecordCount = 0;\n        this.dbLastSync = null;\n        this.remoteDb = null;\n        this.dbs = [];\n    };\n\n    public isReady(): boolean {\n        return !!this.db;\n    }\n\n    public create(uid: string, force?: boolean): Promise<any | ErrorInterface> {\n\n        if (!force && this.db) {\n            return Promise.resolve(this.db);\n        }\n\n        this.dbRecordCount = 0;\n        this.dbLastSync = null; // new Date().getTime();\n        this.db = null;\n        uid = uid || 'default';\n\n        if (typeof window === 'undefined') {\n            return Promise.resolve(this.db);\n        }\n\n        return new Promise((resolve, reject) => {\n\n            let opts: any = {location: 'default'};\n            try {\n                if (window['cordova']) {\n                    opts = {location: 'default', adapter: 'cordova-sqlite'};\n                    //    const plugin = require('pouchdb-adapter-cordova-sqlite');\n                    //    if (plugin) { Pouch.plugin(plugin); }\n                    //    this.db = new Pouch('fidj_db', {adapter: 'cordova-sqlite'});\n                }\n                // } else {\n                this.db = new FidjPouch('fidj_db_' + uid, opts); // , {adapter: 'websql'} ???\n                // }\n\n                this.db.info()\n                    .then((info) => {\n\n                        // todo if (info.adapter !== 'websql') {\n                        return resolve(this.db);\n                        // }\n\n                        // const newopts: any = opts || {};\n                        // newopts.adapter = 'idb';\n                        //\n                        // const newdb = new Pouch('fidj_db', opts);\n                        // this.db.replicate.to(newdb)\n                        //     .then(() => {\n                        //         this.db = newdb;\n                        //         resolve();\n                        //     })\n                        //     .catch((err) => {\n                        //         reject(new Error(400, err.toString()))\n                        //     });\n\n                    }).catch((err) => {\n                    reject(new Error(400, err));\n                });\n            } catch (err) {\n                reject(new Error(500, err));\n            }\n        });\n    }\n\n    public destroy(): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            this.dbRecordCount = 0;\n            this.dbLastSync = null;\n            return Promise.resolve();\n        }\n\n        if (this.db && !this.db.destroy) {\n            return Promise.reject(new Error(408, 'Need a valid db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.destroy((err, info) => {\n                if (err) {\n                    reject(new Error(500, err));\n                } else {\n                    this.dbRecordCount = 0;\n                    this.dbLastSync = null;\n                    this.db = null;\n                    resolve();\n                }\n            });\n        });\n    };\n\n    public setRemote(dbs: Array<EndpointInterface>): void {\n        this.dbs = dbs;\n    }\n\n    public sync(userId: string): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n        if (!this.dbs || !this.dbs.length) {\n            return Promise.reject(new Error(408, 'need a remote db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            try {\n\n                if (!this.remoteDb || this.remoteUri !== this.dbs[0].url) {\n                    this.remoteUri = this.dbs[0].url;\n                    this.remoteDb = new FidjPouch(this.remoteUri);\n                    // todo , {headers: {'Authorization': 'Bearer ' + id_token}});\n                }\n\n                this.db.replicate.to(this.remoteDb)\n                    .on('complete', (info) => {\n                        return this.remoteDb.replicate.to(this.db,\n                            {\n                                filter: (doc) => {\n                                    return (!!userId && !!doc && doc.fidjUserId === userId);\n                                }\n                            })\n                            .on('complete', () => {\n                                // this.logger\n                                resolve();\n                            })\n                            .on('denied', (err) => reject({code: 403, reason: {second: err}}))\n                            .on('error', (err) => reject({code: 401, reason: {second: err}}));\n\n                    })\n                    .on('denied', (err) => reject({code: 403, reason: {first: err}}))\n                    .on('error', (err) => reject({code: 401, reason: {first: err}}));\n\n            } catch (err) {\n                reject(new Error(500, err));\n            }\n        });\n    }\n\n    public put(data: any,\n               _id: string,\n               uid: string,\n               oid: string,\n               ave: string,\n               crypto?: SessionCryptoInterface): Promise<any | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n\n        if (!data || !_id || !uid || !oid || !ave) {\n            return Promise.reject(new Error(400, 'need formated data'));\n        }\n\n        const dataWithoutIds = JSON.parse(JSON.stringify(data));\n        const toStore: any = {\n            _id: _id,\n            fidjUserId: uid,\n            fidjOrgId: oid,\n            fidjAppVersion: ave\n        };\n        if (dataWithoutIds._rev) {\n            toStore._rev = '' + dataWithoutIds._rev;\n        }\n        delete dataWithoutIds._id;\n        delete dataWithoutIds._rev;\n        delete dataWithoutIds.fidjUserId;\n        delete dataWithoutIds.fidjOrgId;\n        delete dataWithoutIds.fidjAppVersion;\n        delete dataWithoutIds.fidjData;\n\n        let resultAsString = Session.write(Session.value(dataWithoutIds));\n        if (crypto) {\n            resultAsString = crypto.obj[crypto.method](resultAsString);\n            toStore.fidjDacr = resultAsString;\n        } else {\n            toStore.fidjData = resultAsString;\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.put(toStore, (err, response) => {\n                if (response && response.ok && response.id && response.rev) {\n                    this.dbRecordCount++;\n\n                    // propagate _rev & _id\n                    if (typeof data === 'object') {\n                        (data as any)._rev = response.rev;\n                        (data as any)._id = response.id;\n                        resolve(data);\n                    } else {\n                        resolve(response.id);\n                    }\n\n                } else {\n                    reject(new Error(500, err));\n                }\n            });\n        });\n    }\n\n    public remove(data_id: string): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then((doc) => {\n                    doc._deleted = true;\n                    return this.db.put(doc);\n                })\n                .then((result) => {\n                    resolve();\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public get(data_id: string, crypto?: SessionCryptoInterface): Promise<any | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'Need db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then(row => {\n                    if (!!row && (!!row.fidjDacr || !!row.fidjData)) {\n                        let data = row.fidjDacr;\n                        if (crypto && data) {\n                            data = crypto.obj[crypto.method](data);\n                        } else if (row.fidjData) {\n                            data = JSON.parse(row.fidjData);\n                        }\n                        const resultAsJson = Session.extractJson(data);\n                        if (resultAsJson) {\n                            resultAsJson._id = row._id;\n                            resultAsJson._rev = row._rev;\n                            resolve(JSON.parse(JSON.stringify(resultAsJson)));\n                        } else {\n                            // row._deleted = true;\n                            this.remove(row._id);\n                            reject(new Error(400, 'Bad encoding'));\n                        }\n                    } else {\n                        reject(new Error(400, 'No data found'));\n                    }\n                })\n                .catch(err => reject(new Error(500, err)));\n        });\n    }\n\n    public getAll(crypto?: SessionCryptoInterface): Promise<Array<any> | ErrorInterface> {\n\n        if (!this.db || !(this.db as any).allDocs) {\n            return Promise.reject(new Error(408, 'Need a valid db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            (this.db as any).allDocs({include_docs: true, descending: true})\n                .then(rows => {\n                    const all = [];\n                    rows.rows.forEach(row => {\n                        if (!!row && !!row.doc._id && (!!row.doc.fidjDacr || !!row.doc.fidjData)) {\n                            let data = row.doc.fidjDacr;\n                            if (crypto && data) {\n                                data = crypto.obj[crypto.method](data);\n                            } else if (row.doc.fidjData) {\n                                data = JSON.parse(row.doc.fidjData);\n                            }\n                            const resultAsJson = Session.extractJson(data);\n                            if (resultAsJson) {\n                                resultAsJson._id = row.doc._id;\n                                resultAsJson._rev = row.doc._rev;\n                                all.push(JSON.parse(JSON.stringify(resultAsJson)));\n                            } else {\n                                console.error('Bad encoding : delete row');\n                                // resultAsJson = {};\n                                // resultAsJson._id = row.doc._id;\n                                // resultAsJson._rev = row.doc._rev;\n                                // resultAsJson._deleted = true;\n                                // all.push(resultAsJson);\n                                this.remove(row.doc._id);\n                            }\n                        } else {\n                            console.error('Bad encoding');\n                        }\n                    });\n                    resolve(all);\n                })\n                .catch(err => reject(new Error(400, err)));\n        });\n    }\n\n    public isEmpty(): Promise<boolean | ErrorInterface> {\n\n        if (!this.db || !(this.db as any).allDocs) {\n            return Promise.reject(new Error(408, 'No db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            (this.db as any).allDocs({\n                // filter:  (doc) => {\n                //    if (!self.connection.user || !self.connection.user._id) return doc;\n                //    if (doc.fidjUserId === self.connection.user._id) return doc;\n                // }\n            })\n                .then((response) => {\n                    if (!response) {\n                        reject(new Error(400, 'No response'));\n                    } else {\n                        this.dbRecordCount = response.total_rows;\n                        if (response.total_rows && response.total_rows > 0) {\n                            resolve(false);\n                        } else {\n                            resolve(true);\n                        }\n                    }\n                })\n                .catch((err) => reject(new Error(400, err)));\n        });\n    }\n\n    public info(): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'No db'));\n        }\n        return this.db.info();\n    }\n\n    static write(item: any): string {\n        let value = 'null';\n        const t = typeof (item);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: item})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: item});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: item});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: item});\n        }\n        return value;\n    }\n\n    static value(item: any): any {\n        let result = item;\n        if (typeof (item) !== 'object') {\n            // return item;\n        } else if ('string' in item) {\n            result = item.string;\n        } else if ('number' in item) {\n            result = item.number.valueOf();\n        } else if ('bool' in item) {\n            result = item.bool.valueOf();\n        } else if ('json' in item) {\n            result = item.json;\n            if (typeof (result) !== 'object') {\n                result = JSON.parse(result);\n            }\n        }\n        return result;\n    }\n\n    static extractJson(item: any): any {\n        let result = item;\n        if (!item) {\n            return null;\n        }\n        if (typeof (item) === 'object' && 'json' in item) {\n            result = item.json;\n        }\n        if (typeof (result) === 'string') {\n            result = JSON.parse(result);\n        }\n        if (typeof (result) === 'object' && 'json' in result) {\n            result = (result as any).json;\n        }\n        if (typeof result !== 'object') {\n            result = null;\n        }\n        return result;\n    }\n\n}\n","export class Error {\n\n    constructor() {\n    };\n\n\n}","import {\n    LoggerInterface, LoggerLevelEnum\n} from './interfaces';\n\nexport class LoggerService implements LoggerInterface {\n\n    constructor(private level?: LoggerLevelEnum) {\n        if (!level) {\n            this.level = LoggerLevelEnum.ERROR;\n        }\n\n        if (typeof console === 'undefined') {\n            this.level = LoggerLevelEnum.NONE;\n        }\n    }\n\n    log(message: string, args: [any]) {\n        if (this.level === LoggerLevelEnum.INFO) {\n            console.log(message, args);\n        }\n    }\n\n    warn(message: string, args: [any]) {\n        if (this.level === LoggerLevelEnum.INFO || this.level === LoggerLevelEnum.WARN) {\n            console.warn(message, args);\n        }\n    }\n\n    error(message: string, args: [any]) {\n        if (this.level === LoggerLevelEnum.INFO || this.level === LoggerLevelEnum.WARN || this.level === LoggerLevelEnum.ERROR) {\n            console.error(message, args);\n        }\n    }\n\n    setLevel(level: LoggerLevelEnum) {\n        this.level = level;\n    }\n}\n\n","// import PouchDB from 'pouchdb';\n// import * as PouchDB from 'pouchdb/dist/pouchdb.js';\n// import PouchDB from 'pouchdb/dist/pouchdb.js';\nimport * as version from '../version';\nimport * as tools from '../tools';\nimport * as connection from '../connection';\nimport * as session from '../session';\nimport {\n    LoggerInterface,\n    ModuleServiceInitOptionsInterface,\n    ModuleServiceLoginOptionsInterface,\n    SdkInterface,\n    ErrorInterface, EndpointInterface, EndpointFilterInterface, LoggerLevelEnum\n} from './interfaces';\nimport {SessionCryptoInterface} from '../session/session';\nimport {Error} from './error';\nimport {Ajax} from '../connection/ajax';\nimport {LoggerService} from './logger.service';\nimport {ClientTokens, ClientUser} from '../connection';\n\nconst urljoin = require('url-join');\n// import {LocalStorage} from 'node-localstorage';\n// import 'localstorage-polyfill/localStorage';\n\n// const PouchDB = window['PouchDB'] || require('pouchdb').default;\n\n/**\n * please use its angular.js or angular.io wrapper\n * usefull only for fidj dev team\n */\nexport class InternalService {\n\n    private sdk: SdkInterface;\n    private logger: LoggerInterface;\n    private promise: PromiseConstructor;\n    private storage: tools.LocalStorage;\n    private session: session.Session;\n    private connection: connection.Connection;\n\n    constructor(logger: LoggerInterface, promise: PromiseConstructor, options?: ModuleServiceInitOptionsInterface) {\n\n        this.sdk = {\n            org: 'fidj',\n            version: version.version,\n            prod: false,\n            useDB: true\n        };\n        if (promise) {\n            this.promise = promise;\n        }\n        if (logger) {\n            this.logger = logger;\n        } else {\n            this.logger = new LoggerService();\n        }\n        if (options && options.logLevel) {\n            this.logger.setLevel(options.logLevel);\n        }\n\n        this.logger.log('fidj.sdk.service : constructor');\n        let ls;\n        if (typeof window !== 'undefined') {\n            ls = window.localStorage;\n        } else if (typeof global !== 'undefined') {\n            require('localstorage-polyfill');\n            ls = global['localStorage'];\n        }\n        this.storage = new tools.LocalStorage(ls, 'fidj.');\n        this.session = new session.Session();\n        this.connection = new connection.Connection(this.sdk, this.storage, this.logger);\n    }\n\n    /**\n     * Init connection & session\n     * Check uri\n     * Done each app start\n     *\n     * @param fidjId\n     * @param options Optional settings\n     * @param options.fidjId  required use your customized endpoints\n     * @param options.fidjSalt required use your customized endpoints\n     * @param options.fidjVersion required use your customized endpoints\n     * @param options.devMode optional default false, use your customized endpoints\n     * @returns\n     * @throws {ErrorInterface}\n     */\n    public async fidjInit(fidjId: string, options?: ModuleServiceInitOptionsInterface): Promise<void> {\n\n        /*if (options && options.forcedEndpoint) {\n            this.fidjService.setAuthEndpoint(options.forcedEndpoint);\n        }\n        if (options && options.forcedDBEndpoint) {\n            this.fidjService.setDBEndpoint(options.forcedDBEndpoint);\n        }*/\n        if (options && options.logLevel) {\n            this.logger.setLevel(options.logLevel);\n        } else {\n            this.logger.setLevel(LoggerLevelEnum.NONE);\n        }\n\n        this.logger.log('fidj.sdk.service.fidjInit : ', options);\n        if (!fidjId) {\n            this.logger.error('fidj.sdk.service.fidjInit : bad init');\n            return this.promise.reject(new Error(400, 'Need a fidjId'));\n        }\n\n        this.sdk.prod = !options ? true : options.prod;\n        this.sdk.useDB = !options ? false : options.useDB;\n        this.connection.fidjId = fidjId;\n        this.connection.fidjVersion = this.sdk.version;\n        this.connection.fidjCrypto = (!options || !options.hasOwnProperty('crypto')) ? false : options.crypto;\n\n        let bestUrls, bestOldUrls;\n        try {\n            await this.connection.verifyConnectionStates();\n            bestUrls = await this.connection.getApiEndpoints({filter: 'theBestOne'});\n            bestOldUrls = await this.connection.getApiEndpoints({filter: 'theBestOldOne'});\n        } catch (err) {\n            this.logger.error('fidj.sdk.service.fidjInit: ', err);\n            throw new Error(500, err.toString());\n        }\n\n        if (!bestUrls || !bestOldUrls || (bestUrls.length === 0 && bestOldUrls.length === 0)) {\n            throw new Error(404, 'Need one connection - or too old SDK version (check update)');\n        }\n\n        let theBestFirstUrl = bestUrls[0];\n        let theBestFirstOldUrl = bestOldUrls[0];\n        const isLogin = this.fidjIsLogin();\n        this.logger.log('fidj.sdk.service.fidjInit > verifyConnectionStates : ', theBestFirstUrl, theBestFirstOldUrl, isLogin);\n\n        if (theBestFirstUrl) {\n            this.connection.setClient(new connection.Client(this.connection.fidjId, theBestFirstUrl.url, this.storage, this.sdk));\n        } else {\n            this.connection.setClient(new connection.Client(this.connection.fidjId, theBestFirstOldUrl.url, this.storage, this.sdk));\n        }\n    };\n\n    /**\n     * Call it if fidjIsLogin() === false\n     * Erase all (db & storage)\n     *\n     * @param login\n     * @param password\n     * @throws {ErrorInterface}\n     */\n    public async fidjLogin(login: string, password: string): Promise<ClientUser> {\n        this.logger.log('fidj.sdk.service.fidjLogin');\n        if (!this.connection.isReady()) {\n            throw new Error(404, 'Need an initialized FidjService');\n        }\n\n        try {\n            await this._removeAll();\n            await this.connection.verifyConnectionStates();\n            await this._createSession(this.connection.fidjId);\n            const clientTokens = await this._loginInternal(login, password);\n            await this.connection.setConnection(clientTokens);\n        } catch (err) {\n            throw new Error(500, err.toString());\n        }\n\n        if (!this.sdk.useDB) {\n            return this.connection.getUser();\n        }\n\n        try {\n            await this.session.sync(this.connection.getClientId());\n        } catch (e) {\n            this.logger.warn('fidj.sdk.service.fidjLogin: sync -not blocking- issue  ', e.toString());\n        }\n        return this.connection.getUser();\n    }\n\n    /**\n     *\n     * @param options\n     * @param options.accessToken optional\n     * @param options.idToken  optional\n     * @returns\n     */\n    public async fidjLoginInDemoMode(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface> {\n        const self = this;\n\n        // generate one day tokens if not set\n        if (!options || !options.accessToken) {\n            const now = new Date();\n            now.setDate(now.getDate() + 1);\n            const tomorrow = now.getTime();\n            const payload = tools.Base64.encode(JSON.stringify({\n                roles: [],\n                message: 'demo',\n                apis: [],\n                endpoints: [],\n                dbs: [],\n                exp: tomorrow\n            }));\n            const jwtSign = tools.Base64.encode(JSON.stringify({}));\n            const token = jwtSign + '.' + payload + '.' + jwtSign;\n            options = {\n                accessToken: token,\n                idToken: token,\n                refreshToken: token\n            };\n        }\n\n        return new self.promise((resolve, reject) => {\n            self._removeAll()\n                .then(() => {\n                    return self._createSession(self.connection.fidjId);\n                })\n                .then(async () => {\n                    await self.connection.setConnectionOffline(options);\n                    resolve(self.connection.getUser());\n                })\n                .catch((err) => {\n                    self.logger.error('fidj.sdk.service.fidjLoginInDemoMode error: ', err);\n                    reject(err);\n                });\n        });\n    };\n\n    public fidjIsLogin(): boolean {\n        return this.connection.isLogin();\n    };\n\n    public async fidjGetEndpoints(filter?: EndpointFilterInterface): Promise<Array<EndpointInterface>> {\n\n        if (!filter) {\n            filter = {showBlocked: false};\n        }\n        const ap = await this.connection.getAccessPayload({endpoints: []});\n        let endpoints = JSON.parse(ap).endpoints;\n        if (!endpoints || !Array.isArray(endpoints)) {\n            return [];\n        }\n\n        endpoints = endpoints.filter((endpoint: EndpointInterface) => {\n            let ok = true;\n            if (ok && filter.key) {\n                ok = (endpoint.key === filter.key);\n            }\n            if (ok && !filter.showBlocked) {\n                ok = !endpoint.blocked;\n            }\n            return ok;\n        });\n        return endpoints;\n    };\n\n    public async fidjRoles(): Promise<Array<string>> {\n        return JSON.parse(await this.connection.getIdPayload({roles: []})).roles;\n    };\n\n    public async fidjMessage(): Promise<string> {\n        return JSON.parse(await this.connection.getIdPayload({message: ''})).message;\n    };\n\n    public async fidjLogout(force?: boolean): Promise<void | ErrorInterface> {\n        const self = this;\n        if (!self.connection.getClient() && !force) {\n            return self._removeAll()\n                .then(() => {\n                    return this.session.create(self.connection.fidjId, true);\n                });\n        }\n\n        return self.connection.logout()\n            .then(() => {\n                return self._removeAll();\n            })\n            .catch(() => {\n                return self._removeAll();\n            })\n            .then(() => {\n                return this.session.create(self.connection.fidjId, true);\n            });\n    };\n\n    /**\n     * Synchronize DB\n     *\n     *\n     * @param fnInitFirstData a function with db as input and that return promise: call if DB is empty\n     * @param fnInitFirstData_Arg arg to set to fnInitFirstData()\n     * @returns  promise\n     */\n    public async fidjSync(fnInitFirstData?, fnInitFirstData_Arg?): Promise<void | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjSync');\n        // if (!self.session.isReady()) {\n        //    return self.promise.reject('fidj.sdk.service.fidjSync : DB sync impossible. Did you login ?');\n        // }\n\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjSync: you ar not using DB - no sync available.');\n            return Promise.resolve();\n        }\n\n        const firstSync = (self.session.dbLastSync === null);\n\n        return new self.promise((resolve, reject) => {\n\n            self._createSession(self.connection.fidjId)\n                .then(() => {\n                    return self.session.sync(self.connection.getClientId());\n                })\n                .then(() => {\n                    self.logger.log('fidj.sdk.service.fidjSync resolved');\n                    return self.session.isEmpty();\n                })\n                .catch((err) => {\n                    self.logger.warn('fidj.sdk.service.fidjSync warn: ', err);\n                    return self.session.isEmpty();\n                })\n                .then((isEmpty) => {\n                    self.logger.log('fidj.sdk.service.fidjSync isEmpty : ', isEmpty, firstSync);\n\n                    return new self.promise((resolveEmpty, rejectEmptyNotUsed) => {\n                        if (isEmpty && firstSync && fnInitFirstData) {\n                            const ret = fnInitFirstData(fnInitFirstData_Arg);\n                            if (ret && ret['catch'] instanceof Function) {\n                                ret.then(resolveEmpty).catch(reject);\n                            }\n                            if (typeof ret === 'string') {\n                                self.logger.log(ret);\n                            }\n                        }\n                        resolveEmpty(); // self.connection.getUser());\n                    });\n                })\n                .then((info) => {\n                    self.logger.log('fidj.sdk.service.fidjSync fnInitFirstData resolved: ', info);\n                    self.session.dbLastSync = new Date().getTime();\n                    return self.session.info();\n                })\n                .then((result: any) => {\n                    self.session.dbRecordCount = 0;\n                    if (result && result.doc_count) {\n                        self.session.dbRecordCount = result.doc_count;\n                    }\n                    self.logger.log('fidj.sdk.service.fidjSync _dbRecordCount : ' + self.session.dbRecordCount);\n\n                    return self.connection.refreshConnection();\n                })\n                .then((user) => {\n                    self.logger.log('fidj.sdk.service.fidjSync refreshConnection done : ', user);\n                    resolve(); // self.connection.getUser()\n                })\n                .catch((err: ErrorInterface) => {\n                    // console.error(err);\n                    self.logger.warn('fidj.sdk.service.fidjSync refreshConnection failed : ', err);\n\n                    if (err && (err.code === 403 || err.code === 410)) {\n                        this.fidjLogout()\n                            .then(() => {\n                                reject({code: 403, reason: 'Synchronization unauthorized : need to login again.'});\n                            })\n                            .catch(() => {\n                                reject({code: 403, reason: 'Synchronization unauthorized : need to login again..'});\n                            });\n                    } else if (err && err.code) {\n                        // todo what to do with this err ?\n                        resolve();\n                    } else {\n                        const errMessage = 'Error during synchronisation: ' + err.toString();\n                        self.logger.error(errMessage);\n                        reject({code: 500, reason: errMessage});\n                    }\n                })\n            ;\n        });\n    };\n\n    public async fidjPutInDb(data: any): Promise<string | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjPutInDb: ', data);\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjPutInDb: you are not using DB - no put available.');\n            return Promise.resolve('NA');\n        }\n\n        if (!self.connection.getClientId()) {\n            return self.promise.reject(new Error(401, 'DB put impossible. Need a user logged in.'));\n        }\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, 'Need to be synchronised.'));\n        }\n\n        let _id: string;\n        if (data && typeof data === 'object' && Object.keys(data).indexOf('_id')) {\n            _id = data._id;\n        }\n        if (!_id) {\n            _id = self._generateObjectUniqueId(self.connection.fidjId);\n        }\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'encrypt'\n            }\n        }\n\n        return self.session.put(\n            data,\n            _id,\n            self.connection.getClientId(),\n            self.sdk.org,\n            self.connection.fidjVersion,\n            crypto);\n    };\n\n    public async fidjRemoveInDb(data_id: string): Promise<void | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjRemoveInDb ', data_id);\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjRemoveInDb: you are not using DB - no remove available.');\n            return Promise.resolve();\n        }\n\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, 'Need to be synchronised.'));\n        }\n\n        if (!data_id || typeof data_id !== 'string') {\n            return self.promise.reject(new Error(400, 'DB remove impossible. ' +\n                'Need the data._id.'));\n        }\n\n        return self.session.remove(data_id);\n    };\n\n    public async fidjFindInDb(data_id: string): Promise<any | ErrorInterface> {\n        const self = this;\n\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjFindInDb: you are not using DB - no find available.');\n            return Promise.resolve();\n        }\n\n        if (!self.connection.getClientId()) {\n            return self.promise.reject(new Error(401, 'Find pb : need a user logged in.'));\n        }\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, ' Need to be synchronised.'));\n        }\n\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.get(data_id, crypto);\n    };\n\n    public async fidjFindAllInDb(): Promise<Array<any> | ErrorInterface> {\n        const self = this;\n\n        if (!self.sdk.useDB) {\n            self.logger.log('fidj.sdk.service.fidjFindAllInDb: you are not using DB - no find available.');\n            return Promise.resolve([]);\n        }\n\n        if (!self.connection.getClientId()) {\n            return self.promise.reject(new Error(401, 'Need a user logged in.'));\n        }\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(400, 'Need to be synchronised.'));\n        }\n\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.getAll(crypto)\n            .then(results => {\n                self.connection.setCryptoSaltAsVerified();\n                return self.promise.resolve((results as Array<any>));\n            });\n    };\n\n    public async fidjSendOnEndpoint(key: string, verb: string, relativePath: string, data: any) {\n        const filter: EndpointFilterInterface = {\n            key: key\n        };\n        const endpoints = await this.fidjGetEndpoints(filter);\n        if (!endpoints || endpoints.length !== 1) {\n            return this.promise.reject(\n                new Error(400,\n                    'fidj.sdk.service.fidjSendOnEndpoint : endpoint does not exist.'));\n        }\n\n        let endpointUrl = endpoints[0].url;\n        if (relativePath) {\n            endpointUrl = urljoin(endpointUrl, relativePath);\n        }\n        const jwt = await this.connection.getIdToken();\n        let answer;\n        const query = new Ajax();\n        switch (verb) {\n            case 'POST' :\n                answer = query.post({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    data: data\n                });\n                break;\n            case 'PUT' :\n                answer = query.put({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    data: data\n                });\n                break;\n            case 'DELETE' :\n                answer = query.delete({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    // not used: data: data\n                });\n                break;\n            default:\n                answer = query.get({\n                    url: endpointUrl,\n                    // not used : withCredentials: true,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + jwt\n                    },\n                    // not used: data: data\n                });\n        }\n        return answer;\n    };\n\n    public async fidjGetIdToken() {\n        return this.connection.getIdToken();\n    };\n\n    // Internal functions\n\n    /**\n     * Logout then Login\n     *\n     * @param login\n     * @param password\n     * @param updateProperties\n     * @throws {ErrorInterface}\n     */\n    private async _loginInternal(login: string, password: string, updateProperties?: any): Promise<ClientTokens> {\n        this.logger.log('fidj.sdk.service._loginInternal');\n        if (!this.connection.isReady()) {\n            throw new Error(403, 'Need an initialized FidjService');\n        }\n\n        await this.connection.logout();\n\n        let clientTokens;\n        try {\n            clientTokens = this.connection.getClient().login(login, password, updateProperties);\n        } catch (e) {\n            clientTokens = await this.connection.getClient().login(login, password, updateProperties);\n        }\n        return clientTokens;\n    };\n\n    protected async _removeAll(): Promise<void | ErrorInterface> {\n        this.connection.destroy();\n        return this.session.destroy();\n    };\n\n    private async _createSession(uid: string): Promise<void | ErrorInterface> {\n        const dbs: EndpointInterface[] = await this.connection.getDBs({filter: 'theBestOnes'});\n        if (!dbs || dbs.length === 0) {\n            this.logger.warn('Seems that you are in Demo mode or using Node (no remote DB).');\n        }\n        this.session.setRemote(dbs);\n        return this.session.create(uid);\n    };\n\n    private async _testPromise(a?): Promise<any> {\n        if (a) {\n            return this.promise.resolve('test promise ok ' + a);\n        }\n        return new this.promise((resolve, reject) => {\n            resolve('test promise ok');\n        });\n    };\n\n    private static _srvDataUniqId = 0;\n\n    private _generateObjectUniqueId(appName, type?, name?) {\n\n        // return null;\n        const now = new Date();\n        const simpleDate = '' + now.getFullYear() + '' + now.getMonth() + '' + now.getDate()\n            + '' + now.getHours() + '' + now.getMinutes(); // new Date().toISOString();\n        const sequId = ++InternalService._srvDataUniqId;\n        let UId = '';\n        if (appName && appName.charAt(0)) {\n            UId += appName.charAt(0) + '';\n        }\n        if (type && type.length > 3) {\n            UId += type.substring(0, 4);\n        }\n        if (name && name.length > 3) {\n            UId += name.substring(0, 4);\n        }\n        UId += simpleDate + '' + sequId;\n        return UId;\n    }\n\n}\n","/* tslint:disable:max-line-length */\nimport {Injectable} from '@angular/core';\nimport {\n    EndpointInterface,\n    ErrorInterface,\n    LoggerInterface,\n    LoggerLevelEnum,\n    ModuleServiceInitOptionsInterface,\n    ModuleServiceInterface,\n    ModuleServiceLoginOptionsInterface\n} from './interfaces';\nimport {InternalService} from './internal.service';\nimport {Error as FidjError} from '../connection';\nimport {LoggerService} from './logger.service';\n\n/**\n * Angular FidjService\n * @see ModuleServiceInterface\n *\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class FidjService implements ModuleServiceInterface {\n\n    private logger: LoggerInterface;\n    private fidjService: InternalService;\n    private promise: any;\n\n    constructor() {\n        this.logger = new LoggerService(LoggerLevelEnum.ERROR);\n        this.promise = Promise;\n        this.fidjService = null;\n        // let pouchdbRequired = PouchDB;\n        // pouchdbRequired.error();\n    };\n\n    public async init(fidjId: string, options?: ModuleServiceInitOptionsInterface): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            this.fidjService = new InternalService(this.logger, this.promise);\n        }\n        return this.fidjService.fidjInit(fidjId, options);\n    };\n\n    public async login(login: string, password: string): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular.login : not initialized.'));\n        }\n        return this.fidjService.fidjLogin(login, password);\n    };\n\n    public async loginAsDemo(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular.loginAsDemo : not initialized.'));\n        }\n        return this.fidjService.fidjLoginInDemoMode(options);\n    };\n\n    public isLoggedIn(): boolean {\n        if (!this.fidjService) {\n            return false; // this.promise.reject('fidj.sdk.angular.isLoggedIn : not initialized.');\n        }\n        return this.fidjService.fidjIsLogin();\n    };\n\n    public async getRoles(): Promise<Array<string>> {\n        if (!this.fidjService) {\n            return [];\n        }\n        return await this.fidjService.fidjRoles();\n    };\n\n    public async getEndpoints(): Promise<Array<EndpointInterface>> {\n        if (!this.fidjService) {\n            return [];\n        }\n        return this.fidjService.fidjGetEndpoints();\n    };\n\n    public async sendOnEndpoint(key: string, verb: string, relativePath?: string, data?: any): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular.loginAsDemo : not initialized.'));\n        }\n        return this.fidjService.fidjSendOnEndpoint(key, verb, relativePath, data);\n    };\n\n    public async getIdToken() {\n        if (!this.fidjService) {\n            return;\n        }\n        return this.fidjService.fidjGetIdToken();\n    };\n\n    public async getMessage(): Promise<string> {\n        if (!this.fidjService) {\n            return '';\n        }\n        return this.fidjService.fidjMessage();\n    };\n\n    public async logout(force?: boolean): Promise<void | ErrorInterface> {\n        if (force || !this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular.logout : not initialized.'));\n        }\n        return this.fidjService.fidjLogout(force);\n    };\n\n    /**\n     *\n     * Synchronize DB\n     * @param fnInitFirstData  a function with db as input and that return promise: call if DB is empty\n     * @returns promise with this.session.db\n     * @memberof fidj.angularService\n     *\n     * @example\n     *  let initDb = function() {\n     *     this.fidjService.put('my first row');\n     *  };\n     *  this.fidjService.sync(initDb)\n     *  .then(user => ...)\n     *  .catch(err => ...)\n     *\n     */\n    public async sync(fnInitFirstData?): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular.sync : not initialized.'));\n        }\n        return this.fidjService.fidjSync(fnInitFirstData, this);\n    };\n\n    /**\n     * Store data in your session\n     *\n     * @param data to store\n     * @returns\n     */\n    public async put(data: any): Promise<string | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular.put : not initialized.'));\n        }\n        return this.fidjService.fidjPutInDb(data);\n    };\n\n    /**\n     * Find object Id and remove it from your session\n     *\n     * @param id of object to find and remove\n     * @returns\n     */\n    public async remove(id: string): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular.remove : not initialized.'));\n        }\n        return this.fidjService.fidjRemoveInDb(id);\n    };\n\n    /**\n     * Find\n     */\n    public async find(id: string): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular.find : not initialized.'));\n        }\n        return this.fidjService.fidjFindInDb(id);\n    };\n\n    public async findAll(): Promise<any[] | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular.findAll : not initialized.'));\n        }\n        return this.fidjService.fidjFindAllInDb();\n    };\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Error","tools.Base64","version.version","tools.LocalStorage","session.Session","connection.Connection","connection.Client","FidjError"],"mappings":"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"}