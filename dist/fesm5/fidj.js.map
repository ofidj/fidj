{"version":3,"file":"fidj.js.map","sources":["ng://fidj/tools/base64.ts","ng://fidj/tools/storage.ts","ng://fidj/tools/xor.ts","ng://fidj/version/index.ts","ng://fidj/connection/xhrpromise.ts","ng://fidj/connection/ajax.ts","ng://fidj/connection/client.ts","ng://fidj/sdk/error.ts","ng://fidj/connection/connection.ts","ng://fidj/session/session.ts","ng://fidj/sdk/internal.service.ts","ng://fidj/sdk/angular.service.ts","ng://fidj/sdk/fidj.module.ts"],"sourcesContent":["export class Base64 {\n\n    constructor() {\n    };\n\n    /**\n     * Decodes string from Base64 string\n     */\n    public static encode(input: string): string {\n\n        if (!input) {\n            return null;\n        }\n\n        return btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g,\n            function toSolidBytes(match, p1) {\n                return String.fromCharCode(parseInt('0x' + p1, 16));\n            }));\n\n    }\n\n    public static decode(input: string): string {\n\n        if (!input) {\n            return null;\n        }\n\n        return decodeURIComponent(atob(input).split('').map((c) => {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n\n    }\n}\n","/**\n * localStorage class factory\n * Usage : var LocalStorage = fidj.LocalStorageFactory(window.localStorage); // to create a new class\n * Usage : var localStorageService = new LocalStorage(); // to create a new instance\n */\nexport class LocalStorage {\n\n    public version = '0.1';\n    private storage;\n\n    // Constructor\n    constructor(storageService, private storageKey) {\n        this.storage = storageService || window.localStorage;\n        if (!this.storage) {\n            throw new Error('fidj.LocalStorageFactory needs a storageService!');\n        }\n        // todo LocalStorage refacto\n        //            if (!fidj.Xml) {\n        //                throw new Error('fidj.Xml needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Json) {\n        //                throw new Error('fidj.Json needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Xml.isXml || !fidj.Xml.xml2String || !fidj.Xml.string2Xml) {\n        //                throw new Error('fidj.Xml with isXml(), xml2String()\n        // and string2Xml() needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //            if (!fidj.Json.object2String || !fidj.Json.string2Object) {\n        //                throw new Error('fidj.Json with object2String()\n        // and string2Object() needs to be loaded before fidj.LocalStorage!');\n        //            }\n        //\n    }\n\n    // Public API\n\n    /**\n     * Sets a key's value.\n     *\n     * @param key - Key to set. If this value is not set or not\n     *              a string an exception is raised.\n     * @param value - Value to set. This can be any value that is JSON\n     *              compatible (Numbers, Strings, Objects etc.).\n     * @returns the stored value which is a container of user value.\n     */\n    set(key: string, value) {\n\n        key = this.storageKey + key;\n        this.checkKey(key);\n        // clone the object before saving to storage\n        const t = typeof(value);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: value})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: value});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: value});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: value});\n        } else {\n            // reject and do not insert\n            // if (typeof value == \"function\") for example\n            throw new TypeError('Value type ' + t + ' is invalid. It must be null, undefined, xml, string, number, boolean or object');\n        }\n        this.storage.setItem(key, value);\n        return value;\n    };\n\n    /**\n     * Looks up a key in cache\n     *\n     * @param key - Key to look up.\n     * @param def - Default value to return, if key didn't exist.\n     * @returns the key value, default value or <null>\n     */\n    get(key: string, def?) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const item = this.storage.getItem(key);\n        if (item !== null) {\n            if (item === 'null') {\n                return null;\n            }\n            const value = JSON.parse(item);\n\n            // var value = fidj.Json.string2Object(item);\n            // if ('xml' in value) {\n            //     return fidj.Xml.string2Xml(value.xml);\n            // } else\n            if ('string' in value) {\n                return value.string;\n            } else if ('number' in value) {\n                return value.number.valueOf();\n            } else if ('bool' in value) {\n                return value.bool.valueOf();\n            } else {\n                return value.json;\n            }\n        }\n        return !def ? null : def;\n    };\n\n    /**\n     * Deletes a key from cache.\n     *\n     * @param  key - Key to delete.\n     * @returns true if key existed or false if it didn't\n     */\n    remove(key: string) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const existed = (this.storage.getItem(key) !== null);\n        this.storage.removeItem(key);\n        return existed;\n    };\n\n    /**\n     * Deletes everything in cache.\n     *\n     * @return true\n     */\n    clear() {\n        const existed = (this.storage.length > 0);\n        this.storage.clear();\n        return existed;\n    };\n\n    /**\n     * How much space in bytes does the storage take?\n     *\n     * @returns Number\n     */\n    size() {\n        return this.storage.length;\n    };\n\n    /**\n     * Call function f on the specified context for each element of the storage\n     * from index 0 to index length-1.\n     * WARNING : You should not modify the storage during the loop !!!\n     *\n     * @param f - Function to call on every item.\n     * @param  context - Context (this for example).\n     * @returns Number of items in storage\n     */\n    foreach(f, context) {\n        const n = this.storage.length;\n        for (let i = 0; i < n; i++) {\n            const key = this.storage.key(i);\n            const value = this.get(key);\n            if (context) {\n                // f is an instance method on instance context\n                f.call(context, value);\n            } else {\n                // f is a function or class method\n                f(value);\n            }\n        }\n        return n;\n    };\n\n    // Private API\n    // helper functions and variables hidden within this function scope\n\n    private checkKey(key) {\n        if (!key || (typeof key !== 'string')) {\n            throw new TypeError('Key type must be string');\n        }\n        return true;\n    }\n}\n","import {Base64} from './base64';\n\nexport class Xor {\n\n    static header = 'artemis-lotsum';\n\n    constructor() {\n    };\n\n\n    public static encrypt(value: string, key: string): string {\n\n        let result = '';\n\n        value = Xor.header + value;\n\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode((value[i].charCodeAt(0).toString(10) as any) ^ Xor.keyCharAt(key, i));\n        }\n        result = Base64.encode(result);\n        return result;\n    };\n\n    public static decrypt(value: string, key: string, oldStyle?: boolean): string {\n        let result = '';\n        value = Base64.decode(value);\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode((value[i].charCodeAt(0).toString(10) as any) ^ Xor.keyCharAt(key, i));\n        }\n\n        if (!oldStyle && Xor.header !== result.substring(0, Xor.header.length)) {\n            return null;\n        }\n\n        if (!oldStyle) {\n            result = result.substring(Xor.header.length);\n        }\n        return result;\n    }\n\n    public static keyCharAt(key, i) {\n        return key[Math.floor(i % key.length)].charCodeAt(0).toString(10);\n    }\n\n\n}\n","// bumped version via gulp\nexport const version = '2.1.18';\n","export class XHRPromise {\n\n    public DEFAULT_CONTENT_TYPE = 'application/x-www-form-urlencoded; charset=UTF-8';\n    private _xhr;\n    private _unloadHandler: any;\n\n    constructor() {\n    };\n\n    /*\n     * XHRPromise.send(options) -> Promise\n     * - options (Object): URL, method, data, etc.\n     *\n     * Create the XHR object and wire up event handlers to use a promise.\n     */\n    send(options): Promise<any> {\n        let defaults;\n        if (options == null) {\n            options = {};\n        }\n        defaults = {\n            method: 'GET',\n            data: null,\n            headers: {},\n            async: true,\n            username: null,\n            password: null,\n            withCredentials: false\n        };\n        options = Object.assign({}, defaults, options);\n        return new Promise(( (_this: XHRPromise) => {\n            return  (resolve, reject) => {\n                let e, header, ref, value, xhr;\n                if (!XMLHttpRequest) {\n                    _this._handleError('browser', reject, null, 'browser doesn\\'t support XMLHttpRequest');\n                    return;\n                }\n                if (typeof options.url !== 'string' || options.url.length === 0) {\n                    _this._handleError('url', reject, null, 'URL is a required parameter');\n                    return;\n                }\n                _this._xhr = xhr = new XMLHttpRequest;\n                xhr.onload =  ()  => {\n                    let responseText;\n                    _this._detachWindowUnload();\n                    try {\n                        responseText = _this._getResponseText();\n                    } catch (_error) {\n                        _this._handleError('parse', reject, null, 'invalid JSON response');\n                        return;\n                    }\n                    return resolve({\n                        url: _this._getResponseUrl(),\n                        status: xhr.status,\n                        statusText: xhr.statusText,\n                        responseText: responseText,\n                        headers: _this._getHeaders(),\n                        xhr: xhr\n                    });\n                };\n                xhr.onerror =  () => {\n                    return _this._handleError('error', reject);\n                };\n                xhr.ontimeout =  () => {\n                    return _this._handleError('timeout', reject);\n                };\n                xhr.onabort =  () => {\n                    return _this._handleError('abort', reject);\n                };\n                _this._attachWindowUnload();\n                xhr.open(options.method, options.url, options.async, options.username, options.password);\n                if (options.withCredentials) {\n                    xhr.withCredentials = true;\n                }\n                if ((options.data != null) && !options.headers['Content-Type']) {\n                    options.headers['Content-Type'] = _this.DEFAULT_CONTENT_TYPE;\n                }\n                ref = options.headers;\n                for (header in ref) {\n                    if (ref.hasOwnProperty(header)) {\n                        value = ref[header];\n                        xhr.setRequestHeader(header, value);\n                    }\n                }\n                try {\n                    return xhr.send(options.data);\n                } catch (_error) {\n                    e = _error;\n                    return _this._handleError('send', reject, null, e.toString());\n                }\n            };\n        })(this));\n    };\n\n\n    /*\n     * XHRPromise.getXHR() -> XMLHttpRequest\n     */\n    getXHR() {\n        return this._xhr;\n    };\n\n\n    /*\n     * XHRPromise._attachWindowUnload()\n     *\n     * Fix for IE 9 and IE 10\n     * Internet Explorer freezes when you close a webpage during an XHR request\n     * https://support.microsoft.com/kb/2856746\n     *\n     */\n    private _attachWindowUnload() {\n        this._unloadHandler = this._handleWindowUnload.bind(this);\n        if ((window as any).attachEvent) {\n            return (window as any).attachEvent('onunload', this._unloadHandler);\n        }\n    };\n\n\n    /*\n     * XHRPromise._detachWindowUnload()\n     */\n    private _detachWindowUnload() {\n        if ((window as any).detachEvent) {\n            return (window as any).detachEvent('onunload', this._unloadHandler);\n        }\n    };\n\n\n    /*\n     * XHRPromise._getHeaders() -> Object\n     */\n    private _getHeaders() {\n        return this._parseHeaders(this._xhr.getAllResponseHeaders());\n    };\n\n\n    /*\n     * XHRPromise._getResponseText() -> Mixed\n     *\n     * Parses response text JSON if present.\n     */\n    private _getResponseText() {\n        let responseText;\n        responseText = typeof this._xhr.responseText === 'string' ? this._xhr.responseText : '';\n        switch ((this._xhr.getResponseHeader('Content-Type') || '').split(';')[0]) {\n            case 'application/json':\n            case 'text/javascript':\n                responseText = JSON.parse(responseText + '');\n        }\n        return responseText;\n    };\n\n\n    /*\n     * XHRPromise._getResponseUrl() -> String\n     *\n     * Actual response URL after following redirects.\n     */\n    private _getResponseUrl() {\n        if (this._xhr.responseURL != null) {\n            return this._xhr.responseURL;\n        }\n        if (/^X-Request-URL:/m.test(this._xhr.getAllResponseHeaders())) {\n            return this._xhr.getResponseHeader('X-Request-URL');\n        }\n        return '';\n    };\n\n\n    /*\n     * XHRPromise._handleError(reason, reject, status, statusText)\n     * - reason (String)\n     * - reject (Function)\n     * - status (String)\n     * - statusText (String)\n     */\n    private _handleError(reason, reject, status?, statusText?) {\n        this._detachWindowUnload();\n\n        // _this._handleError('browser', reject, null, 'browser doesn\\'t support XMLHttpRequest');\n        // _this._handleError('url', reject, null, 'URL is a required parameter');\n        // _this._handleError('parse', reject, null, 'invalid JSON response');\n        // return _this._handleError('error', reject);\n        // return _this._handleError('timeout', reject);\n        // return _this._handleError('abort', reject);\n        // return _this._handleError('send', reject, null, e.toString());\n        // console.log('_handleError:', reason, this._xhr.status);\n        let code = 404;\n        if (reason === 'timeout') {\n            code = 408;\n        } else if (reason === 'abort') {\n            code = 408;\n        }\n\n        return reject({\n            reason: reason,\n            status: status || this._xhr.status || code,\n            code: status || this._xhr.status || code,\n            statusText: statusText || this._xhr.statusText,\n            xhr: this._xhr\n        });\n    };\n\n\n    /*\n     * XHRPromise._handleWindowUnload()\n     */\n    private _handleWindowUnload() {\n        return this._xhr.abort();\n    };\n\n\n    private trim(str) {\n        return str.replace(/^\\s*|\\s*$/g, '');\n    }\n\n    private isArray(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\n\n    private forEach(list, iterator) {\n        if (toString.call(list) === '[object Array]') {\n            this.forEachArray(list, iterator, this)\n        } else if (typeof list === 'string') {\n            this.forEachString(list, iterator, this)\n        } else {\n            this.forEachObject(list, iterator, this)\n        }\n    }\n\n    private forEachArray(array, iterator, context) {\n        for (let i = 0, len = array.length; i < len; i++) {\n            if (array.hasOwnProperty(i)) {\n                iterator.call(context, array[i], i, array)\n            }\n        }\n    }\n\n    private forEachString(string, iterator, context) {\n        for (let i = 0, len = string.length; i < len; i++) {\n            // no such thing as a sparse string.\n            iterator.call(context, string.charAt(i), i, string)\n        }\n    }\n\n    private forEachObject(object, iterator, context) {\n        for (const k in object) {\n            if (object.hasOwnProperty(k)) {\n                iterator.call(context, object[k], k, object)\n            }\n        }\n    }\n\n    private _parseHeaders(headers) {\n        if (!headers) {\n            return {};\n        }\n\n        const result = {};\n\n        this.forEach(\n            this.trim(headers).split('\\n')\n            , (row) => {\n                const index = row.indexOf(':')\n                    , key = this.trim(row.slice(0, index)).toLowerCase()\n                    , value = this.trim(row.slice(index + 1));\n\n                if (typeof(result[key]) === 'undefined') {\n                    result[key] = value\n                } else if (this.isArray(result[key])) {\n                    result[key].push(value)\n                } else {\n                    result[key] = [result[key], value]\n                }\n            }\n        );\n\n        return result;\n    }\n\n\n}\n","import {XHRPromise} from './xhrpromise';\n\nexport interface XhrOptionsInterface {\n    url: string,\n    data?: any,\n    headers?: any,\n    async?: boolean,\n    username?: string,\n    password?: string,\n    withCredentials?: boolean\n}\n\nexport class Ajax {\n\n    // private static xhr: XHRPromise = new XHRPromise();\n    private xhr: XHRPromise;\n\n    constructor() {\n        this.xhr = new XHRPromise();\n    };\n\n    public post(args: XhrOptionsInterface): Promise<any> {\n\n        const opt: any = {\n            method: 'POST',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    res.code = parseInt(res.status, 10);\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            })\n            .catch(err => {\n\n                // _this._handleError('browser', reject, null, 'browser doesn\\'t support XMLHttpRequest');\n                // _this._handleError('url', reject, null, 'URL is a required parameter');\n                // _this._handleError('parse', reject, null, 'invalid JSON response');\n                // return _this._handleError('error', reject);\n                // return _this._handleError('timeout', reject);\n                // return _this._handleError('abort', reject);\n                // return _this._handleError('send', reject, null, e.toString());\n\n                // if (err.reason === 'timeout') {\n                //     err.code = 408;\n                // } else {\n                //     err.code = 404;\n                // }\n                return Promise.reject(err);\n            });\n    }\n\n    public put(args: XhrOptionsInterface): Promise<any> {\n        const opt: any = {\n            method: 'PUT',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    res.code = parseInt(res.status, 10);\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            })\n            .catch(err => {\n                // if (err.reason === 'timeout') {\n                //     err.code = 408;\n                // } else {\n                //     err.code = 404;\n                // }\n                return Promise.reject(err);\n            });\n    }\n\n    public delete(args: XhrOptionsInterface): Promise<any> {\n        const opt: any = {\n            method: 'DELETE',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    res.code = parseInt(res.status, 10);\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            })\n            .catch(err => {\n                // if (err.reason === 'timeout') {\n                //     err.code = 408;\n                // } else {\n                //     err.code = 404;\n                // }\n                return Promise.reject(err);\n            });\n    }\n\n    public get(args: XhrOptionsInterface): Promise<any> {\n        const opt: any = {\n            method: 'GET',\n            url: args.url\n        };\n        if (args.data) {\n            opt.data = args.data;\n        }\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    res.code = parseInt(res.status, 10);\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            })\n            .catch(err => {\n                // if (err.reason === 'timeout') {\n                //     err.code = 408;\n                // } else {\n                //     err.code = 404;\n                // }\n                return Promise.reject(err);\n            });\n    }\n}\n","import {Ajax} from './ajax';\nimport {LocalStorage} from '../tools';\nimport {SdkInterface, ErrorInterface} from '../sdk/interfaces';\n\nexport class Client {\n\n    public clientId: string;\n    private clientUuid: string;\n    private clientInfo: string;\n    private refreshToken: string;\n    private static refreshCount = 0;\n    private static _clientUuid = 'v2.clientUuid';\n    private static _clientId = 'v2.clientId';\n    private static _refreshCount = 'v2.refreshCount';\n\n    constructor(private appId: string,\n                private URI: string,\n                private storage: LocalStorage,\n                private sdk: SdkInterface) {\n\n        let uuid: string = this.storage.get(Client._clientUuid) || 'uuid-' + Math.random();\n        let info = '_clientInfo'; // this.storage.get(Client._clientInfo);\n        if (window && window.navigator) {\n            info = window.navigator.appName + '@' + window.navigator.appVersion + '-' + window.navigator.userAgent;\n        }\n        if (window && window['device'] && window['device'].uuid) {\n            uuid = window['device'].uuid;\n        }\n        this.setClientUuid(uuid);\n        this.setClientInfo(info);\n        this.clientId = this.storage.get(Client._clientId);\n        Client.refreshCount = this.storage.get(Client._refreshCount) || 0;\n    };\n\n    public setClientId(value: string) {\n        this.clientId = '' + value;\n        this.storage.set(Client._clientId, this.clientId);\n    }\n\n    public setClientUuid(value: string) {\n        this.clientUuid = '' + value;\n        this.storage.set(Client._clientUuid, this.clientUuid);\n    }\n\n    public setClientInfo(value: string) {\n        this.clientInfo = '' + value;\n        // this.storage.set('clientInfo', this.clientInfo);\n    }\n\n    public login(login: string, password: string, updateProperties?: any): Promise<any | ErrorInterface> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        const urlLogin = this.URI + '/users';\n        const dataLogin = {\n            name: login,\n            username: login,\n            email: login,\n            password: password\n        };\n\n        return new Ajax()\n            .post({\n                url: urlLogin,\n                data: dataLogin,\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n            })\n            .then(createdUser => {\n\n                this.setClientId(createdUser._id);\n                const urlToken = this.URI + '/oauth/token';\n                const dataToken = {\n                    grant_type: 'client_credentials',\n                    client_id: this.clientId,\n                    client_secret: password,\n                    client_udid: this.clientUuid,\n                    client_info: this.clientInfo,\n                    audience: this.appId,\n                    scope: JSON.stringify(this.sdk)\n                };\n                return new Ajax()\n                    .post({\n                        url: urlToken,\n                        data: dataToken,\n                        headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                    });\n            });\n    }\n\n    public reAuthenticate(refreshToken: string): Promise<any | ErrorInterface> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        const url = this.URI + '/oauth/token';\n        const data = {\n            grant_type: 'refresh_token',\n            client_id: this.clientId,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            audience: this.appId,\n            scope: JSON.stringify(this.sdk),\n            refresh_token: refreshToken,\n            refresh_extra: Client.refreshCount,\n        };\n\n        return new Ajax()\n            .post({\n                url: url,\n                data: data,\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n            })\n            .then((obj: any) => {\n                Client.refreshCount++;\n                this.storage.set(Client._refreshCount, Client.refreshCount);\n                return Promise.resolve(obj);\n            });\n    }\n\n    public logout(refreshToken?: string): Promise<void | ErrorInterface> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, reason: 'no-api-uri'});\n        }\n\n        // delete this.clientUuid;\n        // delete this.clientId;\n        // this.storage.remove(Client._clientUuid);\n        this.storage.remove(Client._clientId);\n        this.storage.remove(Client._refreshCount);\n        Client.refreshCount = 0;\n\n        if (!refreshToken || !this.clientId) {\n            return Promise.resolve();\n        }\n\n        const url = this.URI + '/oauth/revoke';\n        const data = {\n            token: refreshToken,\n            client_id: this.clientId,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            audience: this.appId,\n            scope: JSON.stringify(this.sdk)\n        };\n\n        return new Ajax()\n            .post({\n                url: url,\n                data: data,\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n            });\n    }\n\n    public isReady(): boolean {\n        return !!this.URI;\n    }\n}\n","import {ErrorInterface} from './interfaces';\n\nexport class Error implements ErrorInterface {\n\n    constructor(public code: number, public reason: string) {\n    };\n\n    equals(err: Error) {\n        return this.code === err.code && this.reason === err.reason;\n    }\n\n    toString(): string {\n        const msg: string = (typeof this.reason === 'string') ? this.reason : JSON.stringify(this.reason);\n        return '' + this.code + ' - ' + msg;\n    }\n\n}\n","import {Client} from './client';\nimport {ModuleServiceLoginOptionsInterface, SdkInterface, ErrorInterface, EndpointInterface} from '../sdk/interfaces';\nimport {Base64, LocalStorage, Xor} from '../tools';\nimport {Ajax} from './ajax';\nimport {ConnectionFindOptionsInterface} from './interfaces';\n\nexport class Connection {\n\n    public fidjId: string;\n    public fidjVersion: string;\n    public fidjCrypto: boolean;\n    public accessToken: string;\n    public accessTokenPrevious: string;\n    public idToken: string;\n    public refreshToken: string;\n    public states: { [s: string]: { state: boolean, time: number, lastTimeWasOk: number }; }; // Map<string, boolean>;\n    public apis: Array<EndpointInterface>;\n\n    private cryptoSalt: string;\n    private cryptoSaltNext: string;\n    private client: Client;\n    private user: any;\n\n    private static _accessToken = 'v2.accessToken';\n    private static _accessTokenPrevious = 'v2.accessTokenPrevious';\n    private static _idToken = 'v2.idToken';\n    private static _refreshToken = 'v2.refreshToken';\n    private static _states = 'v2.states';\n    private static _cryptoSalt = 'v2.cryptoSalt';\n    private static _cryptoSaltNext = 'v2.cryptoSalt.next';\n\n    constructor(private _sdk: SdkInterface,\n                private _storage: LocalStorage) {\n        this.client = null;\n        this.user = null;\n        this.cryptoSalt = this._storage.get(Connection._cryptoSalt) || null;\n        this.cryptoSaltNext = this._storage.get(Connection._cryptoSaltNext) || null;\n        this.accessToken = this._storage.get(Connection._accessToken) || null;\n        this.accessTokenPrevious = this._storage.get('v2.accessTokenPrevious') || null;\n        this.idToken = this._storage.get(Connection._idToken) || null;\n        this.refreshToken = this._storage.get(Connection._refreshToken) || null;\n        this.states = this._storage.get(Connection._states) || {};\n        this.apis = [];\n    };\n\n    isReady(): boolean {\n        return !!this.client && this.client.isReady();\n    }\n\n    destroy(force?: boolean): void {\n\n        this._storage.remove(Connection._accessToken);\n        this._storage.remove(Connection._idToken);\n        this._storage.remove(Connection._refreshToken);\n        this._storage.remove(Connection._states);\n\n        if (this.accessToken) {\n            this.accessTokenPrevious = this.accessToken;\n            this._storage.set(Connection._accessTokenPrevious, this.accessTokenPrevious);\n        }\n\n        if (force) {\n            this._storage.remove(Connection._cryptoSalt);\n            this._storage.remove(Connection._cryptoSaltNext);\n            this._storage.remove(Connection._accessTokenPrevious);\n        }\n\n        this.user = null;\n        if (this.client) {\n            // this.client.setClientId(null);\n            this.client.logout();\n        }\n        this.accessToken = null;\n        this.idToken = null;\n        this.refreshToken = null;\n        this.states = {}; // new Map<string, boolean>();\n    }\n\n    setClient(client: Client): void {\n\n        this.client = client;\n        if (!this.user) {\n            this.user = {};\n        }\n\n        // this._user._id = this._client.clientId;\n        this.user._name = JSON.parse(this.getIdPayload({name: ''})).name;\n    }\n\n    setUser(user: any): void {\n        this.user = user;\n        if (this.user._id) {\n            this.client.setClientId(this.user._id);\n\n            // store only clientId\n            delete this.user._id;\n        }\n    }\n\n    getUser(): any {\n        return this.user;\n    }\n\n    getClient(): Client {\n        return this.client;\n    }\n\n    setCryptoSalt(value: string) {\n        if (this.cryptoSalt !== value && this.cryptoSaltNext !== value) {\n            this.cryptoSaltNext = value;\n            this._storage.set(Connection._cryptoSaltNext, this.cryptoSaltNext);\n        }\n\n        if (!this.cryptoSalt) {\n            this.setCryptoSaltAsVerified();\n        }\n    }\n\n    setCryptoSaltAsVerified() {\n        if (this.cryptoSaltNext) {\n            this.cryptoSalt = this.cryptoSaltNext;\n            this._storage.set(Connection._cryptoSalt, this.cryptoSalt);\n        }\n        this.cryptoSaltNext = null;\n        this._storage.remove(Connection._cryptoSaltNext);\n    }\n\n    encrypt(data: any): string {\n\n        if (typeof data !== 'string') {\n            data = JSON.stringify(data);\n        } else {\n            const dataAsObj = {string: data};\n            data = JSON.stringify(dataAsObj);\n        }\n\n        if (this.fidjCrypto && this.cryptoSalt) {\n            const key = this.cryptoSalt;\n            return Xor.encrypt(data, key);\n        } else {\n            return data;\n        }\n    }\n\n    decrypt(data: string): any {\n        let decrypted = null;\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSaltNext) {\n                const key = this.cryptoSaltNext;\n                decrypted = Xor.decrypt(data, key);\n                decrypted = JSON.parse(decrypted);\n                // if (decrypted) {\n                //    this.setCryptoSaltAsVerified();\n                // }\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSalt) {\n                const key = this.cryptoSalt;\n                decrypted = Xor.decrypt(data, key);\n                decrypted = JSON.parse(decrypted);\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n        try {\n            if (!decrypted && this.fidjCrypto && this.cryptoSalt) {\n                const key = this.cryptoSalt;\n                decrypted = Xor.decrypt(data, key, true);\n                decrypted = JSON.parse(decrypted);\n            }\n        } catch (err) {\n            decrypted = null;\n        }\n\n\n        try {\n\n            if (!decrypted) {\n                decrypted = JSON.parse(data);\n            }\n\n            if (decrypted && decrypted.string) {\n                decrypted = decrypted.string;\n            }\n\n        } catch (err) {\n            decrypted = null;\n        }\n\n        return decrypted;\n    }\n\n    isLogin(): boolean {\n        let exp = true;\n        try {\n            const payload = this.refreshToken.split('.')[1];\n            const decoded = JSON.parse(Base64.decode(payload));\n            exp = ((new Date().getTime() / 1000) >= decoded.exp);\n\n        } catch (e) {\n        }\n        return !exp;\n    }\n\n    // todo reintegrate client.login()\n\n    logout(): Promise<void | ErrorInterface> {\n        return this.getClient().logout(this.refreshToken);\n    }\n\n    getClientId(): string {\n        if (!this.client) {\n            return null;\n        }\n        return this.client.clientId;\n    }\n\n    getIdToken(): string {\n        return this.idToken;\n    }\n\n    getIdPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.getIdToken().split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n        }\n        return def ? def : null;\n    }\n\n    getAccessPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.accessToken.split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n        }\n        return def ? def : null;\n    }\n\n    getPreviousAccessPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const payload = this.accessTokenPrevious.split('.')[1];\n            if (payload) {\n                return Base64.decode(payload);\n            }\n        } catch (e) {\n        }\n        return def ? def : null;\n    }\n\n    refreshConnection(): Promise<any | ErrorInterface> {\n\n        // store states\n        this._storage.set(Connection._states, this.states);\n\n        // token not expired : ok\n        if (this.accessToken) {\n            const payload = this.accessToken.split('.')[1];\n            const decoded = Base64.decode(payload);\n            // console.log('new Date().getTime() < JSON.parse(decoded).exp :', (new Date().getTime() / 1000), JSON.parse(decoded).exp);\n            if ((new Date().getTime() / 1000) < JSON.parse(decoded).exp) {\n                return Promise.resolve(this.getUser());\n            }\n        }\n\n        // remove expired refreshToken\n        if (this.refreshToken) {\n            const payload = this.refreshToken.split('.')[1];\n            const decoded = Base64.decode(payload);\n            if ((new Date().getTime() / 1000) >= JSON.parse(decoded).exp) {\n                this._storage.remove(Connection._refreshToken);\n            }\n        }\n\n        // remove expired accessToken & idToken & store it as Previous one\n        this.accessTokenPrevious = this.accessToken;\n        this._storage.set('v2.accessTokenPrevious', this.accessTokenPrevious);\n        this._storage.remove(Connection._accessToken);\n        this._storage.remove(Connection._idToken);\n        this.accessToken = null;\n        this.idToken = null;\n\n        // refresh authentication\n        return new Promise((resolve, reject) => {\n            this.getClient().reAuthenticate(this.refreshToken)\n                .then(user => {\n                    this.setConnection(user);\n                    resolve(this.getUser());\n                })\n                .catch(err => {\n\n                    // if (err && err.code === 408) {\n                    //     code = 408; // no api uri or basic timeout : offline\n                    // } else if (err && err.code === 404) {\n                    //     code = 404; // page not found : offline\n                    // } else if (err && err.code === 410) {\n                    //     code = 403; // token expired or device not sure : need relogin\n                    // } else if (err) {\n                    //     code = 403; // forbidden : need relogin\n                    // }\n\n                    // resolve(code);\n                    reject(err);\n                });\n        });\n    };\n\n    setConnection(clientUser: any): void {\n\n        // only in private storage\n        if (clientUser.access_token) {\n            this.accessToken = clientUser.access_token;\n            this._storage.set(Connection._accessToken, this.accessToken);\n            delete clientUser.access_token;\n\n            const salt: string = JSON.parse(this.getAccessPayload({salt: ''})).salt;\n            if (salt) {\n                this.setCryptoSalt(salt);\n            }\n        }\n        if (clientUser.id_token) {\n            this.idToken = clientUser.id_token;\n            this._storage.set(Connection._idToken, this.idToken);\n            delete clientUser.id_token;\n        }\n        if (clientUser.refresh_token) {\n            this.refreshToken = clientUser.refresh_token;\n            this._storage.set(Connection._refreshToken, this.refreshToken);\n            delete clientUser.refresh_token;\n        }\n\n        // store changed states\n        this._storage.set(Connection._states, this.states);\n\n        // expose roles, message\n        // clientUser.roles = self.fidjRoles();\n        // clientUser.message = self.fidjMessage();\n        clientUser.roles = JSON.parse(this.getIdPayload({roles: []})).roles;\n        clientUser.message = JSON.parse(this.getIdPayload({message: ''})).message;\n        this.setUser(clientUser);\n    };\n\n    setConnectionOffline(options: ModuleServiceLoginOptionsInterface): void {\n\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n            this._storage.set(Connection._accessToken, this.accessToken);\n        }\n        if (options.idToken) {\n            this.idToken = options.idToken;\n            this._storage.set(Connection._idToken, this.idToken);\n        }\n        if (options.refreshToken) {\n            this.refreshToken = options.refreshToken;\n            this._storage.set(Connection._refreshToken, this.refreshToken);\n        }\n\n        this.setUser({\n            roles: JSON.parse(this.getIdPayload({roles: []})).roles,\n            message: JSON.parse(this.getIdPayload({message: ''})).message,\n            _id: 'demo'\n        });\n    }\n\n    getApiEndpoints(options?: ConnectionFindOptionsInterface): Array<EndpointInterface> {\n\n        // todo : let ea = ['https://fidj/api', 'https://fidj-proxy.herokuapp.com/api'];\n        let ea: EndpointInterface[] = [\n            {key: 'fidj.default', url: 'https://fidj.ovh/api', blocked: false}];\n        let filteredEa = [];\n\n        if (!this._sdk.prod) {\n            ea = [\n                {key: 'fidj.default', url: 'http://localhost:3201/api', blocked: false},\n                {key: 'fidj.default', url: 'https://fidj-sandbox.herokuapp.com/api', blocked: false}\n            ];\n        }\n\n        if (this.accessToken) {\n            const val = this.getAccessPayload({apis: []});\n            const apiEndpoints: EndpointInterface[] = JSON.parse(val).apis;\n            if (apiEndpoints && apiEndpoints.length) {\n                ea = [];\n                apiEndpoints.forEach((endpoint) => {\n                    if (endpoint.url) {\n                        ea.push(endpoint);\n                    }\n                });\n            }\n        }\n\n        if (this.accessTokenPrevious) {\n            const apiEndpoints: EndpointInterface[] = JSON.parse(this.getPreviousAccessPayload({apis: []})).apis;\n            if (apiEndpoints && apiEndpoints.length) {\n                apiEndpoints.forEach((endpoint) => {\n                    if (endpoint.url && ea.filter((r) => r.url === endpoint.url).length === 0) {\n                        ea.push(endpoint);\n                    }\n                });\n            }\n        }\n\n        let couldCheckStates = true;\n        if (this.states && Object.keys(this.states).length) {\n            for (let i = 0; (i < ea.length) && couldCheckStates; i++) {\n                if (!this.states[ea[i].url]) {\n                    couldCheckStates = false;\n                }\n            }\n        } else {\n            couldCheckStates = false;\n        }\n\n        if (options && options.filter) {\n\n            if (couldCheckStates && options.filter === 'theBestOne') {\n                for (let i = 0; (i < ea.length) && (filteredEa.length === 0); i++) {\n                    const endpoint = ea[i];\n                    if (this.states[endpoint.url] &&\n                        this.states[endpoint.url].state) {\n                        filteredEa.push(endpoint);\n                    }\n                }\n            } else if (couldCheckStates && options.filter === 'theBestOldOne') {\n                let bestOldOne: EndpointInterface;\n                for (let i = 0; (i < ea.length); i++) {\n                    const endpoint = ea[i];\n                    if (this.states[endpoint.url] &&\n                        this.states[endpoint.url].lastTimeWasOk &&\n                        (!bestOldOne || this.states[endpoint.url].lastTimeWasOk > this.states[bestOldOne.url].lastTimeWasOk)) {\n\n                        bestOldOne = endpoint;\n                    }\n                }\n                if (bestOldOne) {\n                    filteredEa.push(bestOldOne);\n                }\n            } else if (ea.length) {\n                filteredEa.push(ea[0]);\n            }\n        } else {\n            filteredEa = ea;\n        }\n\n        return filteredEa;\n    };\n\n    getDBs(options?: ConnectionFindOptionsInterface): EndpointInterface[] {\n\n        if (!this.accessToken) {\n            return [];\n        }\n\n        // todo test random DB connection\n        const random = Math.random() % 2;\n        let dbs = JSON.parse(this.getAccessPayload({dbs: []})).dbs || [];\n\n        // need to synchronize db\n        if (random === 0) {\n            dbs = dbs.sort();\n        } else if (random === 1) {\n            dbs = dbs.reverse();\n        }\n\n        let filteredDBs = [];\n        let couldCheckStates = true;\n        if (this.states && Object.keys(this.states).length) {\n            for (let i = 0; (i < dbs.length) && couldCheckStates; i++) {\n                if (!this.states[dbs[i].url]) {\n                    couldCheckStates = false;\n                }\n            }\n        } else {\n            couldCheckStates = false;\n        }\n\n        if (couldCheckStates && options && options.filter === 'theBestOne') {\n            for (let i = 0; (i < dbs.length) && (filteredDBs.length === 0); i++) {\n                const endpoint = dbs[i];\n                if (this.states[endpoint.url] &&\n                    this.states[endpoint.url].state) {\n                    filteredDBs.push(endpoint);\n                }\n            }\n        } else if (couldCheckStates && options && options.filter === 'theBestOnes') {\n            for (let i = 0; (i < dbs.length); i++) {\n                const endpoint = dbs[i];\n                if (this.states[endpoint.url] &&\n                    this.states[endpoint.url].state) {\n                    filteredDBs.push(endpoint);\n                }\n            }\n        } else if (options && options.filter === 'theBestOne' && dbs.length) {\n            filteredDBs.push(dbs[0]);\n        } else {\n            filteredDBs = dbs;\n        }\n\n        return filteredDBs;\n    };\n\n    verifyConnectionStates(): Promise<any | ErrorInterface> {\n\n        const currentTime = new Date().getTime();\n\n        // todo need verification ? not yet (cache)\n        // if (Object.keys(this.states).length > 0) {\n        //     const time = this.states[Object.keys(this.states)[0]].time;\n        //     if (currentTime < time) {\n        //         return Promise.resolve();\n        //     }\n        // }\n\n        // verify via GET status on Endpoints & DBs\n        const promises = [];\n        // this.states = {};\n        this.apis = this.getApiEndpoints();\n        this.apis.forEach((endpointObj) => {\n            let endpointUrl: string = endpointObj.url;\n            if (!endpointUrl) {\n                endpointUrl = endpointObj.toString();\n            }\n            promises.push(new Promise((resolve, reject) => {\n                new Ajax()\n                    .get({\n                        url: endpointUrl + '/status?isok=' + this._sdk.version,\n                        headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                    })\n                    .then(data => {\n                        let state = false;\n                        if (data && data.isok) {\n                            state = true;\n                        }\n                        this.states[endpointUrl] = {state: state, time: currentTime, lastTimeWasOk: currentTime};\n                        resolve();\n                    })\n                    .catch(err => {\n                        let lastTimeWasOk = 0;\n                        if (this.states[endpointUrl]) {\n                            lastTimeWasOk = this.states[endpointUrl].lastTimeWasOk;\n                        }\n                        this.states[endpointUrl] = {state: false, time: currentTime, lastTimeWasOk: lastTimeWasOk};\n                        resolve();\n                    });\n            }));\n        });\n\n        const dbs = this.getDBs();\n        dbs.forEach((dbEndpointObj) => {\n            let dbEndpoint: string = dbEndpointObj.url;\n            if (!dbEndpoint) {\n                dbEndpoint = dbEndpointObj.toString();\n            }\n            promises.push(new Promise((resolve, reject) => {\n                new Ajax()\n                    .get({\n                        url: dbEndpoint,\n                        headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n                    })\n                    .then(data => {\n                        this.states[dbEndpoint] = {state: true, time: currentTime, lastTimeWasOk: currentTime};\n                        resolve();\n                    })\n                    .catch(err => {\n                        let lastTimeWasOk = 0;\n                        if (this.states[dbEndpoint]) {\n                            lastTimeWasOk = this.states[dbEndpoint].lastTimeWasOk;\n                        }\n                        this.states[dbEndpoint] = {state: false, time: currentTime, lastTimeWasOk: lastTimeWasOk};\n                        resolve();\n                    });\n            }));\n        });\n        return Promise.all(promises);\n    };\n\n}\n","// import PouchDB from 'pouchdb';\n// let PouchDB: any;\n\nimport PouchDB from 'pouchdb/dist/pouchdb.js';\nimport {Error} from '../sdk/error';\nimport {EndpointInterface, ErrorInterface} from '../sdk/interfaces';\n\nconst FidjPouch = window['PouchDB'] ? window['PouchDB'] : require('pouchdb').default; // .default;\n\n// load cordova adapter : https://github.com/pouchdb-community/pouchdb-adapter-cordova-sqlite/issues/22\nconst PouchAdapterCordovaSqlite = require('pouchdb-adapter-cordova-sqlite');\nFidjPouch.plugin(PouchAdapterCordovaSqlite);\n\nexport interface SessionCryptoInterface {\n    obj: Object,\n    method: string\n}\n\nexport class Session {\n\n    public dbRecordCount: number;\n    public dbLastSync: number; // Date().getTime();\n\n    private db: PouchDB; // PouchDB\n    private remoteDb: PouchDB; // PouchDB;\n    private remoteUri: string;\n    private dbs: Array<EndpointInterface>;\n\n    constructor() {\n        this.db = null;\n        this.dbRecordCount = 0;\n        this.dbLastSync = null;\n        this.remoteDb = null;\n        this.dbs = [];\n    };\n\n    public isReady(): boolean {\n        return !!this.db;\n    }\n\n\n    public create(uid: string, force?: boolean): Promise<void | ErrorInterface> {\n\n        if (!force && this.db) {\n            return Promise.resolve();\n        }\n\n        this.dbRecordCount = 0;\n        this.dbLastSync = null; // new Date().getTime();\n        this.db = null;\n\n        return new Promise((resolve, reject) => {\n\n            let opts: any = {location: 'default'};\n            try {\n                if (window['cordova']) {\n                    opts = {location: 'default', adapter: 'cordova-sqlite'};\n                    //    const plugin = require('pouchdb-adapter-cordova-sqlite');\n                    //    if (plugin) { Pouch.plugin(plugin); }\n                    //    this.db = new Pouch('fidj_db', {adapter: 'cordova-sqlite'});\n                }\n                // } else {\n                this.db = new FidjPouch('fidj_db_' + uid, opts); // , {adapter: 'websql'} ???\n                // }\n\n                this.db.info()\n                    .then((info) => {\n\n                        // todo if (info.adapter !== 'websql') {\n                        return resolve(this.db);\n                        // }\n\n                        // const newopts: any = opts || {};\n                        // newopts.adapter = 'idb';\n                        //\n                        // const newdb = new Pouch('fidj_db', opts);\n                        // this.db.replicate.to(newdb)\n                        //     .then(() => {\n                        //         this.db = newdb;\n                        //         resolve();\n                        //     })\n                        //     .catch((err) => {\n                        //         reject(new Error(400, err.toString()))\n                        //     });\n\n                    }).catch((err) => {\n                    reject(new Error(400, err))\n                });\n            } catch (err) {\n                reject(new Error(500, err));\n            }\n        });\n    }\n\n    public destroy(): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            this.dbRecordCount = 0;\n            this.dbLastSync = null;\n            return Promise.resolve();\n        }\n\n        if (this.db && !this.db.destroy) {\n            return Promise.reject(new Error(408, 'Need a valid db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.destroy((err, info) => {\n                if (err) {\n                    reject(new Error(500, err));\n                } else {\n                    this.dbRecordCount = 0;\n                    this.dbLastSync = null;\n                    this.db = null;\n                    resolve();\n                }\n            });\n        });\n    };\n\n    public setRemote(dbs: Array<EndpointInterface>): void {\n        this.dbs = dbs;\n    }\n\n    public sync(userId: string): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n        if (!this.dbs || !this.dbs.length) {\n            return Promise.reject(new Error(408, 'need a remote db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            try {\n\n                if (!this.remoteDb || this.remoteUri !== this.dbs[0].url) {\n                    this.remoteUri = this.dbs[0].url;\n                    this.remoteDb = new FidjPouch(this.remoteUri);\n                    // todo , {headers: {'Authorization': 'Bearer ' + id_token}});\n                }\n\n                this.db.replicate.to(this.remoteDb)\n                    .on('complete', (info) => {\n                        return this.remoteDb.replicate.to(this.db,\n                            {\n                                filter: (doc) => {\n                                    return (!!userId && !!doc && doc.fidjUserId === userId);\n                                }\n                            })\n                            .on('complete', () => {\n                                // this.logger\n                                resolve();\n                            })\n                            .on('denied', (err) => reject({code: 403, reason: {second: err}}))\n                            .on('error', (err) => reject({code: 401, reason:  {second: err}}));\n\n                    })\n                    .on('denied', (err) => reject({code: 403, reason:  {first: err}}))\n                    .on('error', (err) => reject({code: 401, reason:  {first: err}}));\n\n            } catch (err) {\n                reject(new Error(500, err));\n            }\n        });\n    }\n\n    public put(data: any,\n               _id: string,\n               uid: string,\n               oid: string,\n               ave: string,\n               crypto?: SessionCryptoInterface): Promise<any | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n\n        if (!data || !_id || !uid || !oid || !ave) {\n            return Promise.reject(new Error(400, 'need formated data'));\n        }\n\n        const dataWithoutIds = JSON.parse(JSON.stringify(data));\n        const toStore: any = {\n            _id: _id,\n            fidjUserId: uid,\n            fidjOrgId: oid,\n            fidjAppVersion: ave\n        };\n        if (dataWithoutIds._rev) {\n            toStore._rev = '' + dataWithoutIds._rev;\n        }\n        delete dataWithoutIds._id;\n        delete dataWithoutIds._rev;\n        delete dataWithoutIds.fidjUserId;\n        delete dataWithoutIds.fidjOrgId;\n        delete dataWithoutIds.fidjAppVersion;\n        delete dataWithoutIds.fidjData;\n\n        let resultAsString = Session.write(Session.value(dataWithoutIds));\n        if (crypto) {\n            resultAsString = crypto.obj[crypto.method](resultAsString);\n            toStore.fidjDacr = resultAsString;\n        } else {\n            toStore.fidjData = resultAsString;\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.put(toStore, (err, response) => {\n                if (response && response.ok && response.id && response.rev) {\n                    this.dbRecordCount++;\n\n                    // propagate _rev & _id\n                    if (typeof data === 'object') {\n                        (data as any)._rev = response.rev;\n                        (data as any)._id = response.id;\n                        resolve(data);\n                    } else {\n                        resolve(response.id);\n                    }\n\n                } else {\n                    reject(new Error(500, err));\n                }\n            });\n        });\n    }\n\n    public remove(data_id: string): Promise<void | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'need db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then((doc) => {\n                    doc._deleted = true;\n                    return this.db.put(doc);\n                })\n                .then((result) => {\n                    resolve();\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public get(data_id: string, crypto?: SessionCryptoInterface): Promise<any | ErrorInterface> {\n\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'Need db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then(row => {\n                    if (!!row && (!!row.fidjDacr || !!row.fidjData)) {\n                        let data = row.fidjDacr;\n                        if (crypto && data) {\n                            data = crypto.obj[crypto.method](data);\n                        } else if (row.fidjData) {\n                            data = JSON.parse(row.fidjData);\n                        }\n                        const resultAsJson = Session.extractJson(data);\n                        if (resultAsJson) {\n                            resultAsJson._id = row._id;\n                            resultAsJson._rev = row._rev;\n                            resolve(JSON.parse(JSON.stringify(resultAsJson)));\n                        } else {\n                            // row._deleted = true;\n                            this.remove(row._id);\n                            reject(new Error(400, 'Bad encoding'));\n                        }\n                    } else {\n                        reject(new Error(400, 'No data found'));\n                    }\n                })\n                .catch(err => reject(new Error(500, err)));\n        });\n    }\n\n    public getAll(crypto?: SessionCryptoInterface): Promise<Array<any> | ErrorInterface> {\n\n        if (!this.db || !(this.db as any).allDocs) {\n            return Promise.reject(new Error(408, 'Need a valid db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            (this.db as any).allDocs({include_docs: true, descending: true})\n                .then(rows => {\n                    const all = [];\n                    rows.rows.forEach(row => {\n                        if (!!row && !!row.doc._id && (!!row.doc.fidjDacr || !!row.doc.fidjData)) {\n                            let data = row.doc.fidjDacr;\n                            if (crypto && data) {\n                                data = crypto.obj[crypto.method](data);\n                            } else if (row.doc.fidjData) {\n                                data = JSON.parse(row.doc.fidjData);\n                            }\n                            const resultAsJson = Session.extractJson(data);\n                            if (resultAsJson) {\n                                resultAsJson._id = row.doc._id;\n                                resultAsJson._rev = row.doc._rev;\n                                all.push(JSON.parse(JSON.stringify(resultAsJson)));\n                            } else {\n                                console.error('Bad encoding : delete row');\n                                // resultAsJson = {};\n                                // resultAsJson._id = row.doc._id;\n                                // resultAsJson._rev = row.doc._rev;\n                                // resultAsJson._deleted = true;\n                                // all.push(resultAsJson);\n                                this.remove(row.doc._id);\n                            }\n                        } else {\n                            console.error('Bad encoding');\n                        }\n                    });\n                    resolve(all);\n                })\n                .catch(err => reject(new Error(400, err)));\n        });\n    }\n\n    public isEmpty(): Promise<boolean | ErrorInterface> {\n\n        if (!this.db || !(this.db as any).allDocs) {\n            return Promise.reject(new Error(408, 'No db'));\n        }\n\n        return new Promise((resolve, reject) => {\n            (this.db as any).allDocs({\n                // filter:  (doc) => {\n                //    if (!self.connection.user || !self.connection.user._id) return doc;\n                //    if (doc.fidjUserId === self.connection.user._id) return doc;\n                // }\n            })\n                .then((response) => {\n                    if (!response) {\n                        reject(new Error(400, 'No response'));\n                    } else {\n                        this.dbRecordCount = response.total_rows;\n                        if (response.total_rows && response.total_rows > 0) {\n                            resolve(false);\n                        } else {\n                            resolve(true);\n                        }\n                    }\n                })\n                .catch((err) => reject(new Error(400, err)));\n        });\n    }\n\n    public info(): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(new Error(408, 'No db'));\n        }\n        return this.db.info();\n    }\n\n    static write(item: any): string {\n        let value = 'null';\n        const t = typeof (item);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: item})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: item});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: item});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: item});\n        }\n        return value;\n    }\n\n    static value(item: any): any {\n        let result = item;\n        if (typeof (item) !== 'object') {\n            // return item;\n        } else if ('string' in item) {\n            result = item.string;\n        } else if ('number' in item) {\n            result = item.number.valueOf();\n        } else if ('bool' in item) {\n            result = item.bool.valueOf();\n        } else if ('json' in item) {\n            result = item.json;\n            if (typeof (result) !== 'object') {\n                result = JSON.parse(result);\n            }\n        }\n        return result;\n    }\n\n    static extractJson(item: any): any {\n        let result = item;\n        if (!item) {\n            return null;\n        }\n        if (typeof (item) === 'object' && 'json' in item) {\n            result = item.json;\n        }\n        if (typeof (result) === 'string') {\n            result = JSON.parse(result);\n        }\n        if (typeof (result) === 'object' && 'json' in result) {\n            result = (result as any).json;\n        }\n        if (typeof result !== 'object') {\n            result = null;\n        }\n        return result;\n    }\n\n}\n","// import PouchDB from 'pouchdb';\n// import * as PouchDB from 'pouchdb/dist/pouchdb.js';\n// import PouchDB from 'pouchdb/dist/pouchdb.js';\nimport * as version from '../version';\nimport * as tools from '../tools';\nimport * as connection from '../connection';\nimport * as session from '../session';\nimport {\n    LoggerInterface,\n    ModuleServiceInitOptionsInterface,\n    ModuleServiceLoginOptionsInterface,\n    SdkInterface,\n    ErrorInterface, EndpointInterface, EndpointFilterInterface\n} from './interfaces';\nimport {SessionCryptoInterface} from '../session/session';\nimport {Error} from './error';\nimport {Ajax} from '../connection/ajax';\n\n// const PouchDB = window['PouchDB'] || require('pouchdb').default;\n\n/**\n * please use its angular.js or angular.io wrapper\n * usefull only for fidj dev team\n */\nexport class InternalService {\n\n    private sdk: SdkInterface;\n    private logger: LoggerInterface;\n    private promise: PromiseConstructor;\n    private storage: tools.LocalStorage;\n    private session: session.Session;\n    private connection: connection.Connection;\n\n    constructor(logger: LoggerInterface, promise: PromiseConstructor) {\n\n        this.sdk = {\n            org: 'fidj',\n            version: version.version,\n            prod: false\n        };\n        this.logger = {\n            log: () => {\n            },\n            error: () => {\n            },\n            warn: () => {\n            }\n        };\n        if (logger) {\n            this.logger = logger;\n        } else if (window.console) { // && logger === window.console\n            this.logger.log = window.console.log;\n            this.logger.error = window.console.error;\n            this.logger.warn = window.console.warn;\n        }\n        // console.log('logger: ', this.logger);\n        this.logger.log('fidj.sdk.service : constructor');\n        if (promise) {\n            this.promise = promise;\n        }\n        this.storage = new tools.LocalStorage(window.localStorage, 'fidj.');\n        this.session = new session.Session();\n        this.connection = new connection.Connection(this.sdk, this.storage);\n    }\n\n    /**\n     * Init connection & session\n     * Check uri\n     * Done each app start\n     *\n     * @param options Optional settings\n     * @param options.fidjId  required use your customized endpoints\n     * @param options.fidjSalt required use your customized endpoints\n     * @param options.fidjVersion required use your customized endpoints\n     * @param options.devMode optional default false, use your customized endpoints\n     * @returns\n     */\n    public fidjInit(fidjId: string, options?: ModuleServiceInitOptionsInterface): Promise<void | ErrorInterface> {\n\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjInit : ', options);\n        if (!fidjId) {\n            self.logger.error('fidj.sdk.service.fidjInit : bad init');\n            return self.promise.reject(new Error(400, 'Need a fidjId'));\n        }\n\n        self.sdk.prod = !options ? true : options.prod;\n\n        return new self.promise((resolve, reject) => {\n            self.connection.verifyConnectionStates()\n                .then(() => {\n                    self.connection.fidjId = fidjId;\n                    self.connection.fidjVersion = self.sdk.version;\n                    self.connection.fidjCrypto = (!options || !options.hasOwnProperty('crypto')) ? true : options.crypto;\n\n                    let theBestUrl: any = self.connection.getApiEndpoints({filter: 'theBestOne'})[0];\n                    let theBestOldUrl: any = self.connection.getApiEndpoints({filter: 'theBestOldOne'})[0];\n                    const isLogin = self.fidjIsLogin();\n\n                    if (theBestUrl && theBestUrl.url) {\n                        theBestUrl = theBestUrl.url;\n                    }\n                    if (theBestOldUrl && theBestOldUrl.url) {\n                        theBestOldUrl = theBestOldUrl.url;\n                    }\n\n                    if (theBestUrl) {\n                        self.connection.setClient(new connection.Client(self.connection.fidjId, theBestUrl, self.storage, self.sdk));\n                        resolve();\n                    } else if (isLogin && theBestOldUrl) {\n                        self.connection.setClient(new connection.Client(self.connection.fidjId, theBestOldUrl, self.storage, self.sdk));\n                        resolve();\n                    } else {\n                        reject(new Error(404, 'Need one connection - or too old SDK version (check update)'));\n                    }\n\n                })\n                .catch((err) => {\n                    self.logger.error('fidj.sdk.service.fidjInit: ', err);\n                    reject(new Error(500, err.toString()));\n                });\n        });\n    };\n\n    /**\n     * Call it if fidjIsLogin() === false\n     * Erase all (db & storage)\n     *\n     * @param login\n     * @param password\n     * @returns\n     */\n    public fidjLogin(login: string, password: string): Promise<any | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjLogin');\n        if (!self.connection.isReady()) {\n            return self.promise.reject(new Error(404, 'Need an intialized FidjService'));\n        }\n\n        return new self.promise((resolve, reject) => {\n            self._removeAll()\n                .then(() => {\n                    return self.connection.verifyConnectionStates();\n                })\n                .then(() => {\n                    return self._createSession(self.connection.fidjId);\n                })\n                .then(() => {\n                    return self._loginInternal(login, password);\n                })\n                .then((user) => {\n                    self.connection.setConnection(user);\n                    self.session.sync(self.connection.getClientId())\n                        .then(() => resolve(self.connection.getUser()))\n                        .catch((err) => resolve(self.connection.getUser()));\n                })\n                .catch((err) => {\n                    self.logger.error('fidj.sdk.service.fidjLogin: ', err.toString());\n                    reject(err);\n                });\n        });\n    };\n\n    /**\n     *\n     * @param options\n     * @param options.accessToken optional\n     * @param options.idToken  optional\n     * @returns\n     */\n    public fidjLoginInDemoMode(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface> {\n        const self = this;\n\n        // generate one day tokens if not set\n        if (!options || !options.accessToken) {\n            const now = new Date();\n            now.setDate(now.getDate() + 1);\n            const tomorrow = now.getTime();\n            const payload = tools.Base64.encode(JSON.stringify({\n                roles: [],\n                message: 'demo',\n                apis: [],\n                endpoints: {},\n                dbs: [],\n                exp: tomorrow\n            }));\n            const jwtSign = tools.Base64.encode(JSON.stringify({}));\n            const token = jwtSign + '.' + payload + '.' + jwtSign;\n            options = {\n                accessToken: token,\n                idToken: token,\n                refreshToken: token\n            };\n        }\n\n        return new self.promise((resolve, reject) => {\n            self._removeAll()\n                .then(() => {\n                    return self._createSession(self.connection.fidjId);\n                })\n                .then(() => {\n                    self.connection.setConnectionOffline(options);\n                    resolve(self.connection.getUser());\n                })\n                .catch((err) => {\n                    self.logger.error('fidj.sdk.service.fidjLogin error: ', err);\n                    reject(err);\n                });\n        });\n    };\n\n    public fidjGetEndpoints(filter?: EndpointFilterInterface): Array<EndpointInterface> {\n\n        if (!filter) {\n            filter = {showBlocked: false};\n        }\n        let endpoints = JSON.parse(this.connection.getAccessPayload({endpoints: []})).endpoints;\n        if (!endpoints) {\n            return [];\n        }\n\n        endpoints = endpoints.filter((endpoint: EndpointInterface) => {\n            let ok = true;\n            if (ok && filter.key) {\n                ok = (endpoint.key === filter.key);\n            }\n            if (ok && !filter.showBlocked) {\n                ok = !endpoint.blocked;\n            }\n            return ok;\n        });\n        return endpoints;\n    };\n\n    public fidjRoles(): Array<string> {\n        return JSON.parse(this.connection.getIdPayload({roles: []})).roles;\n    };\n\n    public fidjMessage(): string {\n        return JSON.parse(this.connection.getIdPayload({message: ''})).message;\n    };\n\n    public fidjIsLogin(): boolean {\n        return this.connection.isLogin();\n    };\n\n    public fidjLogout(force?: boolean): Promise<void | ErrorInterface> {\n        const self = this;\n        if (!self.connection.getClient() && !force) {\n            return self._removeAll()\n                .then(() => {\n                    return this.session.create(self.connection.fidjId, true);\n                });\n        }\n\n        return self.connection.logout()\n            .then(() => {\n                return self._removeAll();\n            })\n            .catch(() => {\n                return self._removeAll();\n            })\n            .then(() => {\n                return this.session.create(self.connection.fidjId, true);\n            });\n    };\n\n    /**\n     * Synchronize DB\n     *\n     *\n     * @param fnInitFirstData a function with db as input and that return promise: call if DB is empty\n     * @param fnInitFirstData_Arg arg to set to fnInitFirstData()\n     * @returns  promise\n     */\n    public fidjSync(fnInitFirstData?, fnInitFirstData_Arg?): Promise<void | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjSync');\n        // if (!self.session.isReady()) {\n        //    return self.promise.reject('fidj.sdk.service.fidjSync : DB sync impossible. Did you login ?');\n        // }\n\n        const firstSync = (self.session.dbLastSync === null);\n\n        return new self.promise((resolve, reject) => {\n\n            self._createSession(self.connection.fidjId)\n                .then(() => {\n                    return self.session.sync(self.connection.getClientId());\n                })\n                .then(() => {\n                    self.logger.log('fidj.sdk.service.fidjSync resolved');\n                    return self.session.isEmpty();\n                })\n                .catch((err) => {\n                    self.logger.warn('fidj.sdk.service.fidjSync warn: ', err);\n                    return self.session.isEmpty();\n                })\n                .then((isEmpty) => {\n                    self.logger.log('fidj.sdk.service.fidjSync isEmpty : ', isEmpty, firstSync);\n\n                    return new Promise((resolveEmpty, rejectEmptyNotUsed) => {\n                        if (isEmpty && firstSync && fnInitFirstData) {\n                            const ret = fnInitFirstData(fnInitFirstData_Arg);\n                            if (ret && ret['catch'] instanceof Function) {\n                                ret.then(resolveEmpty).catch(reject);\n                            }\n                            if (typeof ret === 'string') {\n                                self.logger.log(ret);\n                            }\n                        }\n                        resolveEmpty(); // self.connection.getUser());\n                    });\n                })\n                .then((info) => {\n                    self.logger.log('fidj.sdk.service.fidjSync fnInitFirstData resolved: ', info);\n                    self.session.dbLastSync = new Date().getTime();\n                    return self.session.info();\n                })\n                .then((result: any) => {\n                    self.session.dbRecordCount = 0;\n                    if (result && result.doc_count) {\n                        self.session.dbRecordCount = result.doc_count;\n                    }\n                    self.logger.log('fidj.sdk.service.fidjSync _dbRecordCount : ' + self.session.dbRecordCount);\n\n                    return self.connection.refreshConnection();\n                })\n                .then((user) => {\n                    resolve(); // self.connection.getUser()\n                })\n                .catch((err: ErrorInterface) => {\n                    // console.error(err);\n\n                    if (err && (err.code === 403 || err.code === 410)) {\n                        this.fidjLogout()\n                            .then(() => {\n                                reject({code: 403, reason: 'Synchronization unauthorized : need to login again.'});\n                            })\n                            .catch(() => {\n                                reject({code: 403, reason: 'Synchronization unauthorized : need to login again.'});\n                            });\n                    } else if (err && err.code) {\n                        // todo what to do with this err ?\n                        resolve();\n                    } else {\n                        const errMessage = 'Error during syncronisation: ' + err.toString();\n                        // self.logger.error(errMessage);\n                        reject({code: 500, reason: errMessage});\n                    }\n                })\n            ;\n        });\n    };\n\n    public fidjPutInDb(data: any): Promise<string | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjPutInDb: ', data);\n\n        if (!self.connection.getClientId() || !self.session.isReady()) {\n            return self.promise.reject(new Error(401, 'DB put impossible. Need a user logged in.'));\n        }\n\n        let _id: string;\n        if (data && typeof data === 'object' && Object.keys(data).indexOf('_id')) {\n            _id = data._id;\n        }\n        if (!_id) {\n            _id = self._generateObjectUniqueId(self.connection.fidjId);\n        }\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'encrypt'\n            }\n        }\n\n        return self.session.put(\n            data,\n            _id,\n            self.connection.getClientId(),\n            self.sdk.org,\n            self.connection.fidjVersion,\n            crypto);\n    };\n\n    public fidjRemoveInDb(data_id: string): Promise<void | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service.fidjRemoveInDb ', data_id);\n\n        if (!self.session.isReady()) {\n            return self.promise.reject(new Error(401, 'DB remove impossible. ' +\n                'Need a user logged in.'));\n        }\n\n        if (!data_id || typeof data_id !== 'string') {\n            return self.promise.reject(new Error(400, 'DB remove impossible. ' +\n                'Need the data._id.'));\n        }\n\n        return self.session.remove(data_id);\n    };\n\n    public fidjFindInDb(data_id: string): Promise<any | ErrorInterface> {\n        const self = this;\n        if (!self.connection.getClientId() || !self.session.isReady()) {\n            return self.promise.reject(new Error(401, 'fidj.sdk.service.fidjFindInDb : need a user logged in.'));\n        }\n\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.get(data_id, crypto);\n    };\n\n    public fidjFindAllInDb(): Promise<Array<any> | ErrorInterface> {\n        const self = this;\n\n        if (!self.connection.getClientId() || !self.session.isReady()) {\n            return self.promise.reject(new Error(401, 'Need a user logged in.'));\n        }\n\n        let crypto: SessionCryptoInterface;\n        if (self.connection.fidjCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.getAll(crypto)\n            .then(results => {\n                self.connection.setCryptoSaltAsVerified();\n                return self.promise.resolve((results as Array<any>));\n            });\n    };\n\n    public fidjPostOnEndpoint(key: string, data?: any): Promise<any | ErrorInterface> {\n        const filter: EndpointFilterInterface = {\n            key: key\n        };\n        const endpoints = this.fidjGetEndpoints(filter);\n        if (!endpoints || endpoints.length !== 1) {\n            return this.promise.reject(\n                new Error(400,\n                    'fidj.sdk.service.fidjPostOnEndpoint : endpoint does not exist.'));\n        }\n\n        const endpointUrl = endpoints[0].url;\n        const jwt = this.connection.getIdToken();\n        return new Ajax()\n            .post({\n                url: endpointUrl,\n                // not used : withCredentials: true,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Authorization': 'Bearer ' + jwt\n                },\n                data: data\n            });\n    };\n\n    public fidjGetIdToken(): string {\n        return this.connection.getIdToken();\n    };\n\n    // Internal functions\n\n    /**\n     * Logout then Login\n     *\n     * @param login\n     * @param password\n     * @param updateProperties\n     */\n    private _loginInternal(login: string, password: string, updateProperties?: any): Promise<any | ErrorInterface> {\n        const self = this;\n        self.logger.log('fidj.sdk.service._loginInternal');\n        if (!self.connection.isReady()) {\n            return self.promise.reject(new Error(403, 'Need an intialized FidjService'));\n        }\n\n        return new self.promise((resolve, reject) => {\n\n                self.connection.logout()\n                    .then(() => {\n                        return self.connection.getClient().login(login, password, updateProperties);\n                    })\n                    .catch((err) => {\n                        return self.connection.getClient().login(login, password, updateProperties);\n                    })\n                    .then(loginUser => {\n                        loginUser.email = login;\n                        resolve(loginUser);\n                    })\n                    .catch(err => {\n                        self.logger.error('fidj.sdk.service._loginInternal error : ' + err);\n                        reject(err);\n                    });\n            }\n        );\n    };\n\n    protected _removeAll(): Promise<void | ErrorInterface> {\n        this.connection.destroy();\n        return this.session.destroy();\n    };\n\n    private _createSession(uid: string): Promise<void | ErrorInterface> {\n        this.session.setRemote(this.connection.getDBs({filter: 'theBestOnes'}));\n        return this.session.create(uid);\n    };\n\n    private _testPromise(a?): Promise<any> {\n        if (a) {\n            return this.promise.resolve('test promise ok ' + a);\n        }\n        return new this.promise((resolve, reject) => {\n            resolve('test promise ok');\n        });\n    };\n\n    private static _srvDataUniqId = 0;\n\n    private _generateObjectUniqueId(appName, type?, name?) {\n\n        // return null;\n        const now = new Date();\n        const simpleDate = '' + now.getFullYear() + '' + now.getMonth() + '' + now.getDate()\n            + '' + now.getHours() + '' + now.getMinutes(); // new Date().toISOString();\n        const sequId = ++InternalService._srvDataUniqId;\n        let UId = '';\n        if (appName && appName.charAt(0)) {\n            UId += appName.charAt(0) + '';\n        }\n        if (type && type.length > 3) {\n            UId += type.substring(0, 4);\n        }\n        if (name && name.length > 3) {\n            UId += name.substring(0, 4);\n        }\n        UId += simpleDate + '' + sequId;\n        return UId;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {\n    LoggerInterface, ModuleServiceInterface, ModuleServiceInitOptionsInterface, ModuleServiceLoginOptionsInterface,\n    ErrorInterface, EndpointInterface\n} from './interfaces';\nimport {InternalService} from './internal.service';\nimport {Error as FidjError} from '../connection';\n\n/**\n * Angular2+ FidjService\n * @see ModuleServiceInterface\n *\n * @exemple\n *      // ... after install :\n *      // $ npm install --save-dev fidj\n *      // then init your app.js & use it in your services\n *\n * <script src=\"https://gist.githubusercontent.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46/raw/5fff69dd9c15f692a856db62cf334b724ef3f4ac/angular.fidj.inject.js\"></script>\n *\n * <script src=\"https://gist.githubusercontent.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46/raw/5fff69dd9c15f692a856db62cf334b724ef3f4ac/angular.fidj.sync.js\"></script>\n *\n *\n */\n@Injectable()\nexport class FidjService implements ModuleServiceInterface {\n\n    private logger: LoggerInterface;\n    private fidjService: InternalService;\n    private promise: any;\n\n    constructor() {\n        this.logger = new LoggerService();\n        this.promise = Promise;\n        this.fidjService = null;\n        // let pouchdbRequired = PouchDB;\n        // pouchdbRequired.error();\n    };\n\n    public init(fidjId, options?: ModuleServiceInitOptionsInterface): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            this.fidjService = new InternalService(this.logger, this.promise);\n        }\n        /*\n        if (options && options.forcedEndpoint) {\n            this.fidjService.setAuthEndpoint(options.forcedEndpoint);\n        }\n        if (options && options.forcedDBEndpoint) {\n            this.fidjService.setDBEndpoint(options.forcedDBEndpoint);\n        }*/\n        return this.fidjService.fidjInit(fidjId, options);\n    };\n\n    public login(login, password): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.login : not initialized.'));\n        }\n        return this.fidjService.fidjLogin(login, password);\n    };\n\n    public loginAsDemo(options?: ModuleServiceLoginOptionsInterface): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.loginAsDemo : not initialized.'));\n        }\n        return this.fidjService.fidjLoginInDemoMode(options);\n    };\n\n    public isLoggedIn(): boolean {\n        if (!this.fidjService) {\n            return false; // this.promise.reject('fidj.sdk.angular2.isLoggedIn : not initialized.');\n        }\n        return this.fidjService.fidjIsLogin();\n    };\n\n    public getRoles(): Array<string> {\n        if (!this.fidjService) {\n            return [];\n        }\n        return this.fidjService.fidjRoles();\n    };\n\n    public getEndpoints(): Array<EndpointInterface> {\n        if (!this.fidjService) {\n            return [];\n        }\n        return this.fidjService.fidjGetEndpoints();\n    };\n\n    public postOnEndpoint(key: string, data: any): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.loginAsDemo : not initialized.'));\n        }\n        return this.fidjService.fidjPostOnEndpoint(key, data);\n    };\n\n    public getIdToken(): string {\n        if (!this.fidjService) {\n            return;\n        }\n        return this.fidjService.fidjGetIdToken();\n    };\n\n    public getMessage(): string {\n        if (!this.fidjService) {\n            return '';\n        }\n        return this.fidjService.fidjMessage();\n    };\n\n    public logout(force?: boolean): Promise<void | ErrorInterface> {\n        if (force || !this.fidjService) {\n            return this.promise.reject(new FidjError(303, 'fidj.sdk.angular2.logout : not initialized.'));\n        }\n        return this.fidjService.fidjLogout(force);\n    };\n\n    /**\n     *\n     * Synchronize DB\n     * @param fnInitFirstData  a function with db as input and that return promise: call if DB is empty\n     * @returns promise with this.session.db\n     * @memberof fidj.angularService\n     *\n     * @example\n     *  let initDb = function() {\n     *     this.fidjService.put('my first row');\n     *  };\n     *  this.fidjService.sync(initDb)\n     *  .then(user => ...)\n     *  .catch(err => ...)\n     *\n     */\n    public sync(fnInitFirstData?): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.sync : not initialized.'));\n        }\n        return this.fidjService.fidjSync(fnInitFirstData, this);\n    };\n\n    /**\n     * Store data in your session\n     *\n     * @param data to store\n     * @returns\n     */\n    public put(data: any): Promise<string | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.put : not initialized.'));\n        }\n        return this.fidjService.fidjPutInDb(data);\n    };\n\n    /**\n     * Find object Id and remove it from your session\n     *\n     * @param id of object to find and remove\n     * @returns\n     */\n    public remove(id: string): Promise<void | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.remove : not initialized.'));\n        }\n        return this.fidjService.fidjRemoveInDb(id);\n    };\n\n    /**\n     * Find\n     */\n    public find(id: string): Promise<any | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.find : not initialized.'));\n        }\n        return this.fidjService.fidjFindInDb(id);\n    };\n\n    public findAll(): Promise<any[] | ErrorInterface> {\n        if (!this.fidjService) {\n            return this.promise.reject(new FidjError(401, 'fidj.sdk.angular2.findAll : not initialized.'));\n        }\n        return this.fidjService.fidjFindAllInDb();\n    };\n\n}\n\nexport class LoggerService implements LoggerInterface {\n    log(message: string, args: [any]) {\n        console.log(message, args);\n    }\n\n    error(message: string, args: [any]) {\n        console.error(message, args);\n    }\n\n    warn(message: string, args: [any]) {\n        console.warn(message, args);\n    }\n}\n\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FidjService} from './angular.service';\n\n\n/**\n * `NgModule` which provides associated services.\n *\n * ...\n *\n * @stable\n */\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [],\n\n    exports: [],\n\n    providers: [FidjService]\n})\nexport class FidjModule {\n    constructor() {\n    }\n}\n\n\n/**\n * module FidjModule\n *\n * exemple\n *      // ... after install :\n *      // $ npm install fidj\n *      // then init your app.js & use it in your services\n *\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n *\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n */\n"],"names":["Error","version.version","tools.LocalStorage","session.Session","connection.Connection","connection.Client","tools.Base64","FidjError"],"mappings":"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"}
